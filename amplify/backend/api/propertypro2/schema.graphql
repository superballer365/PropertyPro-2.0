type Session @model @auth(rules: [{ allow: owner, identityClaim: "email" }]) {
  id: ID!
  owner: String!
  name: String!
  searchCity: String!
  searchBounds: BoundingBox!
  listings: [Listing!]
  pointsOfInterest: [PointOfInterest!]
  roommates: [User!]
}

type User {
  userName: String!
  email: String!
}

type Listing {
  id: ID!
  name: String!
  address: String!
  location: Coordinate!
  price: Float!
  numberOfBedrooms: Int!
  numberOfBathrooms: Float!
  link: String
  pictures: [String!]
}

type PointOfInterest {
  id: ID!
  name: String!
  type: PointOfInterestType!
  address: String!
  location: Coordinate!
}

enum PointOfInterestType {
  WORK
  OTHER
}

type Coordinate {
  lat: Float!
  lng: Float!
}

type BoundingBox {
  bottomLeft: Coordinate!
  topRight: Coordinate!
}

type GetListingInfoResponse {
  address: String
  price: Float
  numberOfBedrooms: Int
  numberOfBathrooms: Float
  pictures: [String!]
}

type Query {
  getListingPictures(listingUrl: String!): [String!]!
    @function(name: "listingLinkParser-${env}")
  getListingInfo(listingUrl: String!): GetListingInfoResponse!
    @function(name: "listingLinkParser-${env}")
}
