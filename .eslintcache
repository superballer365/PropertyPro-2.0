[{"/Users/mattbalnis/Repos/PropertyPro2/src/index.tsx":"1","/Users/mattbalnis/Repos/PropertyPro2/src/reportWebVitals.ts":"2","/Users/mattbalnis/Repos/PropertyPro2/src/Initialize.ts":"3","/Users/mattbalnis/Repos/PropertyPro2/src/App.tsx":"4","/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/AuthorizationContext.tsx":"5","/Users/mattbalnis/Repos/PropertyPro2/src/aws-exports.js":"6","/Users/mattbalnis/Repos/PropertyPro2/src/Components/Header.tsx":"7","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/About/AboutPage.tsx":"8","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Loading/LoadingPage.tsx":"9","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Landing/LandingPage.tsx":"10","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Settings/SettingsPage.tsx":"11","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/HomePage.tsx":"12","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/SessionViewerPage.tsx":"13","/Users/mattbalnis/Repos/PropertyPro2/src/Components/HeaderDropdown.tsx":"14","/Users/mattbalnis/Repos/PropertyPro2/src/Components/LoadingSpinner.tsx":"15","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/SessionViewerDashboard.tsx":"16","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Error/ErrorPage.tsx":"17","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/HomeDashboard.tsx":"18","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/index.ts":"19","/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/ListingContext.tsx":"20","/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/PointOfInterestContext.tsx":"21","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/SidePanel.tsx":"22","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/NewSessionSection.tsx":"23","/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/MapContext.tsx":"24","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Map.tsx":"25","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/ExistingSessionsSection.tsx":"26","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useSession.tsx":"27","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/NewSessionDialog.tsx":"28","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/MapMarker.tsx":"29","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/EditSessionDialog.tsx":"30","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointsOfInterestPanel.tsx":"31","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/DirectionsPanel.tsx":"32","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingsPanel.tsx":"33","/Users/mattbalnis/Repos/PropertyPro2/src/Models/Session.ts":"34","/Users/mattbalnis/Repos/PropertyPro2/src/graphql/mutations.ts":"35","/Users/mattbalnis/Repos/PropertyPro2/src/graphql/queries.ts":"36","/Users/mattbalnis/Repos/PropertyPro2/src/graphql/callGraphQL.ts":"37","/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Places/Geocoding.ts":"38","/Users/mattbalnis/Repos/PropertyPro2/src/Components/AddressSearchBar.tsx":"39","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestMarker.tsx":"40","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingMarker.tsx":"41","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingViewer.tsx":"42","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/NewListingDialog.tsx":"43","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingsList.tsx":"44","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/EditListingDialog.tsx":"45","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/address.tsx":"46","/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Places/index.ts":"47","/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Places/AutoComplete.ts":"48","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/DirectionsForm.tsx":"49","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestViewer.tsx":"50","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointsOfInterestList.tsx":"51","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/NewPointOfInterestDialog.tsx":"52","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/DirectionsResults.tsx":"53","/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Routes/index.ts":"54","/Users/mattbalnis/Repos/PropertyPro2/src/API.ts":"55","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/TravelModeButton.tsx":"56","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/EditPointOfInterestDialog.tsx":"57","/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Routes/Directions.ts":"58","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useOnClickOutside.tsx":"59","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useSelectedListing.tsx":"60","/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/SessionContext.tsx":"61","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useSelectedPointOfInterest.tsx":"62","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingsListItem.tsx":"63","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingFilters.tsx":"64","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Roommates/RoommatesPanel.tsx":"65","/Users/mattbalnis/Repos/PropertyPro2/src/API/AWS Cognito/index.tsx":"66","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Roommates/AddRoommateDialog.tsx":"67","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Roommates/RoommatesList.tsx":"68","/Users/mattbalnis/Repos/PropertyPro2/src/Components/FittedImage.tsx":"69","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingPicturesDialog.tsx":"70","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Crawlers/index.ts":"71","/Users/mattbalnis/Repos/PropertyPro2/src/Components/Tooltip.tsx":"72","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingDropdown.tsx":"73","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestDropdown.tsx":"74","/Users/mattbalnis/Repos/PropertyPro2/src/graphql/subscriptions.ts":"75"},{"size":1230,"mtime":1644370097801,"results":"76","hashOfConfig":"77"},{"size":425,"mtime":1641740361127,"results":"78","hashOfConfig":"77"},{"size":1459,"mtime":1644784914195,"results":"79","hashOfConfig":"77"},{"size":1603,"mtime":1643852925509,"results":"80","hashOfConfig":"77"},{"size":1829,"mtime":1641740361118,"results":"81","hashOfConfig":"77"},{"size":1832,"mtime":1645157788686,"results":"82","hashOfConfig":"77"},{"size":727,"mtime":1641740361118,"results":"83","hashOfConfig":"77"},{"size":202,"mtime":1641740361120,"results":"84","hashOfConfig":"77"},{"size":655,"mtime":1641740361121,"results":"85","hashOfConfig":"77"},{"size":995,"mtime":1641740361121,"results":"86","hashOfConfig":"77"},{"size":208,"mtime":1641740361125,"results":"87","hashOfConfig":"77"},{"size":269,"mtime":1641740361121,"results":"88","hashOfConfig":"77"},{"size":1432,"mtime":1641752206898,"results":"89","hashOfConfig":"77"},{"size":928,"mtime":1641740361118,"results":"90","hashOfConfig":"77"},{"size":864,"mtime":1641740361118,"results":"91","hashOfConfig":"77"},{"size":1955,"mtime":1645307587264,"results":"92","hashOfConfig":"77"},{"size":287,"mtime":1641740361120,"results":"93","hashOfConfig":"77"},{"size":289,"mtime":1643856656220,"results":"94","hashOfConfig":"77"},{"size":67,"mtime":1641752206898,"results":"95","hashOfConfig":"77"},{"size":4032,"mtime":1642885140061,"results":"96","hashOfConfig":"77"},{"size":1881,"mtime":1642283392535,"results":"97","hashOfConfig":"77"},{"size":2529,"mtime":1644464303186,"results":"98","hashOfConfig":"77"},{"size":864,"mtime":1641740361121,"results":"99","hashOfConfig":"77"},{"size":2241,"mtime":1641740361119,"results":"100","hashOfConfig":"77"},{"size":4932,"mtime":1642367598620,"results":"101","hashOfConfig":"77"},{"size":3183,"mtime":1644370097774,"results":"102","hashOfConfig":"77"},{"size":2503,"mtime":1641740361125,"results":"103","hashOfConfig":"77"},{"size":4986,"mtime":1644370097777,"results":"104","hashOfConfig":"77"},{"size":990,"mtime":1641952676319,"results":"105","hashOfConfig":"77"},{"size":3023,"mtime":1644370203334,"results":"106","hashOfConfig":"77"},{"size":1274,"mtime":1642283539455,"results":"107","hashOfConfig":"77"},{"size":2145,"mtime":1644370097777,"results":"108","hashOfConfig":"77"},{"size":1000,"mtime":1642283175937,"results":"109","hashOfConfig":"77"},{"size":2553,"mtime":1644370097771,"results":"110","hashOfConfig":"77"},{"size":2578,"mtime":1645157857080,"results":"111","hashOfConfig":"77"},{"size":2170,"mtime":1645157857049,"results":"112","hashOfConfig":"77"},{"size":980,"mtime":1644370097794,"results":"113","hashOfConfig":"77"},{"size":1949,"mtime":1641740361117,"results":"114","hashOfConfig":"77"},{"size":1568,"mtime":1644784852596,"results":"115","hashOfConfig":"77"},{"size":4742,"mtime":1644464303181,"results":"116","hashOfConfig":"77"},{"size":4442,"mtime":1644464303180,"results":"117","hashOfConfig":"77"},{"size":4757,"mtime":1644784852598,"results":"118","hashOfConfig":"77"},{"size":11073,"mtime":1644464303181,"results":"119","hashOfConfig":"77"},{"size":3356,"mtime":1644464303180,"results":"120","hashOfConfig":"77"},{"size":9100,"mtime":1644370097777,"results":"121","hashOfConfig":"77"},{"size":191,"mtime":1644784852601,"results":"122","hashOfConfig":"77"},{"size":480,"mtime":1641740361117,"results":"123","hashOfConfig":"77"},{"size":2193,"mtime":1641740361117,"results":"124","hashOfConfig":"77"},{"size":4167,"mtime":1644784852597,"results":"125","hashOfConfig":"77"},{"size":3365,"mtime":1642283486075,"results":"126","hashOfConfig":"77"},{"size":3094,"mtime":1644784852601,"results":"127","hashOfConfig":"77"},{"size":6841,"mtime":1644370097786,"results":"128","hashOfConfig":"77"},{"size":1668,"mtime":1642037272560,"results":"129","hashOfConfig":"77"},{"size":30,"mtime":1641740361117,"results":"130","hashOfConfig":"77"},{"size":17404,"mtime":1645157857495,"results":"131","hashOfConfig":"77"},{"size":1102,"mtime":1641740361122,"results":"132","hashOfConfig":"77"},{"size":7090,"mtime":1644370097783,"results":"133","hashOfConfig":"77"},{"size":439,"mtime":1641740361117,"results":"134","hashOfConfig":"77"},{"size":1062,"mtime":1641752206898,"results":"135","hashOfConfig":"77"},{"size":1071,"mtime":1642885140065,"results":"136","hashOfConfig":"77"},{"size":553,"mtime":1642885140062,"results":"137","hashOfConfig":"77"},{"size":1190,"mtime":1641952676322,"results":"138","hashOfConfig":"77"},{"size":2188,"mtime":1644784852599,"results":"139","hashOfConfig":"77"},{"size":3501,"mtime":1642282876366,"results":"140","hashOfConfig":"77"},{"size":1180,"mtime":1644464303185,"results":"141","hashOfConfig":"77"},{"size":2033,"mtime":1642546891420,"results":"142","hashOfConfig":"77"},{"size":1677,"mtime":1644370097787,"results":"143","hashOfConfig":"77"},{"size":1742,"mtime":1644464303184,"results":"144","hashOfConfig":"77"},{"size":450,"mtime":1643491711167,"results":"145","hashOfConfig":"77"},{"size":595,"mtime":1643491711171,"results":"146","hashOfConfig":"77"},{"size":431,"mtime":1644370097792,"results":"147","hashOfConfig":"77"},{"size":1121,"mtime":1644464303179,"results":"148","hashOfConfig":"77"},{"size":3220,"mtime":1644784852598,"results":"149","hashOfConfig":"77"},{"size":3383,"mtime":1644784852600,"results":"150","hashOfConfig":"77"},{"size":3099,"mtime":1645157857125,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"r8oxen",{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"154"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"154"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"154"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"154"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"154"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"154"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"154"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"154"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"154"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"154"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"154"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"154"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"154"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"154"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"154"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mattbalnis/Repos/PropertyPro2/src/index.tsx",[],["318","319"],"/Users/mattbalnis/Repos/PropertyPro2/src/reportWebVitals.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Initialize.ts",["320","321"],"/Users/mattbalnis/Repos/PropertyPro2/src/App.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/AuthorizationContext.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/aws-exports.js",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Components/Header.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/About/AboutPage.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Loading/LoadingPage.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Landing/LandingPage.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Settings/SettingsPage.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/HomePage.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/SessionViewerPage.tsx",["322"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoadingSpinner from \"../../Components/LoadingSpinner\";\nimport SessionViewerDashboard from \"./Components/SessionViewerDashboard\";\nimport SessionData from \"../../Models/Session\";\nimport { useSession } from \"../../Utils/Hooks\";\nimport ErrorPage from \"../Error/ErrorPage\";\n\nexport default function SessionViewerPage() {\n  let { sessionId } = useParams<string>() as { sessionId: string };\n\n  const {\n    isLoading: loadingSessions,\n    isError,\n    data: matchingSession,\n  } = useSession(sessionId);\n\n  const [sessionLoadError, setSessionLoadError] = React.useState(false);\n  const [sessionFromRoute, setSessionFromRoute] = React.useState<SessionData>();\n\n  // set the selected session based on the ID from the route\n  React.useEffect(() => {\n    if (loadingSessions) return;\n    if (!sessionId) {\n      setSessionLoadError(true);\n      return;\n    }\n\n    if (!matchingSession) {\n      setSessionLoadError(true);\n    } else {\n      setSessionFromRoute(matchingSession);\n      setSessionLoadError(false);\n    }\n  }, [sessionId, loadingSessions, matchingSession]);\n\n  if (sessionLoadError)\n    return (\n      <ErrorPage text=\"Could not find a session matching the specified id.\" />\n    );\n\n  if (loadingSessions || !sessionFromRoute)\n    return <LoadingSpinner text=\"loading session...\" />;\n\n  return <SessionViewerDashboard session={sessionFromRoute} />;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Components/HeaderDropdown.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Components/LoadingSpinner.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/SessionViewerDashboard.tsx",["323","324"],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Error/ErrorPage.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/HomeDashboard.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/index.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/ListingContext.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/PointOfInterestContext.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/SidePanel.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/NewSessionSection.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/MapContext.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Map.tsx",["325","326"],"import React from \"react\";\nimport GoogleMapReact, { fitBounds } from \"google-map-react\";\nimport { Coordinate } from \"../../../API/Google Places/Geocoding\";\nimport { ListingContext } from \"../../../Contexts/ListingContext\";\nimport { PointOfInterestContext } from \"../../../Contexts/PointOfInterestContext\";\nimport MapMarker, { MapMarkerProps, MarkerType } from \"./MapMarker\";\nimport { MapContext } from \"../../../Contexts/MapContext\";\nimport { SessionContext } from \"../../../Contexts/SessionContext\";\n\nexport default function Map() {\n  const { session } = React.useContext(SessionContext);\n  const {\n    selectedListing,\n    filteredListings,\n    hoveredListingIds,\n    setSelectedListing,\n    addHoveredListingId,\n    removeHoveredListingId,\n  } = React.useContext(ListingContext);\n  const {\n    selectedPointOfInterest,\n    hoveredPointOfInterestIds,\n    setSelectedPointOfInterest,\n    addHoveredPointOfInterestId,\n    removeHoveredPointOfInterestId,\n  } = React.useContext(PointOfInterestContext);\n  const { center, zoom, setMap, setCenter, setZoom } =\n    React.useContext(MapContext);\n\n  // default zoom and center, to be used for resetting\n  const defaultZoomRef = React.useRef<number>();\n  const defaultCenterRef = React.useRef<Coordinate>();\n  const mapContainerRef = React.useRef<HTMLDivElement>(null);\n\n  // get zoom level and center for map bounds on first load\n  const loaded = React.useRef<boolean>(false);\n  React.useEffect(() => {\n    if (!mapContainerRef.current) return;\n    if (loaded.current) return;\n\n    const mapContainerRect = mapContainerRef.current.getBoundingClientRect();\n    const { zoom, center } = fitBounds(\n      {\n        sw: session.searchBounds.bottomLeft,\n        ne: session.searchBounds.topRight,\n      },\n      { width: mapContainerRect?.width, height: mapContainerRect?.height }\n    );\n    setCenter(center);\n    setZoom(zoom);\n    defaultCenterRef.current = center;\n    defaultZoomRef.current = zoom;\n    loaded.current = true;\n  }, [session]);\n\n  // update the zoom and center when the selected listing or point of interest changes\n  React.useEffect(() => {\n    if (selectedListing) {\n      setZoom(17);\n      setCenter(selectedListing.location);\n      return;\n    }\n\n    if (selectedPointOfInterest) {\n      setZoom(17);\n      setCenter(selectedPointOfInterest.location);\n      return;\n    }\n\n    // reset the zoom and center if no listing is selected\n    setZoom(defaultZoomRef.current);\n    setCenter(defaultCenterRef.current);\n  }, [selectedListing, selectedPointOfInterest]);\n\n  function handleMarkerClick(key: string, markerProps: MapMarkerProps) {\n    markerProps.onClick();\n  }\n\n  function handleMarkerHover(key: string, markerProps: MapMarkerProps) {\n    markerProps.onMouseEnter();\n  }\n\n  function handleMarkerUnhover(key: string, markerProps: MapMarkerProps) {\n    markerProps.onMouseLeave();\n  }\n\n  return (\n    <div ref={mapContainerRef} style={{ height: \"100%\" }}>\n      {center && zoom && (\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY! }}\n          center={center}\n          zoom={zoom}\n          onChildClick={handleMarkerClick}\n          onChildMouseEnter={handleMarkerHover}\n          onChildMouseLeave={handleMarkerUnhover}\n          onGoogleApiLoaded={({ map }) => setMap(map)}\n          onChange={({ center, zoom }) => {\n            setCenter(center);\n            setZoom(zoom);\n          }}\n          yesIWantToUseGoogleMapApiInternals={true}\n          options={{\n            streetViewControl: true,\n            mapTypeControl: true,\n            fullscreenControl: false,\n          }}\n        >\n          {filteredListings.map((listing) => (\n            <MapMarker\n              key={listing.id}\n              type={MarkerType.Listing}\n              data={listing}\n              hovered={hoveredListingIds.includes(listing.id)}\n              lat={listing.location.lat}\n              lng={listing.location.lng}\n              onClick={() => setSelectedListing(listing)}\n              onMouseEnter={() => addHoveredListingId(listing.id)}\n              onMouseLeave={() => removeHoveredListingId(listing.id)}\n            />\n          ))}\n          {session.pointsOfInterest?.map((pointOfInterest) => (\n            <MapMarker\n              key={pointOfInterest.id}\n              type={MarkerType.PointOfInterest}\n              data={pointOfInterest}\n              hovered={hoveredPointOfInterestIds.includes(pointOfInterest.id)}\n              lat={pointOfInterest.location.lat}\n              lng={pointOfInterest.location.lng}\n              onClick={() => setSelectedPointOfInterest(pointOfInterest)}\n              onMouseEnter={() =>\n                addHoveredPointOfInterestId(pointOfInterest.id)\n              }\n              onMouseLeave={() =>\n                removeHoveredPointOfInterestId(pointOfInterest.id)\n              }\n            />\n          ))}\n        </GoogleMapReact>\n      )}\n    </div>\n  );\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/ExistingSessionsSection.tsx",["327"],"import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingSpinner from \"../../../Components/LoadingSpinner\";\nimport Card from \"react-bootstrap/Card\";\nimport SessionData from \"../../../Models/Session\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport EditSessionDialog from \"./EditSessionDialog\";\nimport { useDeleteSession, useSessions } from \"../../../Utils/Hooks\";\n\nexport default function ExistingSessionsSection() {\n  const {\n    isLoading: loadingSessions,\n    isError,\n    data: existingSessions,\n  } = useSessions();\n\n  const [sessionToEdit, setSessionToEdit] = React.useState<\n    SessionData | undefined\n  >(undefined);\n\n  function handleEditClick(session: SessionData) {\n    setSessionToEdit(session);\n  }\n\n  function getContent() {\n    if (loadingSessions) return <LoadingSpinner text=\"Loading sessions...\" />;\n\n    if (existingSessions && existingSessions.length > 0)\n      return (\n        <div>\n          {existingSessions?.map((session) => (\n            <SessionEntry\n              key={session.id}\n              sessionData={session}\n              onEditClick={handleEditClick}\n            />\n          ))}\n        </div>\n      );\n\n    return <div>No existing sessions</div>;\n  }\n\n  return (\n    <>\n      {sessionToEdit && (\n        <EditSessionDialog\n          session={sessionToEdit}\n          onClose={() => setSessionToEdit(undefined)}\n        />\n      )}\n      <Card>\n        <Card.Header>My Sessions</Card.Header>\n        <Card.Body>{getContent()}</Card.Body>\n      </Card>\n    </>\n  );\n}\n\ninterface ISessionEntryProps {\n  sessionData: SessionData;\n  onEditClick: (session: SessionData) => void;\n}\n\nfunction SessionEntry({ sessionData, onEditClick }: ISessionEntryProps) {\n  const deleteSessionMutation = useDeleteSession();\n\n  const [deletingSession, setDeletingSession] = React.useState(false);\n\n  const navigate = useNavigate();\n\n  async function handleDeleteClick() {\n    if (deletingSession) return;\n\n    try {\n      setDeletingSession(true);\n      await deleteSessionMutation.mutateAsync(sessionData.id!);\n    } catch (e) {\n      console.error(\"Failed to delete session\", e);\n      toast.error(\"Failed to delete session\");\n    } finally {\n      setDeletingSession(false);\n    }\n  }\n\n  function handleEditClick() {\n    onEditClick(sessionData);\n  }\n\n  function handleOpenClick() {\n    navigate(`/Session/${sessionData.id!}`);\n  }\n\n  return (\n    <Card>\n      <Card.Body>\n        <div className=\"d-flex justify-content-between\">\n          <div>{sessionData.name}</div>\n          <div>\n            <Button variant=\"primary\" onClick={handleOpenClick}>\n              Open\n            </Button>{\" \"}\n            <Button variant=\"primary\" onClick={handleEditClick}>\n              Edit\n            </Button>{\" \"}\n            <Button variant=\"danger\" onClick={handleDeleteClick}>\n              {deletingSession ? (\n                <Spinner animation=\"border\" variant=\"primary\" size=\"sm\" />\n              ) : (\n                \"Delete\"\n              )}\n            </Button>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useSession.tsx",["328","329","330"],"import React from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport {\n  CreateSessionMutation,\n  DeleteSessionMutation,\n  GetSessionQuery,\n  ListSessionsQuery,\n  UpdateSessionMutation,\n} from \"../../API\";\nimport callGraphQL from \"../../graphql/callGraphQL\";\nimport {\n  createSession,\n  deleteSession,\n  updateSession,\n} from \"../../graphql/mutations\";\nimport { getSession, listSessions } from \"../../graphql/queries\";\nimport SessionData, {\n  mapGetSession,\n  mapListSessions,\n  mapUpdateSession,\n  sessionDataToApiSessionInput,\n} from \"../../Models/Session\";\n\nexport function useSessions() {\n  return useQuery<SessionData[]>(\"sessions\", async () => {\n    const result = await callGraphQL<ListSessionsQuery>(listSessions);\n    return mapListSessions(result);\n  });\n}\n\nexport function useSession(sessionId: string) {\n  return useQuery<SessionData | undefined>(\n    [\"sessions\", sessionId],\n    async () => {\n      const result = await callGraphQL<GetSessionQuery>(getSession, {\n        id: sessionId,\n      });\n      return mapGetSession(result);\n    }\n  );\n}\n\nexport function useCreateSession() {\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async (newSession: SessionData) => {\n      const createSessionInput = sessionDataToApiSessionInput(newSession);\n      const response = await callGraphQL<CreateSessionMutation>(createSession, {\n        input: createSessionInput,\n      });\n      // TODO: map the response to the created SessionData object\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(\"sessions\");\n      },\n    }\n  );\n}\n\nexport function useUpdateSession() {\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async (updatedSession: SessionData) => {\n      const sessionUpdateInput = sessionDataToApiSessionInput(updatedSession);\n      const response = await callGraphQL<UpdateSessionMutation>(updateSession, {\n        input: sessionUpdateInput,\n      });\n      return mapUpdateSession(response);\n    },\n    {\n      onSuccess: (data, variables) => {\n        queryClient.invalidateQueries(\"sessions\");\n      },\n    }\n  );\n}\n\nexport function useDeleteSession() {\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async (sessionId: string) => {\n      const response = await callGraphQL<DeleteSessionMutation>(deleteSession, {\n        input: { id: sessionId },\n      });\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(\"sessions\");\n      },\n    }\n  );\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/NewSessionDialog.tsx",["331"],"import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { toast } from \"react-toastify\";\nimport { AutoCompleteSuggestion, SearchType } from \"../../../API/Google Places\";\nimport AddressSearchBar from \"../../../Components/AddressSearchBar\";\nimport {\n  BoundingBox,\n  geocodeByAddress,\n} from \"../../../API/Google Places/Geocoding\";\nimport { useCreateSession } from \"../../../Utils/Hooks\";\n\nexport default function NewSessionDialog({ onClose }: IProps) {\n  const createSessionMutation = useCreateSession();\n\n  const [formData, setFormData] =\n    React.useState<CreateSessionFormData>(DEFAULT_FORM_DATA);\n  const [formDataErrors, setFormDataErrors] =\n    React.useState<FormDataErrors>(DEFAULT_DATA_ERRORS);\n\n  async function handleCreateClick(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const errors = validateFormData(formData);\n    setFormDataErrors(errors);\n    if (hasErrors(errors)) return;\n\n    try {\n      await createSessionMutation.mutateAsync({\n        name: formData.name!,\n        searchCity: formData.searchCity!,\n        searchBounds: formData.searchBounds!,\n      });\n      onClose();\n    } catch (e) {\n      console.error(\"Failed to create session\", e);\n      toast.error(\"Failed to create session\");\n    }\n  }\n\n  async function handleCitySelect(city: string | undefined) {\n    if (!city) {\n      setFormData((prev) => ({\n        ...prev,\n        searchCity: undefined,\n        searchBounds: undefined,\n      }));\n      return;\n    }\n\n    try {\n      setFormData((prev) => ({\n        ...prev,\n        searchCity: city,\n      }));\n      const cityGeocodingInfo = await geocodeByAddress(city);\n      setFormData((prev) => ({\n        ...prev,\n        // there is guaranteed to be one result\n        searchBounds: cityGeocodingInfo[0].boundingBox,\n      }));\n    } catch (err) {\n      console.error(\"Failed to load location information\", err);\n      toast.error(\"Failed to load location information\");\n      setFormData((prev) => ({\n        ...prev,\n        searchCity: undefined,\n        searchBounds: undefined,\n      }));\n    }\n  }\n\n  return (\n    <Modal show={true} onHide={onClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>New Session</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"sessionForm.Name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"session name\"\n              value={formData.name ?? \"\"}\n              onChange={(event: any) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  name: event.target.value,\n                }))\n              }\n              isInvalid={!!formDataErrors.nameError}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.nameError}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"sessionForm.SearchCity\">\n            <Form.Label>Search City</Form.Label>\n            <AddressSearchBar\n              onSelect={handleCitySelect}\n              isInvalid={!!formDataErrors.searchCityError}\n              searchType={SearchType.City}\n              selected={formData.searchCity}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.nameError}\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleCreateClick}>\n          Create\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\ninterface IProps {\n  onClose: () => void;\n}\n\ninterface CreateSessionFormData {\n  name?: string;\n  searchCity?: string;\n  searchBounds?: BoundingBox;\n}\n\nconst DEFAULT_FORM_DATA: CreateSessionFormData = {\n  name: undefined,\n  searchCity: undefined,\n  searchBounds: undefined,\n};\n\ninterface FormDataErrors {\n  nameError?: string;\n  searchCityError?: string;\n  searchBoundsError?: string;\n}\n\nconst DEFAULT_DATA_ERRORS: FormDataErrors = {\n  nameError: undefined,\n  searchCityError: undefined,\n  searchBoundsError: undefined,\n};\n\nfunction validateFormData(formData: CreateSessionFormData): FormDataErrors {\n  let nameError;\n  let searchCityError;\n  let searchBoundsError;\n\n  if (!formData.name) {\n    nameError = \"Must provide name for session\";\n  }\n  if (!formData.searchCity) {\n    searchCityError = \"Must enter a search city\";\n  }\n  if (!formData.searchBounds) {\n    searchBoundsError = \"Search bounds must be computed\";\n  }\n\n  return {\n    nameError,\n    searchCityError,\n    searchBoundsError,\n  };\n}\n\nfunction hasErrors(formDataError: FormDataErrors) {\n  let errorFound = false;\n\n  let key: keyof typeof formDataError;\n  for (key in formDataError) {\n    if (!!formDataError[key]) errorFound = true;\n  }\n\n  return errorFound;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/MapMarker.tsx",["332","333","334"],"import React from \"react\";\nimport SessionData, { PointOfInterest, Listing } from \"../../../Models/Session\";\nimport ListingMarker from \"./Listings/ListingMarker\";\nimport PointOfInterestMarker from \"./PointsOfInterest/PointOfInterestMarker\";\n\nexport default function MapMarker(props: MapMarkerProps) {\n  const { type, data, ...restProps } = props;\n\n  if (type === MarkerType.Listing) {\n    const listing = data as Listing;\n    return <ListingMarker listing={listing} {...restProps} />;\n  }\n\n  if (type === MarkerType.PointOfInterest) {\n    const pointOfInterest = data as PointOfInterest;\n    return (\n      <PointOfInterestMarker pointOfInterest={pointOfInterest} {...restProps} />\n    );\n  }\n\n  return null;\n}\n\nexport interface MapMarkerProps {\n  data: Listing | PointOfInterest;\n  type: MarkerType;\n  hovered?: boolean;\n  lat: number;\n  lng: number;\n  onClick: () => void;\n  onMouseEnter: () => void;\n  onMouseLeave: () => void;\n}\n\nexport enum MarkerType {\n  Listing,\n  PointOfInterest,\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/EditSessionDialog.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointsOfInterestPanel.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/DirectionsPanel.tsx",["335","336"],"import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { getDirections } from \"../../../../API/Google Routes\";\nimport { MapContext } from \"../../../../Contexts/MapContext\";\nimport DirectionsForm from \"./DirectionsForm\";\nimport DirectionsResults from \"./DirectionsResults\";\nimport styles from \"./DirectionsPanel.module.scss\";\nimport LoadingSpinner from \"../../../../Components/LoadingSpinner\";\n\nexport default function DirectionsPanel() {\n  const { showDirections, clearDirections } = React.useContext(MapContext);\n  const [directions, setDirections] =\n    React.useState<google.maps.DirectionsResult>();\n  const [routeIndex, setRouteIndex] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n\n  // remove directions when component unmounts\n  React.useEffect(() => {\n    return () => clearDirections();\n  }, []);\n\n  // show directions whenever they change\n  React.useEffect(() => {\n    if (!directions) {\n      clearDirections();\n    } else {\n      showDirections(directions, { routeIndex });\n    }\n  }, [directions, routeIndex]);\n\n  const handleSearch = async (\n    origin: string,\n    destination: string,\n    travelMode: google.maps.TravelMode\n  ) => {\n    try {\n      setLoading(true);\n      const directions = await getDirections({\n        origin,\n        destination,\n        travelMode,\n        provideRouteAlternatives: true,\n      });\n      setRouteIndex(0);\n      setDirections(directions);\n    } catch (error) {\n      setDirections(undefined);\n      console.error(\"Failed to load directions\", error);\n      toast.error(\"Failed to load directions\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.form}>\n        <DirectionsForm onSearchClick={handleSearch} />\n      </div>\n      <div className={styles.results}>\n        {loading ? (\n          <LoadingSpinner text=\"calculating routes...\" />\n        ) : (\n          <DirectionsResults\n            directions={directions}\n            onRouteClick={setRouteIndex}\n            activeRouteIndex={routeIndex}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingsPanel.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Models/Session.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/graphql/mutations.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/graphql/queries.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/graphql/callGraphQL.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Places/Geocoding.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Components/AddressSearchBar.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestMarker.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingMarker.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingViewer.tsx",["337"],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/NewListingDialog.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingsList.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/EditListingDialog.tsx",["338"],"import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport { ListingContext } from \"../../../../Contexts/ListingContext\";\nimport { SearchType } from \"../../../../API/Google Places\";\nimport AddressSearchBar from \"../../../../Components/AddressSearchBar\";\nimport {\n  Coordinate,\n  geocodeByAddress,\n} from \"../../../../API/Google Places/Geocoding\";\nimport { useUpdateSession } from \"../../../../Utils/Hooks\";\nimport SessionData, { Listing } from \"../../../../Models/Session\";\n\nexport default function EditListingDialog({\n  onClose,\n  session,\n  listing,\n}: IProps) {\n  const { setSelectedListing } = React.useContext(ListingContext);\n\n  const updateSessionMutation = useUpdateSession();\n\n  const [formData, setFormData] = React.useState<EditListingFormData>({\n    ...listing,\n  });\n  const [formDataErrors, setFormDataErrors] =\n    React.useState<FormDataErrors>(DEFAULT_DATA_ERRORS);\n\n  async function handleSaveClick(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const errors = validateFormData(formData);\n    setFormDataErrors(errors);\n    if (hasErrors(errors)) return;\n\n    const updatedListing: Listing = {\n      id: listing.id,\n      name: formData.name!,\n      address: formData.address!,\n      location: formData.location!,\n      price: formData.price!,\n      numberOfBedrooms: formData.numberOfBedrooms!,\n      numberOfBathrooms: formData.numberOfBathrooms!,\n      link: formData.link,\n    };\n    const updatedListings = (session.listings ?? []).map((l) => {\n      if (l.id === listing.id) return updatedListing;\n      return l;\n    });\n\n    try {\n      await updateSessionMutation.mutateAsync({\n        ...session,\n        listings: updatedListings,\n      });\n      setSelectedListing(updatedListing);\n      onClose();\n    } catch (e) {\n      console.error(\"Failed to update listing\", e);\n      toast.error(\"Failed to update listing\");\n    }\n  }\n\n  async function handleAddressSelect(address: string | undefined) {\n    if (!address) {\n      setFormData((prev) => ({\n        ...prev,\n        address: undefined,\n        location: undefined,\n      }));\n      return;\n    }\n\n    try {\n      setFormData((prev) => ({\n        ...prev,\n        address,\n      }));\n      const addressGeocodingInfo = await geocodeByAddress(address);\n      // there is guaranteed to be one result\n      const addressInfo = addressGeocodingInfo[0];\n      setFormData((prev) => ({\n        ...prev,\n        location: addressInfo.location,\n      }));\n    } catch (err) {\n      // TODO: show toast and maybe clear the search?\n      console.error(\"Failed to load location information\", err);\n      toast.error(\"Failed to load location information\");\n      setFormData((prev) => ({\n        ...prev,\n        address: undefined,\n        location: undefined,\n      }));\n    }\n  }\n\n  return (\n    <Modal show={true} onHide={onClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Edit Listing</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"listingForm.Name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"listing name\"\n              value={formData.name ?? \"\"}\n              onChange={(event: any) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  name: event.target.value,\n                }))\n              }\n              isInvalid={!!formDataErrors.nameError}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.nameError}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"listingForm.Address\">\n            <Form.Label>Address</Form.Label>\n            <AddressSearchBar\n              defaultInputValue={formData.address}\n              onSelect={handleAddressSelect}\n              isInvalid={!!formDataErrors.addressError}\n              searchType={SearchType.Address}\n              selected={formData.address}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.nameError}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"listingForm.Price\">\n            <Form.Label>Price</Form.Label>\n            <Form.Control\n              type=\"number\"\n              value={formData.price ?? \"\"}\n              onChange={(event: any) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  price: event.target.value,\n                }))\n              }\n              isInvalid={!!formDataErrors.priceError}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.priceError}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"listingForm.bedrooms\">\n              <Form.Label>Bedrooms</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={formData.numberOfBedrooms ?? \"\"}\n                onChange={(event: any) =>\n                  setFormData((prev) => ({\n                    ...prev,\n                    numberOfBedrooms: event.target.value,\n                  }))\n                }\n                isInvalid={!!formDataErrors.numberOfBedroomsError}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formDataErrors.numberOfBedroomsError}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"listingForm.bathrooms\">\n              <Form.Label>Bathrooms</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={formData.numberOfBathrooms ?? \"\"}\n                onChange={(event: any) =>\n                  setFormData((prev) => ({\n                    ...prev,\n                    numberOfBathrooms: event.target.value,\n                  }))\n                }\n                isInvalid={!!formDataErrors.numberOfBathroomsError}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formDataErrors.numberOfBathroomsError}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Form.Group controlId=\"listingForm.Link\">\n            <Form.Label>Link</Form.Label>\n            <Form.Control\n              type=\"listing link\"\n              value={formData.link ?? \"\"}\n              onChange={(event: any) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  link: event.target.value,\n                }))\n              }\n            />\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleSaveClick}>\n          Save\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\ninterface IProps {\n  onClose: () => void;\n  listing: Listing;\n  session: SessionData;\n}\n\ninterface EditListingFormData {\n  name?: string;\n  address?: string;\n  location?: Coordinate;\n  price?: number;\n  numberOfBedrooms?: number;\n  numberOfBathrooms?: number;\n  link?: string | null;\n}\n\nconst DEFAULT_FORM_DATA: EditListingFormData = {\n  name: undefined,\n  address: undefined,\n  location: undefined,\n  price: undefined,\n  numberOfBedrooms: undefined,\n  numberOfBathrooms: undefined,\n  link: undefined,\n};\n\ninterface FormDataErrors {\n  nameError?: string;\n  addressError?: string;\n  locationError?: string;\n  priceError?: string;\n  numberOfBedroomsError?: string;\n  numberOfBathroomsError?: string;\n}\n\nconst DEFAULT_DATA_ERRORS: FormDataErrors = {\n  nameError: undefined,\n  addressError: undefined,\n  locationError: undefined,\n  priceError: undefined,\n  numberOfBedroomsError: undefined,\n  numberOfBathroomsError: undefined,\n};\n\nfunction validateFormData(formData: EditListingFormData): FormDataErrors {\n  let nameError,\n    addressError,\n    locationError,\n    priceError,\n    numberOfBedroomsError,\n    numberOfBathroomsError;\n\n  if (!formData.name) {\n    nameError = \"Must provide name for listing\";\n  }\n  if (!formData.address) {\n    addressError = \"Must enter an address\";\n  }\n  if (!formData.location) {\n    locationError = \"Could not find address for location\";\n  }\n\n  if (!formData.price) {\n    priceError = \"Must provide a price for the listing\";\n  }\n\n  if (!formData.numberOfBedrooms) {\n    numberOfBedroomsError = \"Must provide a number of bedrooms\";\n  }\n\n  if (!formData.numberOfBathrooms) {\n    numberOfBathroomsError = \"Must provide a number of bathrooms\";\n  }\n\n  return {\n    nameError,\n    addressError,\n    locationError,\n    priceError,\n    numberOfBedroomsError,\n    numberOfBathroomsError,\n  };\n}\n\nfunction hasErrors(formDataError: FormDataErrors) {\n  let errorFound = false;\n\n  let key: keyof typeof formDataError;\n  for (key in formDataError) {\n    if (!!formDataError[key]) errorFound = true;\n  }\n\n  return errorFound;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/address.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Places/index.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Places/AutoComplete.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/DirectionsForm.tsx",["339","340"],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestViewer.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointsOfInterestList.tsx",["341"],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/NewPointOfInterestDialog.tsx",["342"],"import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { SearchType } from \"../../../../API/Google Places\";\nimport AddressSearchBar from \"../../../../Components/AddressSearchBar\";\nimport {\n  Coordinate,\n  geocodeByAddress,\n} from \"../../../../API/Google Places/Geocoding\";\nimport { uuid } from \"uuidv4\";\nimport { useUpdateSession } from \"../../../../Utils/Hooks\";\nimport SessionData, { PointOfInterest } from \"../../../../Models/Session\";\nimport { PointOfInterestType } from \"../../../../API\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { SessionContext } from \"../../../../Contexts/SessionContext\";\n\nexport default function NewPointOfInterestDialog({ onClose }: IProps) {\n  const { session } = React.useContext(SessionContext);\n  const updateSessionMutation = useUpdateSession();\n\n  const [formData, setFormData] =\n    React.useState<CreatePointOfInterestFormData>(DEFAULT_FORM_DATA);\n  const [formDataErrors, setFormDataErrors] =\n    React.useState<FormDataErrors>(DEFAULT_DATA_ERRORS);\n\n  async function handleCreateClick(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const errors = validateFormData(formData);\n    setFormDataErrors(errors);\n    if (hasErrors(errors)) return;\n\n    const newPointOfInterest: PointOfInterest = {\n      id: uuid(),\n      name: formData.name!,\n      type: formData.type!,\n      address: formData.address!,\n      location: formData.location!,\n    };\n\n    try {\n      await updateSessionMutation.mutateAsync({\n        ...session,\n        pointsOfInterest: (session.pointsOfInterest ?? []).concat(\n          newPointOfInterest\n        ),\n      });\n      onClose();\n    } catch (e) {\n      console.error(\"Failed to create point of interest\", e);\n      toast.error(\"Failed to create point of interest\");\n    }\n  }\n\n  async function handleAddressSelect(address: string | undefined) {\n    if (!address) {\n      setFormData((prev) => ({\n        ...prev,\n        address: undefined,\n        location: undefined,\n      }));\n      return;\n    }\n\n    try {\n      setFormData((prev) => ({\n        ...prev,\n        address,\n      }));\n      const addressGeocodingInfo = await geocodeByAddress(address);\n      // there is guaranteed to be one result\n      const addressInfo = addressGeocodingInfo[0];\n      setFormData((prev) => ({\n        ...prev,\n        location: addressInfo.location,\n      }));\n    } catch (err) {\n      console.error(\"Failed to load location information\", err);\n      toast.error(\"Failed to load location information\");\n      setFormData((prev) => ({\n        ...prev,\n        address: undefined,\n        location: undefined,\n      }));\n    }\n  }\n\n  return (\n    <Modal show={true} onHide={onClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>New Point of Interest</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"pointOfInterestForm.Name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"point of interest name\"\n              value={formData.name ?? \"\"}\n              onChange={(event: any) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  name: event.target.value,\n                }))\n              }\n              isInvalid={!!formDataErrors.nameError}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.nameError}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"pointOfInterestForm.Address\">\n            <Form.Label>Address</Form.Label>\n            <AddressSearchBar\n              defaultInputValue={formData.address}\n              onSelect={handleAddressSelect}\n              isInvalid={!!formDataErrors.addressError}\n              searchType={SearchType.Address}\n              selected={formData.address}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.nameError}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"pointOfInterestForm.Type\">\n            <Form.Label>Type</Form.Label>\n            <Typeahead\n              selected={\n                formData.type\n                  ? [\n                      formData.type === PointOfInterestType.WORK\n                        ? \"Work\"\n                        : \"Other\",\n                    ]\n                  : undefined\n              }\n              options={[\"Work\", \"Other\"]}\n              onChange={(selected) => {\n                const type = selected.length > 0 ? selected[0] : undefined;\n                setFormData((prev) => ({\n                  ...prev,\n                  type:\n                    type === \"Work\"\n                      ? PointOfInterestType.WORK\n                      : PointOfInterestType.OTHER,\n                }));\n              }}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.typeError}\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleCreateClick}>\n          Create\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\ninterface IProps {\n  onClose: () => void;\n}\n\ninterface CreatePointOfInterestFormData {\n  name?: string;\n  type?: PointOfInterestType;\n  address?: string;\n  location?: Coordinate;\n}\n\nconst DEFAULT_FORM_DATA: CreatePointOfInterestFormData = {\n  name: undefined,\n  type: undefined,\n  address: undefined,\n  location: undefined,\n};\n\ninterface FormDataErrors {\n  nameError?: string;\n  typeError?: string;\n  addressError?: string;\n  locationError?: string;\n}\n\nconst DEFAULT_DATA_ERRORS: FormDataErrors = {\n  nameError: undefined,\n  typeError: undefined,\n  addressError: undefined,\n  locationError: undefined,\n};\n\nfunction validateFormData(\n  formData: CreatePointOfInterestFormData\n): FormDataErrors {\n  let nameError, typeError, addressError, locationError;\n\n  if (!formData.name) {\n    nameError = \"Must provide name for point of interest\";\n  }\n  if (!formData.type) {\n    nameError = \"Must provide type for point of interest\";\n  }\n  if (!formData.address) {\n    addressError = \"Must enter an address\";\n  }\n  if (!formData.location) {\n    locationError = \"Could not find address for location\";\n  }\n\n  return {\n    nameError,\n    typeError,\n    addressError,\n    locationError,\n  };\n}\n\nfunction hasErrors(formDataError: FormDataErrors) {\n  let errorFound = false;\n\n  let key: keyof typeof formDataError;\n  for (key in formDataError) {\n    if (!!formDataError[key]) errorFound = true;\n  }\n\n  return errorFound;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/DirectionsResults.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Routes/index.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/API.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/TravelModeButton.tsx",["343"],"import React from \"react\";\nimport classNames from \"classnames\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faWalking,\n  faCar,\n  faSubway,\n  faBiking,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"./TravelModeButton.module.scss\";\n\n// copying for shorthand\ntype TravelMode = google.maps.TravelMode;\nconst TravelMode = { ...google.maps.TravelMode };\n\nexport default function TravelModeButton({\n  icon,\n  active,\n  onClick,\n}: TravelModeButtonProps) {\n  return (\n    <div\n      className={classNames(styles.travelModeButton, active && styles.active)}\n      onClick={onClick}\n    >\n      <FontAwesomeIcon icon={icon} />\n    </div>\n  );\n}\n\ninterface TravelModeButtonProps {\n  icon: IconProp;\n  active?: boolean;\n  onClick: () => void;\n}\n\nexport function getIcon(travelMode: TravelMode): IconProp {\n  if (travelMode === TravelMode.BICYCLING) return faBiking;\n  if (travelMode === TravelMode.TRANSIT) return faSubway;\n  if (travelMode === TravelMode.WALKING) return faWalking;\n  return faCar;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/EditPointOfInterestDialog.tsx",["344","345"],"import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport {\n  AutoCompleteSuggestion,\n  SearchType,\n} from \"../../../../API/Google Places\";\nimport AddressSearchBar from \"../../../../Components/AddressSearchBar\";\nimport {\n  Coordinate,\n  geocodeByAddress,\n} from \"../../../../API/Google Places/Geocoding\";\nimport { useUpdateSession } from \"../../../../Utils/Hooks\";\nimport SessionData, { PointOfInterest } from \"../../../../Models/Session\";\nimport { PointOfInterestType } from \"../../../../API\";\nimport { PointOfInterestContext } from \"../../../../Contexts/PointOfInterestContext\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nexport default function EditPointOfInterestDialog({\n  onClose,\n  session,\n  pointOfInterest,\n}: IProps) {\n  const { setSelectedPointOfInterest } = React.useContext(\n    PointOfInterestContext\n  );\n\n  const updateSessionMutation = useUpdateSession();\n\n  const [formData, setFormData] = React.useState<EditPointOfInterestFormData>({\n    ...pointOfInterest,\n  });\n  const [formDataErrors, setFormDataErrors] =\n    React.useState<FormDataErrors>(DEFAULT_DATA_ERRORS);\n\n  async function handleSaveClick(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const errors = validateFormData(formData);\n    setFormDataErrors(errors);\n    if (hasErrors(errors)) return;\n\n    const updatedPointOfInterest: PointOfInterest = {\n      id: pointOfInterest.id,\n      name: formData.name!,\n      type: formData.type!,\n      address: formData.address!,\n      location: formData.location!,\n    };\n    const updatedPointsOfInterest = (session.pointsOfInterest ?? []).map(\n      (p) => {\n        if (p.id === pointOfInterest.id) return updatedPointOfInterest;\n        return p;\n      }\n    );\n\n    try {\n      await updateSessionMutation.mutateAsync({\n        ...session,\n        pointsOfInterest: updatedPointsOfInterest,\n      });\n      setSelectedPointOfInterest(updatedPointOfInterest);\n      onClose();\n    } catch (e) {\n      console.error(\"Failed to update point of interest\", e);\n      toast.error(\"Failed to update point of interest\");\n    }\n  }\n\n  async function handleAddressSelect(address: string | undefined) {\n    if (!address) {\n      setFormData((prev) => ({\n        ...prev,\n        address: undefined,\n        location: undefined,\n      }));\n      return;\n    }\n\n    try {\n      setFormData((prev) => ({\n        ...prev,\n        address,\n      }));\n      const addressGeocodingInfo = await geocodeByAddress(address);\n      // there is guaranteed to be one result\n      const addressInfo = addressGeocodingInfo[0];\n      setFormData((prev) => ({\n        ...prev,\n        location: addressInfo.location,\n      }));\n    } catch (err) {\n      // TODO: show toast and maybe clear the search?\n      console.error(\"Failed to load location information\", err);\n      toast.error(\"Failed to load location information\");\n      setFormData((prev) => ({\n        ...prev,\n        address: undefined,\n        location: undefined,\n      }));\n    }\n  }\n\n  return (\n    <Modal show={true} onHide={onClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Edit Point of Interest</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"pointOfInterestForm.Name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"point of interest name\"\n              value={formData.name ?? \"\"}\n              onChange={(event: any) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  name: event.target.value,\n                }))\n              }\n              isInvalid={!!formDataErrors.nameError}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.nameError}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"pointOfInterestForm.Address\">\n            <Form.Label>Address</Form.Label>\n            <AddressSearchBar\n              defaultInputValue={formData.address}\n              onSelect={handleAddressSelect}\n              isInvalid={!!formDataErrors.addressError}\n              searchType={SearchType.Address}\n              selected={formData.address}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.nameError}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"pointOfInterestForm.Type\">\n            <Form.Label>Type</Form.Label>\n            <Typeahead\n              selected={[\n                formData.type === PointOfInterestType.WORK ? \"Work\" : \"Other\",\n              ]}\n              options={[\"Work\", \"Other\"]}\n              onChange={(selected) => {\n                const type = selected.length > 0 ? selected[0] : undefined;\n                setFormData((prev) => ({\n                  ...prev,\n                  type:\n                    type === \"Work\"\n                      ? PointOfInterestType.WORK\n                      : PointOfInterestType.OTHER,\n                }));\n              }}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.typeError}\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleSaveClick}>\n          Save\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\ninterface IProps {\n  onClose: () => void;\n  pointOfInterest: PointOfInterest;\n  session: SessionData;\n}\n\ninterface EditPointOfInterestFormData {\n  name?: string;\n  type?: PointOfInterestType;\n  address?: string;\n  location?: Coordinate;\n}\n\nconst DEFAULT_FORM_DATA: EditPointOfInterestFormData = {\n  name: undefined,\n  type: undefined,\n  address: undefined,\n  location: undefined,\n};\n\ninterface FormDataErrors {\n  nameError?: string;\n  typeError?: string;\n  addressError?: string;\n  locationError?: string;\n}\n\nconst DEFAULT_DATA_ERRORS: FormDataErrors = {\n  nameError: undefined,\n  typeError: undefined,\n  addressError: undefined,\n  locationError: undefined,\n};\n\nfunction validateFormData(\n  formData: EditPointOfInterestFormData\n): FormDataErrors {\n  let nameError, typeError, addressError, locationError;\n\n  if (!formData.name) {\n    nameError = \"Must provide name for point of interest\";\n  }\n  if (!formData.type) {\n    nameError = \"Must provide type for point of interest\";\n  }\n  if (!formData.address) {\n    addressError = \"Must enter an address\";\n  }\n  if (!formData.location) {\n    locationError = \"Could not find address for location\";\n  }\n\n  return {\n    nameError,\n    typeError,\n    addressError,\n    locationError,\n  };\n}\n\nfunction hasErrors(formDataError: FormDataErrors) {\n  let errorFound = false;\n\n  let key: keyof typeof formDataError;\n  for (key in formDataError) {\n    if (!!formDataError[key]) errorFound = true;\n  }\n\n  return errorFound;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Routes/Directions.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useOnClickOutside.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useSelectedListing.tsx",["346","347"],"import React from \"react\";\nimport SessionData, { Listing } from \"../../Models/Session\";\nimport { useMatch, useNavigate } from \"react-router-dom\";\nimport { SessionContext } from \"../../Contexts/SessionContext\";\n\nexport default function useSelectedListing() {\n  const { session } = React.useContext(SessionContext);\n\n  const match = useMatch<{ sessionId: string; listingId: string }, string>(\n    \"/Session/:sessionId/Listings/:listingId\"\n  );\n  const navigate = useNavigate();\n\n  const selectedListing = React.useMemo(() => {\n    if (!match) return undefined;\n\n    const { listingId } = match.params as any;\n    if (!match) return undefined;\n\n    return session.listings?.find((l) => l.id === listingId);\n  }, [match, session]);\n\n  const setSelectedListing = React.useCallback(\n    (listing: Listing | undefined, options?: { edit?: boolean }) => {\n      let url = `/Session/${session.id}/Listings`;\n      url = listing ? url + `/${listing?.id}` : url;\n      navigate(url, { state: options });\n    },\n    [session]\n  );\n\n  return { selectedListing, setSelectedListing };\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/SessionContext.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useSelectedPointOfInterest.tsx",["348"],"import React from \"react\";\nimport { PointOfInterest } from \"../../Models/Session\";\nimport { useMatch, useNavigate } from \"react-router-dom\";\nimport { SessionContext } from \"../../Contexts/SessionContext\";\n\nexport default function useSelectedPointOfInterest() {\n  const { session } = React.useContext(SessionContext);\n\n  const match = useMatch<\n    { sessionId: string; pointOfInterestId: string },\n    string\n  >(\"/Session/:sessionId/POI/:pointOfInterestId\");\n  const navigate = useNavigate();\n\n  const selectedPointOfInterest = React.useMemo(() => {\n    if (!match) return undefined;\n\n    const { pointOfInterestId } = match.params as any;\n    if (!match) return undefined;\n\n    return session.pointsOfInterest?.find((p) => p.id === pointOfInterestId);\n  }, [match, session]);\n\n  const setSelectedPointOfInterest = React.useCallback(\n    (\n      pointOfInterest: PointOfInterest | undefined,\n      options?: { edit?: boolean }\n    ) => {\n      let url = `/Session/${session.id}/POI`;\n      url = pointOfInterest ? url + `/${pointOfInterest?.id}` : url;\n      navigate(url, { state: options });\n    },\n    [session]\n  );\n\n  return { selectedPointOfInterest, setSelectedPointOfInterest };\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingsListItem.tsx",["349","350","351","352"],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingFilters.tsx",["353","354","355"],"import React from \"react\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport {\n  ListingContext,\n  ListingFilterSettings,\n} from \"../../../../Contexts/ListingContext\";\n\nexport default function ListingFilters() {\n  const { filterSettings, setFilterSettings } =\n    React.useContext(ListingContext);\n\n  const [localFilterSettings, setLocalFilterSettings] =\n    React.useState(filterSettings);\n\n  const handleClearClick = () => {\n    setLocalFilterSettings({\n      beds: undefined,\n      baths: undefined,\n      minPrice: undefined,\n      maxPrice: undefined,\n    });\n    setFilterSettings({\n      beds: undefined,\n      baths: undefined,\n      minPrice: undefined,\n      maxPrice: undefined,\n    });\n  };\n\n  const handleApplyClick = () => {\n    setFilterSettings(localFilterSettings);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    const numericVal = getNumericVal(value);\n\n    setLocalFilterSettings((prev) => ({ ...prev, [name]: numericVal }));\n  };\n\n  const getNumericVal = (newVal: string | undefined): number | undefined => {\n    if (newVal == \"\") return undefined;\n\n    const num = Number(newVal);\n    if (num === Number.NaN) return undefined;\n    return num;\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex mt-2\">\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Beds</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            name=\"beds\"\n            type=\"number\"\n            value={\n              localFilterSettings.beds === undefined\n                ? \"\"\n                : localFilterSettings.beds\n            }\n            onChange={handleChange}\n          />\n        </InputGroup>\n        <InputGroup className=\"ml-1\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>Baths</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            name=\"baths\"\n            type=\"number\"\n            value={\n              localFilterSettings.baths === undefined\n                ? \"\"\n                : localFilterSettings.baths\n            }\n            onChange={handleChange}\n          />\n        </InputGroup>\n      </div>\n      <div className=\"d-flex mt-2\">\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Min $</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            name=\"minPrice\"\n            type=\"number\"\n            value={\n              localFilterSettings.minPrice === undefined\n                ? \"\"\n                : localFilterSettings.minPrice\n            }\n            onChange={handleChange}\n          />\n        </InputGroup>\n        <InputGroup className=\"ml-1\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>Max $</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            name=\"maxPrice\"\n            type=\"number\"\n            value={\n              localFilterSettings.maxPrice === undefined\n                ? \"\"\n                : localFilterSettings.maxPrice\n            }\n            onChange={handleChange}\n          />\n        </InputGroup>\n      </div>\n      <div className=\"d-flex mt-2 justify-content-end\">\n        <Button onClick={handleApplyClick}>Apply</Button>\n        <Button className=\"ml-1\" onClick={handleClearClick}>\n          Clear\n        </Button>\n      </div>\n    </div>\n  );\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Roommates/RoommatesPanel.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/API/AWS Cognito/index.tsx",["356","357"],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Roommates/AddRoommateDialog.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Roommates/RoommatesList.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Components/FittedImage.tsx",["358"],"import React from \"react\";\nimport styles from \"./FittedImage.module.scss\";\nimport classNames from \"classnames\";\n\nexport default function FittedImage(\n  props: React.DetailedHTMLProps<\n    React.ImgHTMLAttributes<HTMLImageElement>,\n    HTMLImageElement\n  >\n) {\n  const className = props.className ?? \"\";\n\n  return (\n    <div className={classNames(className, styles.imageContainer)}>\n      <img {...props} className={styles.image} />\n    </div>\n  );\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingPicturesDialog.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Crawlers/index.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Components/Tooltip.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingDropdown.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestDropdown.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/graphql/subscriptions.ts",[],{"ruleId":"359","replacedBy":"360"},{"ruleId":"361","replacedBy":"362"},{"ruleId":"363","severity":1,"message":"364","line":18,"column":5,"nodeType":"365","messageId":"366","endLine":18,"endColumn":32},{"ruleId":"363","severity":1,"message":"367","line":24,"column":5,"nodeType":"365","messageId":"366","endLine":24,"endColumn":33},{"ruleId":"363","severity":1,"message":"368","line":14,"column":5,"nodeType":"365","messageId":"366","endLine":14,"endColumn":12},{"ruleId":"363","severity":1,"message":"369","line":3,"column":15,"nodeType":"365","messageId":"366","endLine":3,"endColumn":31},{"ruleId":"370","severity":1,"message":"371","line":44,"column":6,"nodeType":"372","endLine":44,"endColumn":15,"suggestions":"373"},{"ruleId":"370","severity":1,"message":"374","line":54,"column":6,"nodeType":"372","endLine":54,"endColumn":15,"suggestions":"375"},{"ruleId":"370","severity":1,"message":"374","line":73,"column":6,"nodeType":"372","endLine":73,"endColumn":48,"suggestions":"376"},{"ruleId":"363","severity":1,"message":"368","line":15,"column":5,"nodeType":"365","messageId":"366","endLine":15,"endColumn":12},{"ruleId":"363","severity":1,"message":"377","line":1,"column":8,"nodeType":"365","messageId":"366","endLine":1,"endColumn":13},{"ruleId":"363","severity":1,"message":"378","line":49,"column":13,"nodeType":"365","messageId":"366","endLine":49,"endColumn":21},{"ruleId":"363","severity":1,"message":"378","line":86,"column":13,"nodeType":"365","messageId":"366","endLine":86,"endColumn":21},{"ruleId":"363","severity":1,"message":"379","line":6,"column":10,"nodeType":"365","messageId":"366","endLine":6,"endColumn":32},{"ruleId":"363","severity":1,"message":"380","line":2,"column":8,"nodeType":"365","messageId":"366","endLine":2,"endColumn":19},{"ruleId":"381","severity":1,"message":"382","line":9,"column":16,"nodeType":"365","messageId":"383","endLine":9,"endColumn":26},{"ruleId":"381","severity":1,"message":"382","line":14,"column":16,"nodeType":"365","messageId":"383","endLine":14,"endColumn":26},{"ruleId":"370","severity":1,"message":"384","line":20,"column":6,"nodeType":"372","endLine":20,"endColumn":8,"suggestions":"385"},{"ruleId":"370","severity":1,"message":"386","line":29,"column":6,"nodeType":"372","endLine":29,"endColumn":30,"suggestions":"387"},{"ruleId":"388","severity":1,"message":"389","line":116,"column":19,"nodeType":"390","messageId":"391","endLine":116,"endColumn":58,"fix":"392"},{"ruleId":"363","severity":1,"message":"393","line":235,"column":7,"nodeType":"365","messageId":"366","endLine":235,"endColumn":45},{"ruleId":"363","severity":1,"message":"394","line":2,"column":10,"nodeType":"365","messageId":"366","endLine":2,"endColumn":21},{"ruleId":"395","severity":1,"message":"396","line":18,"column":7,"nodeType":"365","messageId":"397","endLine":18,"endColumn":17},{"ruleId":"370","severity":1,"message":"398","line":70,"column":6,"nodeType":"372","endLine":70,"endColumn":8,"suggestions":"399"},{"ruleId":"363","severity":1,"message":"380","line":14,"column":8,"nodeType":"365","messageId":"366","endLine":14,"endColumn":19},{"ruleId":"395","severity":1,"message":"396","line":15,"column":7,"nodeType":"365","messageId":"397","endLine":15,"endColumn":17},{"ruleId":"363","severity":1,"message":"379","line":7,"column":3,"nodeType":"365","messageId":"366","endLine":7,"endColumn":25},{"ruleId":"363","severity":1,"message":"393","line":193,"column":7,"nodeType":"365","messageId":"366","endLine":193,"endColumn":53},{"ruleId":"363","severity":1,"message":"380","line":2,"column":8,"nodeType":"365","messageId":"366","endLine":2,"endColumn":19},{"ruleId":"370","severity":1,"message":"400","line":29,"column":5,"nodeType":"372","endLine":29,"endColumn":14,"suggestions":"401"},{"ruleId":"370","severity":1,"message":"400","line":33,"column":5,"nodeType":"372","endLine":33,"endColumn":14,"suggestions":"402"},{"ruleId":"363","severity":1,"message":"403","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":25},{"ruleId":"363","severity":1,"message":"404","line":4,"column":10,"nodeType":"365","messageId":"366","endLine":4,"endColumn":21},{"ruleId":"370","severity":1,"message":"405","line":19,"column":6,"nodeType":"372","endLine":19,"endColumn":8,"suggestions":"406"},{"ruleId":"388","severity":1,"message":"389","line":52,"column":15,"nodeType":"390","messageId":"391","endLine":57,"endColumn":16,"fix":"407"},{"ruleId":"363","severity":1,"message":"408","line":7,"column":3,"nodeType":"365","messageId":"366","endLine":7,"endColumn":24},{"ruleId":"409","severity":1,"message":"410","line":44,"column":16,"nodeType":"411","messageId":"412","endLine":44,"endColumn":18},{"ruleId":"413","severity":1,"message":"414","line":47,"column":9,"nodeType":"411","messageId":"415","endLine":47,"endColumn":27},{"ruleId":"416","severity":1,"message":"417","line":21,"column":26,"nodeType":"418","messageId":"419","endLine":21,"endColumn":27,"suggestions":"420"},{"ruleId":"416","severity":1,"message":"417","line":21,"column":36,"nodeType":"418","messageId":"419","endLine":21,"endColumn":37,"suggestions":"421"},{"ruleId":"422","severity":1,"message":"423","line":15,"column":7,"nodeType":"390","endLine":15,"endColumn":50},"no-native-reassign",["424"],"no-negated-in-lhs",["425"],"@typescript-eslint/no-unused-vars","'autoGeneratedRedirectSignIn' is assigned a value but never used.","Identifier","unusedVar","'autoGeneratedRedirectSignOut' is assigned a value but never used.","'isError' is assigned a value but never used.","'graphqlOperation' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'queryClient'. Either include it or remove the dependency array.","ArrayExpression",["426"],"React Hook React.useEffect has missing dependencies: 'setCenter' and 'setZoom'. Either include them or remove the dependency array.",["427"],["428"],"'React' is defined but never used.","'response' is assigned a value but never used.","'AutoCompleteSuggestion' is defined but never used.","'SessionData' is defined but never used.","@typescript-eslint/no-use-before-define","'MarkerType' was used before it was defined.","noUseBeforeDefine","React Hook React.useEffect has a missing dependency: 'clearDirections'. Either include it or remove the dependency array.",["429"],"React Hook React.useEffect has missing dependencies: 'clearDirections' and 'showDirections'. Either include them or remove the dependency array.",["430"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"431","text":"432"},"'DEFAULT_FORM_DATA' is assigned a value but never used.","'useNavigate' is defined but never used.","@typescript-eslint/no-redeclare","'TravelMode' is already defined.","redeclared","React Hook React.useEffect has missing dependencies: 'pointOfInterest.id' and 'removeHoveredPointOfInterestId'. Either include them or remove the dependency array.",["433"],"React Hook React.useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["434"],["435"],"'FontAwesomeIcon' is defined but never used.","'faEllipsisV' is defined but never used.","React Hook React.useEffect has missing dependencies: 'listing.id' and 'removeHoveredListingId'. Either include them or remove the dependency array.",["436"],{"range":"437","text":"432"},"'ListingFilterSettings' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","no-useless-escape","Unnecessary escape character: \\\".","TemplateElement","unnecessaryEscape",["438","439"],["440","441"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},[4183,4183]," rel=\"noreferrer\"",{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"454","fix":"456"},{"desc":"457","fix":"458"},[1839,1839],{"messageId":"459","fix":"460","desc":"461"},{"messageId":"462","fix":"463","desc":"464"},{"messageId":"459","fix":"465","desc":"461"},{"messageId":"462","fix":"466","desc":"464"},"Update the dependencies array to be: [queryClient, session]",{"range":"467","text":"468"},"Update the dependencies array to be: [session, setCenter, setZoom]",{"range":"469","text":"470"},"Update the dependencies array to be: [selectedListing, selectedPointOfInterest, setCenter, setZoom]",{"range":"471","text":"472"},"Update the dependencies array to be: [clearDirections]",{"range":"473","text":"474"},"Update the dependencies array to be: [clearDirections, directions, routeIndex, showDirections]",{"range":"475","text":"476"},"Update the dependencies array to be: [pointOfInterest.id, removeHoveredPointOfInterestId]",{"range":"477","text":"478"},"Update the dependencies array to be: [navigate, session.id]",{"range":"479","text":"480"},{"range":"481","text":"480"},"Update the dependencies array to be: [listing.id, removeHoveredListingId]",{"range":"482","text":"483"},"removeEscape",{"range":"484","text":"485"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"486","text":"487"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"488","text":"485"},{"range":"489","text":"487"},[1447,1456],"[queryClient, session]",[1975,1984],"[session, setCenter, setZoom]",[2479,2521],"[selectedListing, selectedPointOfInterest, setCenter, setZoom]",[850,852],"[clearDirections]",[1046,1070],"[clearDirections, directions, routeIndex, showDirections]",[2266,2268],"[pointOfInterest.id, removeHoveredPointOfInterestId]",[1003,1012],"[navigate, session.id]",[1106,1115],[777,779],"[listing.id, removeHoveredListingId]",[743,744],"",[743,743],"\\",[753,754],[753,753]]