[{"/Users/mattbalnis/Projects/PropertyPro2.0/src/index.tsx":"1","/Users/mattbalnis/Projects/PropertyPro2.0/src/reportWebVitals.ts":"2","/Users/mattbalnis/Projects/PropertyPro2.0/src/Initialize.ts":"3","/Users/mattbalnis/Projects/PropertyPro2.0/src/App.tsx":"4","/Users/mattbalnis/Projects/PropertyPro2.0/src/Contexts/AuthorizationContext.tsx":"5","/Users/mattbalnis/Projects/PropertyPro2.0/src/aws-exports.js":"6","/Users/mattbalnis/Projects/PropertyPro2.0/src/Utils/Hooks/index.ts":"7","/Users/mattbalnis/Projects/PropertyPro2.0/src/Contexts/ListingContext.tsx":"8","/Users/mattbalnis/Projects/PropertyPro2.0/src/Utils/Hooks/useSession.tsx":"9","/Users/mattbalnis/Projects/PropertyPro2.0/src/Models/Session.ts":"10","/Users/mattbalnis/Projects/PropertyPro2.0/src/graphql/mutations.ts":"11","/Users/mattbalnis/Projects/PropertyPro2.0/src/graphql/queries.ts":"12","/Users/mattbalnis/Projects/PropertyPro2.0/src/graphql/callGraphQL.ts":"13","/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Places/Geocoding.ts":"14","/Users/mattbalnis/Projects/PropertyPro2.0/src/Utils/address.tsx":"15","/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Places/index.ts":"16","/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Places/AutoComplete.ts":"17","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/About/AboutPage.tsx":"18","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Settings/SettingsPage.tsx":"19","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/SessionViewerPage.tsx":"20","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Error/ErrorPage.tsx":"21","/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/LoadingSpinner.tsx":"22","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/SessionViewerDashboard.tsx":"23","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingsPanel.tsx":"24","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Map.tsx":"25","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingsList.tsx":"26","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/NewListingDialog.tsx":"27","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingViewer.tsx":"28","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingMarker.tsx":"29","/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/AddressSearchBar.tsx":"30","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/EditListingDialog.tsx":"31","/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/Header.tsx":"32","/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/HeaderDropdown.tsx":"33","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Landing/LandingPage.tsx":"34","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Loading/LoadingPage.tsx":"35","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/HomePage.tsx":"36","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/HomeDashboard.tsx":"37","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/ExistingSessionsSection.tsx":"38","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/NewSessionSection.tsx":"39","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/EditSessionDialog.tsx":"40","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/NewSessionDialog.tsx":"41","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/SidePanel.tsx":"42","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/PointsOfInterest/EditPointOfInterestDialog.tsx":"43","/Users/mattbalnis/Projects/PropertyPro2.0/src/Contexts/PointOfInterestContext.tsx":"44","/Users/mattbalnis/Projects/PropertyPro2.0/src/API.ts":"45","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/PointsOfInterest/PointsOfInterestPanel.tsx":"46","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/PointsOfInterest/PointsOfInterestList.tsx":"47","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/PointsOfInterest/NewPointOfInterestDialog.tsx":"48","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestViewer.tsx":"49","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/MapMarker.tsx":"50","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestMarker.tsx":"51","/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Routes/index.ts":"52","/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Routes/Directions.ts":"53","/Users/mattbalnis/Projects/PropertyPro2.0/src/Contexts/MapContext.tsx":"54","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Directions/DirectionsPanel.tsx":"55","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Directions/DirectionsForm.tsx":"56","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Directions/DirectionsResults.tsx":"57","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Directions/TravelModeButton.tsx":"58"},{"size":1059,"mtime":1641243124092,"results":"59","hashOfConfig":"60"},{"size":425,"mtime":1640829583847,"results":"61","hashOfConfig":"60"},{"size":1102,"mtime":1640898971888,"results":"62","hashOfConfig":"60"},{"size":1601,"mtime":1641338522092,"results":"63","hashOfConfig":"60"},{"size":1829,"mtime":1640830999854,"results":"64","hashOfConfig":"60"},{"size":1746,"mtime":1640969346830,"results":"65","hashOfConfig":"60"},{"size":30,"mtime":1640826368619,"results":"66","hashOfConfig":"60"},{"size":1492,"mtime":1640826368597,"results":"67","hashOfConfig":"60"},{"size":2503,"mtime":1640826368620,"results":"68","hashOfConfig":"60"},{"size":2237,"mtime":1640978470434,"results":"69","hashOfConfig":"60"},{"size":2404,"mtime":1640969342208,"results":"70","hashOfConfig":"60"},{"size":1650,"mtime":1640969342136,"results":"71","hashOfConfig":"60"},{"size":602,"mtime":1640826368624,"results":"72","hashOfConfig":"60"},{"size":1949,"mtime":1641155009812,"results":"73","hashOfConfig":"60"},{"size":170,"mtime":1640826368621,"results":"74","hashOfConfig":"60"},{"size":480,"mtime":1640826368553,"results":"75","hashOfConfig":"60"},{"size":2193,"mtime":1640826368551,"results":"76","hashOfConfig":"60"},{"size":202,"mtime":1640969829225,"results":"77","hashOfConfig":"60"},{"size":208,"mtime":1640969933019,"results":"78","hashOfConfig":"60"},{"size":1432,"mtime":1641337867987,"results":"79","hashOfConfig":"60"},{"size":287,"mtime":1640969958474,"results":"80","hashOfConfig":"60"},{"size":864,"mtime":1640970170449,"results":"81","hashOfConfig":"60"},{"size":979,"mtime":1641156892547,"results":"82","hashOfConfig":"60"},{"size":1299,"mtime":1640978005351,"results":"83","hashOfConfig":"60"},{"size":5026,"mtime":1641158064187,"results":"84","hashOfConfig":"60"},{"size":2029,"mtime":1641161592229,"results":"85","hashOfConfig":"60"},{"size":7903,"mtime":1641351301306,"results":"86","hashOfConfig":"60"},{"size":2927,"mtime":1641162523324,"results":"87","hashOfConfig":"60"},{"size":637,"mtime":1641336520023,"results":"88","hashOfConfig":"60"},{"size":1440,"mtime":1641351510187,"results":"89","hashOfConfig":"60"},{"size":8259,"mtime":1641351281591,"results":"90","hashOfConfig":"60"},{"size":727,"mtime":1640970371569,"results":"91","hashOfConfig":"60"},{"size":928,"mtime":1641243124087,"results":"92","hashOfConfig":"60"},{"size":995,"mtime":1640970335896,"results":"93","hashOfConfig":"60"},{"size":655,"mtime":1640970411678,"results":"94","hashOfConfig":"60"},{"size":269,"mtime":1640970220943,"results":"95","hashOfConfig":"60"},{"size":289,"mtime":1640970049962,"results":"96","hashOfConfig":"60"},{"size":2984,"mtime":1641337558779,"results":"97","hashOfConfig":"60"},{"size":864,"mtime":1641243124089,"results":"98","hashOfConfig":"60"},{"size":2850,"mtime":1640970218253,"results":"99","hashOfConfig":"60"},{"size":4654,"mtime":1641351216178,"results":"100","hashOfConfig":"60"},{"size":2537,"mtime":1641160239380,"results":"101","hashOfConfig":"60"},{"size":6693,"mtime":1641351319654,"results":"102","hashOfConfig":"60"},{"size":1788,"mtime":1640978798810,"results":"103","hashOfConfig":"60"},{"size":13540,"mtime":1640969342379,"results":"104","hashOfConfig":"60"},{"size":1493,"mtime":1640981222922,"results":"105","hashOfConfig":"60"},{"size":2425,"mtime":1641161976484,"results":"106","hashOfConfig":"60"},{"size":6422,"mtime":1641351335943,"results":"107","hashOfConfig":"60"},{"size":3017,"mtime":1641162456301,"results":"108","hashOfConfig":"60"},{"size":977,"mtime":1641065514121,"results":"109","hashOfConfig":"60"},{"size":709,"mtime":1641161094788,"results":"110","hashOfConfig":"60"},{"size":30,"mtime":1641154548358,"results":"111","hashOfConfig":"60"},{"size":439,"mtime":1641155011292,"results":"112","hashOfConfig":"60"},{"size":2241,"mtime":1641251594319,"results":"113","hashOfConfig":"60"},{"size":2060,"mtime":1641251150036,"results":"114","hashOfConfig":"60"},{"size":3327,"mtime":1641351250901,"results":"115","hashOfConfig":"60"},{"size":1655,"mtime":1641251080674,"results":"116","hashOfConfig":"60"},{"size":1102,"mtime":1641247923033,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"6vjh30",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"120"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"120"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"120"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"120"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"120"},"/Users/mattbalnis/Projects/PropertyPro2.0/src/index.tsx",[],["244","245"],"/Users/mattbalnis/Projects/PropertyPro2.0/src/reportWebVitals.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Initialize.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/App.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Contexts/AuthorizationContext.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/aws-exports.js",[],["246","247"],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Utils/Hooks/index.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Contexts/ListingContext.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Utils/Hooks/useSession.tsx",["248","249","250"],"import React from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport {\n  CreateSessionMutation,\n  DeleteSessionMutation,\n  GetSessionQuery,\n  ListSessionsQuery,\n  UpdateSessionMutation,\n} from \"../../API\";\nimport callGraphQL from \"../../graphql/callGraphQL\";\nimport {\n  createSession,\n  deleteSession,\n  updateSession,\n} from \"../../graphql/mutations\";\nimport { getSession, listSessions } from \"../../graphql/queries\";\nimport SessionData, {\n  mapGetSession,\n  mapListSessions,\n  mapUpdateSession,\n  sessionDataToApiSessionInput,\n} from \"../../Models/Session\";\n\nexport function useSessions() {\n  return useQuery<SessionData[]>(\"sessions\", async () => {\n    const result = await callGraphQL<ListSessionsQuery>(listSessions);\n    return mapListSessions(result);\n  });\n}\n\nexport function useSession(sessionId: string) {\n  return useQuery<SessionData | undefined>(\n    [\"sessions\", sessionId],\n    async () => {\n      const result = await callGraphQL<GetSessionQuery>(getSession, {\n        id: sessionId,\n      });\n      return mapGetSession(result);\n    }\n  );\n}\n\nexport function useCreateSession() {\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async (newSession: SessionData) => {\n      const createSessionInput = sessionDataToApiSessionInput(newSession);\n      const response = await callGraphQL<CreateSessionMutation>(createSession, {\n        input: createSessionInput,\n      });\n      // TODO: map the response to the created SessionData object\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(\"sessions\");\n      },\n    }\n  );\n}\n\nexport function useUpdateSession() {\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async (updatedSession: SessionData) => {\n      const sessionUpdateInput = sessionDataToApiSessionInput(updatedSession);\n      const response = await callGraphQL<UpdateSessionMutation>(updateSession, {\n        input: sessionUpdateInput,\n      });\n      return mapUpdateSession(response);\n    },\n    {\n      onSuccess: (data, variables) => {\n        queryClient.invalidateQueries(\"sessions\");\n      },\n    }\n  );\n}\n\nexport function useDeleteSession() {\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async (sessionId: string) => {\n      const response = await callGraphQL<DeleteSessionMutation>(deleteSession, {\n        input: { id: sessionId },\n      });\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(\"sessions\");\n      },\n    }\n  );\n}\n","/Users/mattbalnis/Projects/PropertyPro2.0/src/Models/Session.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/graphql/mutations.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/graphql/queries.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/graphql/callGraphQL.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Places/Geocoding.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Utils/address.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Places/index.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Places/AutoComplete.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/About/AboutPage.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Settings/SettingsPage.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/SessionViewerPage.tsx",["251"],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Error/ErrorPage.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/LoadingSpinner.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/SessionViewerDashboard.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingsPanel.tsx",["252","253"],"import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport styles from \"./ListingsPanel.module.scss\";\nimport SessionData from \"../../../../Models/Session\";\nimport NewListingDialog from \"./NewListingDialog\";\nimport ListingsList from \"./ListingsList\";\nimport { ListingContext } from \"../../../../Contexts/ListingContext\";\nimport ListingViewer from \"./ListingViewer\";\n\nexport default function ListingsPanel({ session }: IProps) {\n  const { selectedListing } = React.useContext(ListingContext);\n\n  const [creatingNewListing, setCreatingNewListing] = React.useState(false);\n\n  function getContent() {\n    // if we have a selected listing, show it\n    if (selectedListing)\n      return <ListingViewer session={session} listing={selectedListing} />;\n\n    // otherwise, render the list of listings\n    return (\n      <ListingsList\n        onCreateNewListingClick={() => setCreatingNewListing(true)}\n        session={session}\n      />\n    );\n  }\n\n  return (\n    <>\n      {creatingNewListing && (\n        <NewListingDialog\n          session={session}\n          onClose={() => setCreatingNewListing(false)}\n        />\n      )}\n      <div className={styles.container}>{getContent()}</div>\n    </>\n  );\n}\n\ninterface IProps {\n  session: SessionData;\n}\n","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Map.tsx",["254","255","256"],"import React from \"react\";\nimport GoogleMapReact, { fitBounds } from \"google-map-react\";\nimport { Coordinate } from \"../../../API/Google Places/Geocoding\";\nimport SessionData from \"../../../Models/Session\";\nimport { ListingContext } from \"../../../Contexts/ListingContext\";\nimport { PointOfInterestContext } from \"../../../Contexts/PointOfInterestContext\";\nimport MapMarker, { MapMarkerProps, MarkerType } from \"./MapMarker\";\nimport { MapContext } from \"../../../Contexts/MapContext\";\n\ninterface IProps {\n  session: SessionData;\n}\n\nexport default function Map({ session }: IProps) {\n  const {\n    selectedListing,\n    hoveredListingIds,\n    setSelectedListing,\n    addHoveredListingId,\n    removeHoveredListingId,\n  } = React.useContext(ListingContext);\n  const {\n    selectedPointOfInterest,\n    hoveredPointOfInterestIds,\n    setSelectedPointOfInterest,\n    addHoveredPointOfInterestId,\n    removeHoveredPointOfInterestId,\n  } = React.useContext(PointOfInterestContext);\n  const { center, zoom, setMap, setCenter, setZoom } =\n    React.useContext(MapContext);\n\n  // default zoom and center, to be used for resetting\n  const defaultZoomRef = React.useRef<number>();\n  const defaultCenterRef = React.useRef<Coordinate>();\n  const mapContainerRef = React.useRef<HTMLDivElement>(null);\n\n  // get zoom level and center for map bounds on first load\n  const loaded = React.useRef<boolean>(false);\n  React.useEffect(() => {\n    if (!mapContainerRef.current) return;\n    if (loaded.current) return;\n\n    const mapContainerRect = mapContainerRef.current.getBoundingClientRect();\n    const { zoom, center } = fitBounds(\n      {\n        sw: session.searchBounds.bottomLeft,\n        ne: session.searchBounds.topRight,\n      },\n      { width: mapContainerRect?.width, height: mapContainerRect?.height }\n    );\n    setCenter(center);\n    setZoom(zoom);\n    defaultCenterRef.current = center;\n    defaultZoomRef.current = zoom;\n    loaded.current = true;\n  }, [session]);\n\n  // update the zoom and center when the selected listing changes\n  React.useEffect(() => {\n    if (selectedListing) {\n      setZoom(17);\n      setCenter(selectedListing.location);\n      return;\n    }\n\n    // reset the zoom and center if no listing is selected\n    setZoom(defaultZoomRef.current);\n    setCenter(defaultCenterRef.current);\n  }, [selectedListing]);\n\n  // update the zoom and center when the selected point of interest changes\n  React.useEffect(() => {\n    if (selectedPointOfInterest) {\n      setZoom(17);\n      setCenter(selectedPointOfInterest.location);\n      return;\n    }\n\n    // reset the zoom and center if no point of interest is selected\n    setZoom(defaultZoomRef.current);\n    setCenter(defaultCenterRef.current);\n  }, [selectedPointOfInterest]);\n\n  function handleMarkerClick(key: string, markerProps: MapMarkerProps) {\n    markerProps.onClick();\n  }\n\n  function handleMarkerHover(key: string, markerProps: MapMarkerProps) {\n    markerProps.onMouseEnter();\n  }\n\n  function handleMarkerUnhover(key: string, markerProps: MapMarkerProps) {\n    markerProps.onMouseLeave();\n  }\n\n  return (\n    <div ref={mapContainerRef} style={{ height: \"100%\" }}>\n      {center && zoom && (\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY! }}\n          center={center}\n          zoom={zoom}\n          onChildClick={handleMarkerClick}\n          onChildMouseEnter={handleMarkerHover}\n          onChildMouseLeave={handleMarkerUnhover}\n          onGoogleApiLoaded={({ map }) => setMap(map)}\n          yesIWantToUseGoogleMapApiInternals={true}\n          options={{\n            streetViewControl: true,\n            mapTypeControl: true,\n            fullscreenControl: false,\n          }}\n        >\n          {session.listings?.map((listing) => (\n            <MapMarker\n              key={listing.id}\n              type={MarkerType.Listing}\n              data={listing}\n              hovered={hoveredListingIds.includes(listing.id)}\n              lat={listing.location.lat}\n              lng={listing.location.lng}\n              onClick={() => setSelectedListing(listing)}\n              onMouseEnter={() => addHoveredListingId(listing.id)}\n              onMouseLeave={() => removeHoveredListingId(listing.id)}\n            />\n          ))}\n          {session.pointsOfInterest?.map((pointOfInterest) => (\n            <MapMarker\n              key={pointOfInterest.id}\n              type={MarkerType.PointOfInterest}\n              data={pointOfInterest}\n              hovered={hoveredPointOfInterestIds.includes(pointOfInterest.id)}\n              lat={pointOfInterest.location.lat}\n              lng={pointOfInterest.location.lng}\n              onClick={() => setSelectedPointOfInterest(pointOfInterest)}\n              onMouseEnter={() =>\n                addHoveredPointOfInterestId(pointOfInterest.id)\n              }\n              onMouseLeave={() =>\n                removeHoveredPointOfInterestId(pointOfInterest.id)\n              }\n            />\n          ))}\n        </GoogleMapReact>\n      )}\n    </div>\n  );\n}\n","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingsList.tsx",["257"],"import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport SessionData, { Listing } from \"../../../../Models/Session\";\nimport styles from \"./ListingsList.module.scss\";\nimport { ListingContext } from \"../../../../Contexts/ListingContext\";\n\nexport default function ListingsList({\n  session,\n  onCreateNewListingClick,\n}: IListingsListProps) {\n  function getContent() {\n    if (!session.listings || session.listings.length < 1)\n      return <Card.Body>No listings</Card.Body>;\n\n    return (\n      <ListGroup>\n        {session.listings.map((listing) => (\n          <ListingsListItem key={listing.id} listing={listing} />\n        ))}\n      </ListGroup>\n    );\n  }\n\n  return (\n    <Card className={styles.card}>\n      <Card.Header className={styles.header}>\n        <span className={styles.title}>Listings</span>\n        <Button size=\"sm\" onClick={onCreateNewListingClick}>\n          Create\n        </Button>\n      </Card.Header>\n      {getContent()}\n    </Card>\n  );\n}\n\ninterface IListingsListProps {\n  session: SessionData;\n  onCreateNewListingClick: () => void;\n}\n\nfunction ListingsListItem({ listing }: IListingsListItemProps) {\n  const { setSelectedListing, addHoveredListingId, removeHoveredListingId } =\n    React.useContext(ListingContext);\n\n  React.useEffect(() => {\n    return () => {\n      removeHoveredListingId(listing.id);\n    };\n  }, []);\n\n  function handleClick() {\n    setSelectedListing(listing);\n  }\n\n  function handleListingHover() {\n    addHoveredListingId(listing.id);\n  }\n\n  function handleListingUnhover() {\n    removeHoveredListingId(listing.id);\n  }\n\n  return (\n    <ListGroupItem\n      className={styles.listItem}\n      onClick={handleClick}\n      onMouseEnter={handleListingHover}\n      onMouseLeave={handleListingUnhover}\n    >\n      {listing.name}\n    </ListGroupItem>\n  );\n}\n\ninterface IListingsListItemProps {\n  listing: Listing;\n}\n","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/NewListingDialog.tsx",["258"],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingViewer.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingMarker.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/AddressSearchBar.tsx",["259"],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/EditListingDialog.tsx",["260","261"],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/Header.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/HeaderDropdown.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Landing/LandingPage.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Loading/LoadingPage.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/HomePage.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/HomeDashboard.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/ExistingSessionsSection.tsx",["262"],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/NewSessionSection.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/EditSessionDialog.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/NewSessionDialog.tsx",["263"],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/SidePanel.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/PointsOfInterest/EditPointOfInterestDialog.tsx",["264","265"],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Contexts/PointOfInterestContext.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/API.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/PointsOfInterest/PointsOfInterestPanel.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/PointsOfInterest/PointsOfInterestList.tsx",["266"],"import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport SessionData, { PointOfInterest } from \"../../../../Models/Session\";\nimport styles from \"./PointsOfInterestList.module.scss\";\nimport { PointOfInterestContext } from \"../../../../Contexts/PointOfInterestContext\";\n\nexport default function PointsOfInterestList({\n  session,\n  onCreateNewPointOfInterestClick,\n}: IPointsOfInterestListProps) {\n  function getContent() {\n    if (!session.pointsOfInterest || session.pointsOfInterest.length < 1)\n      return <Card.Body>No points of interest</Card.Body>;\n\n    return (\n      <ListGroup>\n        {session.pointsOfInterest.map((pointOfInterest) => (\n          <PointsOfInterestListItem\n            key={pointOfInterest.id}\n            pointOfInterest={pointOfInterest}\n          />\n        ))}\n      </ListGroup>\n    );\n  }\n\n  return (\n    <Card className={styles.card}>\n      <Card.Header className={styles.header}>\n        <span className={styles.title}>Points of Interest</span>\n        <Button size=\"sm\" onClick={onCreateNewPointOfInterestClick}>\n          Create\n        </Button>\n      </Card.Header>\n      {getContent()}\n    </Card>\n  );\n}\n\ninterface IPointsOfInterestListProps {\n  session: SessionData;\n  onCreateNewPointOfInterestClick: () => void;\n}\n\nfunction PointsOfInterestListItem({\n  pointOfInterest,\n}: IPointsOfInterestListItemProps) {\n  const {\n    setSelectedPointOfInterest,\n    addHoveredPointOfInterestId,\n    removeHoveredPointOfInterestId,\n  } = React.useContext(PointOfInterestContext);\n\n  React.useEffect(() => {\n    return () => {\n      removeHoveredPointOfInterestId(pointOfInterest.id);\n    };\n  }, []);\n\n  function handleClick() {\n    setSelectedPointOfInterest(pointOfInterest);\n  }\n\n  function handlePointOfInterestHover() {\n    addHoveredPointOfInterestId(pointOfInterest.id);\n  }\n\n  function handlePointOfInterestUnhover() {\n    removeHoveredPointOfInterestId(pointOfInterest.id);\n  }\n\n  return (\n    <ListGroupItem\n      className={styles.listItem}\n      onClick={handleClick}\n      onMouseEnter={handlePointOfInterestHover}\n      onMouseLeave={handlePointOfInterestUnhover}\n    >\n      {pointOfInterest.name}\n    </ListGroupItem>\n  );\n}\n\ninterface IPointsOfInterestListItemProps {\n  pointOfInterest: PointOfInterest;\n}\n","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/PointsOfInterest/NewPointOfInterestDialog.tsx",["267"],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestViewer.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/MapMarker.tsx",["268","269"],"import React from \"react\";\nimport { PointOfInterest, Listing } from \"../../../Models/Session\";\nimport ListingMarker from \"./Listings/ListingMarker\";\nimport PointOfInterestMarker from \"./PointsOfInterest/PointOfInterestMarker\";\n\nexport default function MapMarker(props: MapMarkerProps) {\n  const { type, data, ...restProps } = props;\n\n  if (type === MarkerType.Listing) {\n    const listing = data as Listing;\n    return <ListingMarker listing={listing} {...restProps} />;\n  }\n\n  if (type === MarkerType.PointOfInterest) {\n    const pointOfInterest = data as PointOfInterest;\n    return (\n      <PointOfInterestMarker pointOfInterest={pointOfInterest} {...restProps} />\n    );\n  }\n\n  return null;\n}\n\nexport interface MapMarkerProps {\n  data: Listing | PointOfInterest;\n  type: MarkerType;\n  hovered?: boolean;\n  lat: number;\n  lng: number;\n  onClick: () => void;\n  onMouseEnter: () => void;\n  onMouseLeave: () => void;\n}\n\nexport enum MarkerType {\n  Listing,\n  PointOfInterest,\n}\n","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestMarker.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Routes/index.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Routes/Directions.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Contexts/MapContext.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Directions/DirectionsPanel.tsx",["270","271"],"import React from \"react\";\nimport { getDirections } from \"../../../../API/Google Routes\";\nimport { MapContext } from \"../../../../Contexts/MapContext\";\nimport DirectionsForm from \"./DirectionsForm\";\nimport DirectionsResults from \"./DirectionsResults\";\nimport styles from \"./DirectionsPanel.module.scss\";\nimport LoadingSpinner from \"../../../../Components/LoadingSpinner\";\n\nexport default function DirectionsPanel() {\n  const { showDirections, clearDirections } = React.useContext(MapContext);\n  const [directions, setDirections] =\n    React.useState<google.maps.DirectionsResult>();\n  const [routeIndex, setRouteIndex] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n\n  // remove directions when component unmounts\n  React.useEffect(() => {\n    return () => clearDirections();\n  }, []);\n\n  // show directions whenever they change\n  React.useEffect(() => {\n    if (!directions) {\n      clearDirections();\n    } else {\n      showDirections(directions, { routeIndex });\n    }\n  }, [directions, routeIndex]);\n\n  const handleSearch = async (\n    origin: string,\n    destination: string,\n    travelMode: google.maps.TravelMode\n  ) => {\n    try {\n      setLoading(true);\n      const directions = await getDirections({\n        origin,\n        destination,\n        travelMode,\n        provideRouteAlternatives: true,\n      });\n      setRouteIndex(0);\n      setDirections(directions);\n    } catch (error) {\n      setDirections(undefined);\n      console.error(\"Failed to load directions: \" + error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.form}>\n        <DirectionsForm onSearchClick={handleSearch} />\n      </div>\n      <div className={styles.results}>\n        {loading ? (\n          <LoadingSpinner text=\"calculating routes...\" />\n        ) : (\n          <DirectionsResults\n            directions={directions}\n            onRouteClick={setRouteIndex}\n            activeRouteIndex={routeIndex}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Directions/DirectionsForm.tsx",["272"],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Directions/DirectionsResults.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Directions/TravelModeButton.tsx",["273"],"import React from \"react\";\nimport classNames from \"classnames\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faWalking,\n  faCar,\n  faSubway,\n  faBiking,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"./TravelModeButton.module.scss\";\n\n// copying for shorthand\ntype TravelMode = google.maps.TravelMode;\nconst TravelMode = { ...google.maps.TravelMode };\n\nexport default function TravelModeButton({\n  icon,\n  active,\n  onClick,\n}: TravelModeButtonProps) {\n  return (\n    <div\n      className={classNames(styles.travelModeButton, active && styles.active)}\n      onClick={onClick}\n    >\n      <FontAwesomeIcon icon={icon} />\n    </div>\n  );\n}\n\ninterface TravelModeButtonProps {\n  icon: IconProp;\n  active?: boolean;\n  onClick: () => void;\n}\n\nexport function getIcon(travelMode: TravelMode): IconProp {\n  if (travelMode === TravelMode.BICYCLING) return faBiking;\n  if (travelMode === TravelMode.TRANSIT) return faSubway;\n  if (travelMode === TravelMode.WALKING) return faWalking;\n  return faCar;\n}\n",{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"279","line":1,"column":8,"nodeType":"280","messageId":"281","endLine":1,"endColumn":13},{"ruleId":"278","severity":1,"message":"282","line":49,"column":13,"nodeType":"280","messageId":"281","endLine":49,"endColumn":21},{"ruleId":"278","severity":1,"message":"282","line":86,"column":13,"nodeType":"280","messageId":"281","endLine":86,"endColumn":21},{"ruleId":"278","severity":1,"message":"283","line":14,"column":5,"nodeType":"280","messageId":"281","endLine":14,"endColumn":12},{"ruleId":"278","severity":1,"message":"284","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":12},{"ruleId":"278","severity":1,"message":"285","line":3,"column":8,"nodeType":"280","messageId":"281","endLine":3,"endColumn":14},{"ruleId":"286","severity":1,"message":"287","line":56,"column":6,"nodeType":"288","endLine":56,"endColumn":15,"suggestions":"289"},{"ruleId":"286","severity":1,"message":"287","line":69,"column":6,"nodeType":"288","endLine":69,"endColumn":23,"suggestions":"290"},{"ruleId":"286","severity":1,"message":"287","line":82,"column":6,"nodeType":"288","endLine":82,"endColumn":31,"suggestions":"291"},{"ruleId":"286","severity":1,"message":"292","line":53,"column":6,"nodeType":"288","endLine":53,"endColumn":8,"suggestions":"293"},{"ruleId":"278","severity":1,"message":"294","line":7,"column":3,"nodeType":"280","messageId":"281","endLine":7,"endColumn":25},{"ruleId":"278","severity":1,"message":"294","line":4,"column":3,"nodeType":"280","messageId":"281","endLine":4,"endColumn":25},{"ruleId":"278","severity":1,"message":"294","line":8,"column":3,"nodeType":"280","messageId":"281","endLine":8,"endColumn":25},{"ruleId":"278","severity":1,"message":"295","line":207,"column":7,"nodeType":"280","messageId":"281","endLine":207,"endColumn":45},{"ruleId":"278","severity":1,"message":"283","line":14,"column":5,"nodeType":"280","messageId":"281","endLine":14,"endColumn":12},{"ruleId":"278","severity":1,"message":"294","line":5,"column":10,"nodeType":"280","messageId":"281","endLine":5,"endColumn":32},{"ruleId":"278","severity":1,"message":"294","line":6,"column":3,"nodeType":"280","messageId":"281","endLine":6,"endColumn":25},{"ruleId":"278","severity":1,"message":"295","line":177,"column":7,"nodeType":"280","messageId":"281","endLine":177,"endColumn":53},{"ruleId":"286","severity":1,"message":"296","line":61,"column":6,"nodeType":"288","endLine":61,"endColumn":8,"suggestions":"297"},{"ruleId":"278","severity":1,"message":"294","line":6,"column":3,"nodeType":"280","messageId":"281","endLine":6,"endColumn":25},{"ruleId":"298","severity":1,"message":"299","line":9,"column":16,"nodeType":"280","messageId":"300","endLine":9,"endColumn":26},{"ruleId":"298","severity":1,"message":"299","line":14,"column":16,"nodeType":"280","messageId":"300","endLine":14,"endColumn":26},{"ruleId":"286","severity":1,"message":"301","line":19,"column":6,"nodeType":"288","endLine":19,"endColumn":8,"suggestions":"302"},{"ruleId":"286","severity":1,"message":"303","line":28,"column":6,"nodeType":"288","endLine":28,"endColumn":30,"suggestions":"304"},{"ruleId":"305","severity":1,"message":"306","line":13,"column":7,"nodeType":"280","messageId":"307","endLine":13,"endColumn":17},{"ruleId":"305","severity":1,"message":"306","line":15,"column":7,"nodeType":"280","messageId":"307","endLine":15,"endColumn":17},"no-native-reassign",["308"],"no-negated-in-lhs",["309"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'isError' is assigned a value but never used.","'Card' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'setCenter' and 'setZoom'. Either include them or remove the dependency array.","ArrayExpression",["310"],["311"],["312"],"React Hook React.useEffect has missing dependencies: 'listing.id' and 'removeHoveredListingId'. Either include them or remove the dependency array.",["313"],"'AutoCompleteSuggestion' is defined but never used.","'DEFAULT_FORM_DATA' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'pointOfInterest.id' and 'removeHoveredPointOfInterestId'. Either include them or remove the dependency array.",["314"],"@typescript-eslint/no-use-before-define","'MarkerType' was used before it was defined.","noUseBeforeDefine","React Hook React.useEffect has a missing dependency: 'clearDirections'. Either include it or remove the dependency array.",["315"],"React Hook React.useEffect has missing dependencies: 'clearDirections' and 'showDirections'. Either include them or remove the dependency array.",["316"],"@typescript-eslint/no-redeclare","'TravelMode' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},"Update the dependencies array to be: [session, setCenter, setZoom]",{"range":"331","text":"332"},"Update the dependencies array to be: [selectedListing, setCenter, setZoom]",{"range":"333","text":"334"},"Update the dependencies array to be: [selectedPointOfInterest, setCenter, setZoom]",{"range":"335","text":"336"},"Update the dependencies array to be: [listing.id, removeHoveredListingId]",{"range":"337","text":"338"},"Update the dependencies array to be: [pointOfInterest.id, removeHoveredPointOfInterestId]",{"range":"339","text":"340"},"Update the dependencies array to be: [clearDirections]",{"range":"341","text":"342"},"Update the dependencies array to be: [clearDirections, directions, routeIndex, showDirections]",{"range":"343","text":"344"},[1946,1955],"[session, setCenter, setZoom]",[2303,2320],"[selectedListing, setCenter, setZoom]",[2704,2729],"[selectedPointOfInterest, setCenter, setZoom]",[1514,1516],"[listing.id, removeHoveredListingId]",[1798,1800],"[pointOfInterest.id, removeHoveredPointOfInterestId]",[810,812],"[clearDirections]",[1006,1030],"[clearDirections, directions, routeIndex, showDirections]"]