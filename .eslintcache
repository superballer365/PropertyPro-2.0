[{"/Users/mattbalnis/Projects/PropertyPro2.0/src/index.tsx":"1","/Users/mattbalnis/Projects/PropertyPro2.0/src/reportWebVitals.ts":"2","/Users/mattbalnis/Projects/PropertyPro2.0/src/Initialize.ts":"3","/Users/mattbalnis/Projects/PropertyPro2.0/src/App.tsx":"4","/Users/mattbalnis/Projects/PropertyPro2.0/src/Contexts/AuthorizationContext.tsx":"5","/Users/mattbalnis/Projects/PropertyPro2.0/src/aws-exports.js":"6","/Users/mattbalnis/Projects/PropertyPro2.0/src/Utils/Hooks/index.ts":"7","/Users/mattbalnis/Projects/PropertyPro2.0/src/Contexts/ListingContext.tsx":"8","/Users/mattbalnis/Projects/PropertyPro2.0/src/Utils/Hooks/useSession.tsx":"9","/Users/mattbalnis/Projects/PropertyPro2.0/src/Models/Session.ts":"10","/Users/mattbalnis/Projects/PropertyPro2.0/src/graphql/mutations.ts":"11","/Users/mattbalnis/Projects/PropertyPro2.0/src/graphql/queries.ts":"12","/Users/mattbalnis/Projects/PropertyPro2.0/src/graphql/callGraphQL.ts":"13","/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Places/Geocoding.ts":"14","/Users/mattbalnis/Projects/PropertyPro2.0/src/Utils/address.tsx":"15","/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Places/index.ts":"16","/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Places/AutoComplete.ts":"17","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/About/AboutPage.tsx":"18","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Settings/SettingsPage.tsx":"19","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/SessionViewerPage.tsx":"20","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Error/ErrorPage.tsx":"21","/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/LoadingSpinner.tsx":"22","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/SessionViewerDashboard.tsx":"23","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingsPanel.tsx":"24","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Map.tsx":"25","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingsList.tsx":"26","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/NewListingDialog.tsx":"27","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingViewer.tsx":"28","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingMarker.tsx":"29","/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/AddressSearchBar.tsx":"30","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/EditListingDialog.tsx":"31","/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/Header.tsx":"32","/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/HeaderDropdown.tsx":"33","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Landing/LandingPage.tsx":"34","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Loading/LoadingPage.tsx":"35","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/HomePage.tsx":"36","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/HomeDashboard.tsx":"37","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/ExistingSessionsSection.tsx":"38","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/NewSessionSection.tsx":"39","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/EditSessionDialog.tsx":"40","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/NewSessionDialog.tsx":"41","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/SidePanel.tsx":"42"},{"size":1059,"mtime":1640898988970,"results":"43","hashOfConfig":"44"},{"size":425,"mtime":1640829583847,"results":"45","hashOfConfig":"44"},{"size":1102,"mtime":1640898971888,"results":"46","hashOfConfig":"44"},{"size":1399,"mtime":1640971445170,"results":"47","hashOfConfig":"44"},{"size":1829,"mtime":1640830999854,"results":"48","hashOfConfig":"44"},{"size":1746,"mtime":1640969346830,"results":"49","hashOfConfig":"44"},{"size":30,"mtime":1640826368619,"results":"50","hashOfConfig":"44"},{"size":1492,"mtime":1640826368597,"results":"51","hashOfConfig":"44"},{"size":2503,"mtime":1640826368620,"results":"52","hashOfConfig":"44"},{"size":1920,"mtime":1640829841894,"results":"53","hashOfConfig":"44"},{"size":2404,"mtime":1640969342208,"results":"54","hashOfConfig":"44"},{"size":1650,"mtime":1640969342136,"results":"55","hashOfConfig":"44"},{"size":602,"mtime":1640826368624,"results":"56","hashOfConfig":"44"},{"size":1927,"mtime":1640826368552,"results":"57","hashOfConfig":"44"},{"size":170,"mtime":1640826368621,"results":"58","hashOfConfig":"44"},{"size":480,"mtime":1640826368553,"results":"59","hashOfConfig":"44"},{"size":2193,"mtime":1640826368551,"results":"60","hashOfConfig":"44"},{"size":202,"mtime":1640969829225,"results":"61","hashOfConfig":"44"},{"size":208,"mtime":1640969933019,"results":"62","hashOfConfig":"44"},{"size":1462,"mtime":1640972171183,"results":"63","hashOfConfig":"44"},{"size":287,"mtime":1640969958474,"results":"64","hashOfConfig":"44"},{"size":864,"mtime":1640970170449,"results":"65","hashOfConfig":"44"},{"size":659,"mtime":1640975076724,"results":"66","hashOfConfig":"44"},{"size":1299,"mtime":1640970953123,"results":"67","hashOfConfig":"44"},{"size":3313,"mtime":1640971071222,"results":"68","hashOfConfig":"44"},{"size":2024,"mtime":1640971307862,"results":"69","hashOfConfig":"44"},{"size":7753,"mtime":1640971053373,"results":"70","hashOfConfig":"44"},{"size":2673,"mtime":1640970984748,"results":"71","hashOfConfig":"44"},{"size":553,"mtime":1640970902494,"results":"72","hashOfConfig":"44"},{"size":1391,"mtime":1640970429435,"results":"73","hashOfConfig":"44"},{"size":8109,"mtime":1640970904231,"results":"74","hashOfConfig":"44"},{"size":727,"mtime":1640970371569,"results":"75","hashOfConfig":"44"},{"size":928,"mtime":1640971465668,"results":"76","hashOfConfig":"44"},{"size":995,"mtime":1640970335896,"results":"77","hashOfConfig":"44"},{"size":655,"mtime":1640970411678,"results":"78","hashOfConfig":"44"},{"size":269,"mtime":1640970220943,"results":"79","hashOfConfig":"44"},{"size":289,"mtime":1640970049962,"results":"80","hashOfConfig":"44"},{"size":2985,"mtime":1640970213872,"results":"81","hashOfConfig":"44"},{"size":864,"mtime":1640970050367,"results":"82","hashOfConfig":"44"},{"size":2850,"mtime":1640970218253,"results":"83","hashOfConfig":"44"},{"size":4505,"mtime":1640970282878,"results":"84","hashOfConfig":"44"},{"size":1181,"mtime":1640977220100,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"6vjh30",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mattbalnis/Projects/PropertyPro2.0/src/index.tsx",[],["178","179"],"/Users/mattbalnis/Projects/PropertyPro2.0/src/reportWebVitals.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Initialize.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/App.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Contexts/AuthorizationContext.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/aws-exports.js",[],["180","181"],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Utils/Hooks/index.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Contexts/ListingContext.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Utils/Hooks/useSession.tsx",["182","183","184"],"import React from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport {\n  CreateSessionMutation,\n  DeleteSessionMutation,\n  GetSessionQuery,\n  ListSessionsQuery,\n  UpdateSessionMutation,\n} from \"../../API\";\nimport callGraphQL from \"../../graphql/callGraphQL\";\nimport {\n  createSession,\n  deleteSession,\n  updateSession,\n} from \"../../graphql/mutations\";\nimport { getSession, listSessions } from \"../../graphql/queries\";\nimport SessionData, {\n  mapGetSession,\n  mapListSessions,\n  mapUpdateSession,\n  sessionDataToApiSessionInput,\n} from \"../../Models/Session\";\n\nexport function useSessions() {\n  return useQuery<SessionData[]>(\"sessions\", async () => {\n    const result = await callGraphQL<ListSessionsQuery>(listSessions);\n    return mapListSessions(result);\n  });\n}\n\nexport function useSession(sessionId: string) {\n  return useQuery<SessionData | undefined>(\n    [\"sessions\", sessionId],\n    async () => {\n      const result = await callGraphQL<GetSessionQuery>(getSession, {\n        id: sessionId,\n      });\n      return mapGetSession(result);\n    }\n  );\n}\n\nexport function useCreateSession() {\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async (newSession: SessionData) => {\n      const createSessionInput = sessionDataToApiSessionInput(newSession);\n      const response = await callGraphQL<CreateSessionMutation>(createSession, {\n        input: createSessionInput,\n      });\n      // TODO: map the response to the created SessionData object\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(\"sessions\");\n      },\n    }\n  );\n}\n\nexport function useUpdateSession() {\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async (updatedSession: SessionData) => {\n      const sessionUpdateInput = sessionDataToApiSessionInput(updatedSession);\n      const response = await callGraphQL<UpdateSessionMutation>(updateSession, {\n        input: sessionUpdateInput,\n      });\n      return mapUpdateSession(response);\n    },\n    {\n      onSuccess: (data, variables) => {\n        queryClient.invalidateQueries(\"sessions\");\n      },\n    }\n  );\n}\n\nexport function useDeleteSession() {\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async (sessionId: string) => {\n      const response = await callGraphQL<DeleteSessionMutation>(deleteSession, {\n        input: { id: sessionId },\n      });\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(\"sessions\");\n      },\n    }\n  );\n}\n","/Users/mattbalnis/Projects/PropertyPro2.0/src/Models/Session.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/graphql/mutations.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/graphql/queries.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/graphql/callGraphQL.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Places/Geocoding.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Utils/address.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Places/index.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/API/Google Places/AutoComplete.ts",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/About/AboutPage.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Settings/SettingsPage.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/SessionViewerPage.tsx",["185"],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Error/ErrorPage.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/LoadingSpinner.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/SessionViewerDashboard.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingsPanel.tsx",["186","187"],"import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport styles from \"./ListingsPanel.module.scss\";\nimport SessionData from \"../../../../Models/Session\";\nimport NewListingDialog from \"./NewListingDialog\";\nimport ListingsList from \"./ListingsList\";\nimport { ListingContext } from \"../../../../Contexts/ListingContext\";\nimport ListingViewer from \"./ListingViewer\";\n\nexport default function ListingsPanel({ session }: IProps) {\n  const { selectedListing } = React.useContext(ListingContext);\n\n  const [creatingNewListing, setCreatingNewListing] = React.useState(false);\n\n  function getContent() {\n    // if we have a selected listing, show it\n    if (selectedListing)\n      return <ListingViewer session={session} listing={selectedListing} />;\n\n    // otherwise, render the list of listings\n    return (\n      <ListingsList\n        onCreateNewListingClick={() => setCreatingNewListing(true)}\n        session={session}\n      />\n    );\n  }\n\n  return (\n    <>\n      {creatingNewListing && (\n        <NewListingDialog\n          session={session}\n          onClose={() => setCreatingNewListing(false)}\n        />\n      )}\n      <div className={styles.container}>{getContent()}</div>\n    </>\n  );\n}\n\ninterface IProps {\n  session: SessionData;\n}\n","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Map.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingsList.tsx",["188"],"import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport SessionData, { Listing } from \"../../../../Models/Session\";\nimport styles from \"./ListingsList.module.scss\";\nimport { ListingContext } from \"../../../../Contexts/ListingContext\";\n\nexport default function ListingsList({\n  session,\n  onCreateNewListingClick,\n}: IListingsListProps) {\n  function getContent() {\n    if (!session.listings || session.listings.length < 1)\n      return <Card.Body>No listings</Card.Body>;\n\n    return (\n      <ListGroup>\n        {session.listings.map((listing) => (\n          <ListingsListItem key={listing.id} listing={listing} />\n        ))}\n      </ListGroup>\n    );\n  }\n\n  return (\n    <Card className={styles.card}>\n      <Card.Header className={styles.header}>\n        <span className={styles.title}>Listings</span>\n        <Button size=\"sm\" onClick={onCreateNewListingClick}>\n          +\n        </Button>\n      </Card.Header>\n      {getContent()}\n    </Card>\n  );\n}\n\ninterface IListingsListProps {\n  session: SessionData;\n  onCreateNewListingClick: () => void;\n}\n\nfunction ListingsListItem({ listing }: IListingsListItemProps) {\n  const { setSelectedListing, addHoveredListingId, removeHoveredListingId } =\n    React.useContext(ListingContext);\n\n  React.useEffect(() => {\n    return () => {\n      removeHoveredListingId(listing.id);\n    };\n  }, []);\n\n  function handleClick() {\n    setSelectedListing(listing);\n  }\n\n  function handleListingHover() {\n    addHoveredListingId(listing.id);\n  }\n\n  function handleListingUnhover() {\n    removeHoveredListingId(listing.id);\n  }\n\n  return (\n    <ListGroupItem\n      className={styles.listItem}\n      onClick={handleClick}\n      onMouseEnter={handleListingHover}\n      onMouseLeave={handleListingUnhover}\n    >\n      {listing.name}\n    </ListGroupItem>\n  );\n}\n\ninterface IListingsListItemProps {\n  listing: Listing;\n}\n","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/NewListingDialog.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingViewer.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/ListingMarker.tsx",["189"],"import React from \"react\";\nimport classNames from \"classnames\";\nimport houseImg from \"../../../../Images/house.png\";\nimport { Listing } from \"../../../../Models/Session\";\nimport styles from \"./ListingMarker.module.scss\";\n\nexport default function ListingMarker({\n  lat,\n  lng,\n  hovered,\n}: ListingMarkerProps) {\n  return (\n    <img\n      className={classNames(styles.container, hovered && styles.hovered)}\n      src={houseImg}\n    />\n  );\n}\n\nexport interface ListingMarkerProps {\n  listing: Listing;\n  hovered?: boolean;\n  lat: number;\n  lng: number;\n}\n","/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/AddressSearchBar.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/Listings/EditListingDialog.tsx",["190"],"import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport { ListingContext } from \"../../../../Contexts/ListingContext\";\nimport {\n  AutoCompleteSuggestion,\n  SearchType,\n} from \"../../../../API/Google Places\";\nimport AddressSearchBar from \"../../../../Components/AddressSearchBar\";\nimport {\n  Coordinate,\n  geocodeByPlaceId,\n} from \"../../../../API/Google Places/Geocoding\";\nimport { useUpdateSession } from \"../../../../Utils/Hooks\";\nimport SessionData, { Listing } from \"../../../../Models/Session\";\n\nexport default function EditListingDialog({\n  onClose,\n  session,\n  listing,\n}: IProps) {\n  const { setSelectedListing } = React.useContext(ListingContext);\n\n  const updateSessionMutation = useUpdateSession();\n\n  const [formData, setFormData] = React.useState<EditListingFormData>({\n    ...listing,\n  });\n  const [formDataErrors, setFormDataErrors] =\n    React.useState<FormDataErrors>(DEFAULT_DATA_ERRORS);\n\n  async function handleSaveClick(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const errors = validateFormData(formData);\n    setFormDataErrors(errors);\n    if (!hasErrors(errors)) {\n      const updatedListing: Listing = {\n        id: listing.id,\n        name: formData.name!,\n        address: formData.address!,\n        location: formData.location!,\n        price: formData.price!,\n        numberOfBedrooms: formData.numberOfBedrooms!,\n        numberOfBathrooms: formData.numberOfBathrooms!,\n      };\n      const updatedListings = (session.listings ?? []).map((l) => {\n        if (l.id === listing.id) return updatedListing;\n        return l;\n      });\n      await updateSessionMutation.mutateAsync({\n        ...session,\n        listings: updatedListings,\n      });\n      setSelectedListing(updatedListing);\n      onClose();\n    }\n  }\n\n  async function handleAddressSelect(address: AutoCompleteSuggestion) {\n    try {\n      const addressGeocodingInfo = await geocodeByPlaceId(address.id);\n      // there is guaranteed to be one result\n      const addressInfo = addressGeocodingInfo[0];\n      console.log(addressInfo);\n      setFormData((prev) => ({\n        ...prev,\n        address: addressInfo.name,\n        location: addressInfo.location,\n      }));\n    } catch (err) {\n      // TODO: show toast and maybe clear the search?\n      console.error(\"Failed to load location information.\");\n    }\n  }\n\n  return (\n    <Modal show={true} onHide={onClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Edit Listing</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"listingForm.Name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"listing name\"\n              value={formData.name ?? \"\"}\n              onChange={(event: any) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  name: event.target.value,\n                }))\n              }\n              isInvalid={!!formDataErrors.nameError}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.nameError}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"listingForm.Address\">\n            <Form.Label>Address</Form.Label>\n            <AddressSearchBar\n              defaultInputValue={formData.address}\n              onSelect={handleAddressSelect}\n              isInvalid={!!formDataErrors.addressError}\n              searchType={SearchType.Address}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.nameError}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"listingForm.Price\">\n            <Form.Label>Price</Form.Label>\n            <Form.Control\n              type=\"number\"\n              value={formData.price ?? \"\"}\n              onChange={(event: any) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  price: event.target.value,\n                }))\n              }\n              isInvalid={!!formDataErrors.priceError}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.priceError}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"listingForm.bedrooms\">\n              <Form.Label>Bedrooms</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={formData.numberOfBedrooms ?? \"\"}\n                onChange={(event: any) =>\n                  setFormData((prev) => ({\n                    ...prev,\n                    numberOfBedrooms: event.target.value,\n                  }))\n                }\n                isInvalid={!!formDataErrors.numberOfBedroomsError}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formDataErrors.numberOfBedroomsError}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"listingForm.bathrooms\">\n              <Form.Label>Bathrooms</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={formData.numberOfBathrooms ?? \"\"}\n                onChange={(event: any) =>\n                  setFormData((prev) => ({\n                    ...prev,\n                    numberOfBathrooms: event.target.value,\n                  }))\n                }\n                isInvalid={!!formDataErrors.numberOfBathroomsError}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formDataErrors.numberOfBathroomsError}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleSaveClick}>\n          Save\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\ninterface IProps {\n  onClose: () => void;\n  listing: Listing;\n  session: SessionData;\n}\n\ninterface EditListingFormData {\n  name?: string;\n  address?: string;\n  location?: Coordinate;\n  price?: number;\n  numberOfBedrooms?: number;\n  numberOfBathrooms?: number;\n}\n\nconst DEFAULT_FORM_DATA: EditListingFormData = {\n  name: undefined,\n  address: undefined,\n  location: undefined,\n  price: undefined,\n  numberOfBedrooms: undefined,\n  numberOfBathrooms: undefined,\n};\n\ninterface FormDataErrors {\n  nameError?: string;\n  addressError?: string;\n  locationError?: string;\n  priceError?: string;\n  numberOfBedroomsError?: string;\n  numberOfBathroomsError?: string;\n}\n\nconst DEFAULT_DATA_ERRORS: FormDataErrors = {\n  nameError: undefined,\n  addressError: undefined,\n  locationError: undefined,\n  priceError: undefined,\n  numberOfBedroomsError: undefined,\n  numberOfBathroomsError: undefined,\n};\n\nfunction validateFormData(formData: EditListingFormData): FormDataErrors {\n  let nameError,\n    addressError,\n    locationError,\n    priceError,\n    numberOfBedroomsError,\n    numberOfBathroomsError;\n\n  if (!formData.name) {\n    nameError = \"Must provide name for listing\";\n  }\n  if (!formData.address) {\n    addressError = \"Must enter an address\";\n  }\n  if (!formData.location) {\n    locationError = \"Could not find address for location\";\n  }\n\n  if (!formData.price) {\n    priceError = \"Must provide a price for the listing\";\n  }\n\n  if (!formData.numberOfBedrooms) {\n    numberOfBedroomsError = \"Must provide a number of bedrooms\";\n  }\n\n  if (!formData.numberOfBathrooms) {\n    numberOfBathroomsError = \"Must provide a number of bathrooms\";\n  }\n\n  return {\n    nameError,\n    addressError,\n    locationError,\n    priceError,\n    numberOfBedroomsError,\n    numberOfBathroomsError,\n  };\n}\n\nfunction hasErrors(formDataError: FormDataErrors) {\n  let errorFound = false;\n\n  let key: keyof typeof formDataError;\n  for (key in formDataError) {\n    if (!!formDataError[key]) errorFound = true;\n  }\n\n  return errorFound;\n}\n","/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/Header.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Components/HeaderDropdown.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Landing/LandingPage.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Loading/LoadingPage.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/HomePage.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/HomeDashboard.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/ExistingSessionsSection.tsx",["191"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport LoadingSpinner from \"../../../Components/LoadingSpinner\";\nimport Card from \"react-bootstrap/Card\";\nimport SessionData from \"../../../Models/Session\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport EditSessionDialog from \"./EditSessionDialog\";\nimport { useDeleteSession, useSessions } from \"../../../Utils/Hooks\";\n\nexport default function ExistingSessionsSection() {\n  const {\n    isLoading: loadingSessions,\n    isError,\n    data: existingSessions,\n  } = useSessions();\n\n  const [sessionToEdit, setSessionToEdit] =\n    React.useState<SessionData | undefined>(undefined);\n\n  function handleEditClick(session: SessionData) {\n    setSessionToEdit(session);\n  }\n\n  function getContent() {\n    if (loadingSessions) return <LoadingSpinner text=\"Loading sessions...\" />;\n\n    if (existingSessions && existingSessions.length > 0)\n      return (\n        <div>\n          {existingSessions?.map((session) => (\n            <SessionEntry\n              key={session.id}\n              sessionData={session}\n              onEditClick={handleEditClick}\n            />\n          ))}\n        </div>\n      );\n\n    return <div>No existing sessions</div>;\n  }\n\n  return (\n    <>\n      {sessionToEdit && (\n        <EditSessionDialog\n          session={sessionToEdit}\n          onClose={() => setSessionToEdit(undefined)}\n        />\n      )}\n      <Card>\n        <Card.Header>My Sessions</Card.Header>\n        <Card.Body>{getContent()}</Card.Body>\n      </Card>\n    </>\n  );\n}\n\ninterface ISessionEntryProps {\n  sessionData: SessionData;\n  onEditClick: (session: SessionData) => void;\n}\n\nfunction SessionEntry({ sessionData, onEditClick }: ISessionEntryProps) {\n  const deleteSessionMutation = useDeleteSession();\n\n  const [deletingSession, setDeletingSession] = React.useState(false);\n\n  const history = useHistory();\n\n  async function handleDeleteClick() {\n    if (deletingSession) return;\n\n    setDeletingSession(true);\n    await deleteSessionMutation.mutateAsync(sessionData.id!);\n    setDeletingSession(false);\n  }\n\n  function handleEditClick() {\n    onEditClick(sessionData);\n  }\n\n  function handleOpenClick() {\n    history.push(`/Session/${sessionData.id!}`);\n  }\n\n  return (\n    <Card>\n      <Card.Body>\n        <div className=\"d-flex justify-content-between\">\n          <div>{sessionData.name}</div>\n          <div>\n            <Button variant=\"primary\" onClick={handleOpenClick}>\n              Open\n            </Button>{\" \"}\n            <Button variant=\"primary\" onClick={handleEditClick}>\n              Edit\n            </Button>{\" \"}\n            <Button variant=\"danger\" onClick={handleDeleteClick}>\n              {deletingSession ? (\n                <Spinner animation=\"border\" variant=\"primary\" size=\"sm\" />\n              ) : (\n                \"Delete\"\n              )}\n            </Button>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n","/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/NewSessionSection.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/EditSessionDialog.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/Home/Components/NewSessionDialog.tsx",[],"/Users/mattbalnis/Projects/PropertyPro2.0/src/Pages/SessionViewer/Components/SidePanel.tsx",[],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"196","severity":1,"message":"200","line":49,"column":13,"nodeType":"198","messageId":"199","endLine":49,"endColumn":21},{"ruleId":"196","severity":1,"message":"200","line":86,"column":13,"nodeType":"198","messageId":"199","endLine":86,"endColumn":21},{"ruleId":"196","severity":1,"message":"201","line":18,"column":5,"nodeType":"198","messageId":"199","endLine":18,"endColumn":12},{"ruleId":"196","severity":1,"message":"202","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":12},{"ruleId":"196","severity":1,"message":"203","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":14},{"ruleId":"204","severity":1,"message":"205","line":53,"column":6,"nodeType":"206","endLine":53,"endColumn":8,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":13,"column":5,"nodeType":"210","endLine":16,"endColumn":7},{"ruleId":"196","severity":1,"message":"211","line":198,"column":7,"nodeType":"198","messageId":"199","endLine":198,"endColumn":45},{"ruleId":"196","severity":1,"message":"201","line":14,"column":5,"nodeType":"198","messageId":"199","endLine":14,"endColumn":12},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'isError' is assigned a value but never used.","'Card' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'listing.id' and 'removeHoveredListingId'. Either include them or remove the dependency array.","ArrayExpression",["214"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DEFAULT_FORM_DATA' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},"Update the dependencies array to be: [listing.id, removeHoveredListingId]",{"range":"217","text":"218"},[1509,1511],"[listing.id, removeHoveredListingId]"]