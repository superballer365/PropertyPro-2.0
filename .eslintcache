[{"/Users/mattbalnis/Repos/PropertyPro2/src/index.tsx":"1","/Users/mattbalnis/Repos/PropertyPro2/src/reportWebVitals.ts":"2","/Users/mattbalnis/Repos/PropertyPro2/src/Initialize.ts":"3","/Users/mattbalnis/Repos/PropertyPro2/src/App.tsx":"4","/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/AuthorizationContext.tsx":"5","/Users/mattbalnis/Repos/PropertyPro2/src/aws-exports.js":"6","/Users/mattbalnis/Repos/PropertyPro2/src/Components/Header.tsx":"7","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/About/AboutPage.tsx":"8","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Loading/LoadingPage.tsx":"9","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Landing/LandingPage.tsx":"10","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Settings/SettingsPage.tsx":"11","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/HomePage.tsx":"12","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/SessionViewerPage.tsx":"13","/Users/mattbalnis/Repos/PropertyPro2/src/Components/HeaderDropdown.tsx":"14","/Users/mattbalnis/Repos/PropertyPro2/src/Components/LoadingSpinner.tsx":"15","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/SessionViewerDashboard.tsx":"16","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Error/ErrorPage.tsx":"17","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/HomeDashboard.tsx":"18","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/index.ts":"19","/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/ListingContext.tsx":"20","/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/PointOfInterestContext.tsx":"21","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/SidePanel.tsx":"22","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/NewSessionSection.tsx":"23","/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/MapContext.tsx":"24","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Map.tsx":"25","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/ExistingSessionsSection.tsx":"26","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useSession.tsx":"27","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/NewSessionDialog.tsx":"28","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/MapMarker.tsx":"29","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/EditSessionDialog.tsx":"30","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointsOfInterestPanel.tsx":"31","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/DirectionsPanel.tsx":"32","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingsPanel.tsx":"33","/Users/mattbalnis/Repos/PropertyPro2/src/Models/Session.ts":"34","/Users/mattbalnis/Repos/PropertyPro2/src/graphql/mutations.ts":"35","/Users/mattbalnis/Repos/PropertyPro2/src/graphql/queries.ts":"36","/Users/mattbalnis/Repos/PropertyPro2/src/graphql/callGraphQL.ts":"37","/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Places/Geocoding.ts":"38","/Users/mattbalnis/Repos/PropertyPro2/src/Components/AddressSearchBar.tsx":"39","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestMarker.tsx":"40","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingMarker.tsx":"41","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingViewer.tsx":"42","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/NewListingDialog.tsx":"43","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingsList.tsx":"44","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/EditListingDialog.tsx":"45","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/address.tsx":"46","/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Places/index.ts":"47","/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Places/AutoComplete.ts":"48","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/DirectionsForm.tsx":"49","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestViewer.tsx":"50","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointsOfInterestList.tsx":"51","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/NewPointOfInterestDialog.tsx":"52","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/DirectionsResults.tsx":"53","/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Routes/index.ts":"54","/Users/mattbalnis/Repos/PropertyPro2/src/API.ts":"55","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/TravelModeButton.tsx":"56","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/EditPointOfInterestDialog.tsx":"57","/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Routes/Directions.ts":"58","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useOnClickOutside.tsx":"59","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useSelectedListing.tsx":"60","/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/SessionContext.tsx":"61","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useSelectedPointOfInterest.tsx":"62","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingsListItem.tsx":"63","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingFilters.tsx":"64","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Roommates/RoommatesPanel.tsx":"65","/Users/mattbalnis/Repos/PropertyPro2/src/API/AWS Cognito/index.tsx":"66","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Roommates/AddRoommateDialog.tsx":"67","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Roommates/RoommatesList.tsx":"68","/Users/mattbalnis/Repos/PropertyPro2/src/Components/FittedImage.tsx":"69","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingPicturesDialog.tsx":"70","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Crawlers/index.ts":"71","/Users/mattbalnis/Repos/PropertyPro2/src/Components/Tooltip.tsx":"72","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingDropdown.tsx":"73","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestDropdown.tsx":"74","/Users/mattbalnis/Repos/PropertyPro2/src/graphql/subscriptions.ts":"75","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/TravelTime/TravelTimePanel.tsx":"76","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/TravelTime/TravelTimeResult.tsx":"77","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/TravelTime/TravelTimeForm.tsx":"78","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/time.tsx":"79","/Users/mattbalnis/Repos/PropertyPro2/src/Components/Polygon.tsx":"80","/Users/mattbalnis/Repos/PropertyPro2/src/API/Travel Time/index.ts":"81","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingStatusDropdown.tsx":"82","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/utils.tsx":"83","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingStatusBadge.tsx":"84","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/MapLayerControls.tsx":"85","/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/LayoutContext.tsx":"86","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useLayoutElementFocus.tsx":"87"},{"size":1421,"mtime":1678649861942,"results":"88","hashOfConfig":"89"},{"size":425,"mtime":1641740361127,"results":"90","hashOfConfig":"89"},{"size":1459,"mtime":1644784914195,"results":"91","hashOfConfig":"89"},{"size":1326,"mtime":1653858187187,"results":"92","hashOfConfig":"89"},{"size":1829,"mtime":1641740361118,"results":"93","hashOfConfig":"89"},{"size":1832,"mtime":1678148406793,"results":"94","hashOfConfig":"89"},{"size":781,"mtime":1653858187188,"results":"95","hashOfConfig":"89"},{"size":202,"mtime":1641740361120,"results":"96","hashOfConfig":"89"},{"size":655,"mtime":1641740361121,"results":"97","hashOfConfig":"89"},{"size":995,"mtime":1641740361121,"results":"98","hashOfConfig":"89"},{"size":208,"mtime":1641740361125,"results":"99","hashOfConfig":"89"},{"size":269,"mtime":1641740361121,"results":"100","hashOfConfig":"89"},{"size":1432,"mtime":1641752206898,"results":"101","hashOfConfig":"89"},{"size":928,"mtime":1678060374892,"results":"102","hashOfConfig":"89"},{"size":864,"mtime":1641740361118,"results":"103","hashOfConfig":"89"},{"size":6139,"mtime":1678840255174,"results":"104","hashOfConfig":"89"},{"size":287,"mtime":1641740361120,"results":"105","hashOfConfig":"89"},{"size":289,"mtime":1643856656220,"results":"106","hashOfConfig":"89"},{"size":67,"mtime":1641752206898,"results":"107","hashOfConfig":"89"},{"size":4487,"mtime":1678327132871,"results":"108","hashOfConfig":"89"},{"size":1881,"mtime":1642283392535,"results":"109","hashOfConfig":"89"},{"size":3459,"mtime":1678840178903,"results":"110","hashOfConfig":"89"},{"size":864,"mtime":1641740361121,"results":"111","hashOfConfig":"89"},{"size":2241,"mtime":1645487161602,"results":"112","hashOfConfig":"89"},{"size":4464,"mtime":1654221111858,"results":"113","hashOfConfig":"89"},{"size":4274,"mtime":1678756677360,"results":"114","hashOfConfig":"89"},{"size":2503,"mtime":1641740361125,"results":"115","hashOfConfig":"89"},{"size":4988,"mtime":1678048485474,"results":"116","hashOfConfig":"89"},{"size":977,"mtime":1654221111858,"results":"117","hashOfConfig":"89"},{"size":3023,"mtime":1644370203334,"results":"118","hashOfConfig":"89"},{"size":1274,"mtime":1642283539455,"results":"119","hashOfConfig":"89"},{"size":2145,"mtime":1644370097777,"results":"120","hashOfConfig":"89"},{"size":1000,"mtime":1642283175937,"results":"121","hashOfConfig":"89"},{"size":2669,"mtime":1678327132872,"results":"122","hashOfConfig":"89"},{"size":2731,"mtime":1678327132875,"results":"123","hashOfConfig":"89"},{"size":2278,"mtime":1678327132875,"results":"124","hashOfConfig":"89"},{"size":980,"mtime":1644370097794,"results":"125","hashOfConfig":"89"},{"size":1949,"mtime":1641740361117,"results":"126","hashOfConfig":"89"},{"size":1568,"mtime":1678060366390,"results":"127","hashOfConfig":"89"},{"size":5745,"mtime":1678651736237,"results":"128","hashOfConfig":"89"},{"size":5422,"mtime":1678651739652,"results":"129","hashOfConfig":"89"},{"size":5670,"mtime":1678750349417,"results":"130","hashOfConfig":"89"},{"size":12892,"mtime":1678327132874,"results":"131","hashOfConfig":"89"},{"size":3412,"mtime":1678750379327,"results":"132","hashOfConfig":"89"},{"size":10720,"mtime":1678327132872,"results":"133","hashOfConfig":"89"},{"size":191,"mtime":1644784852601,"results":"134","hashOfConfig":"89"},{"size":490,"mtime":1678048485473,"results":"135","hashOfConfig":"89"},{"size":2247,"mtime":1678048485473,"results":"136","hashOfConfig":"89"},{"size":4167,"mtime":1677811561004,"results":"137","hashOfConfig":"89"},{"size":3555,"mtime":1678749731933,"results":"138","hashOfConfig":"89"},{"size":3118,"mtime":1653858187194,"results":"139","hashOfConfig":"89"},{"size":6841,"mtime":1677811561005,"results":"140","hashOfConfig":"89"},{"size":1668,"mtime":1642037272560,"results":"141","hashOfConfig":"89"},{"size":30,"mtime":1641740361117,"results":"142","hashOfConfig":"89"},{"size":18774,"mtime":1678327132870,"results":"143","hashOfConfig":"89"},{"size":1102,"mtime":1641740361122,"results":"144","hashOfConfig":"89"},{"size":7090,"mtime":1677811561005,"results":"145","hashOfConfig":"89"},{"size":439,"mtime":1641740361117,"results":"146","hashOfConfig":"89"},{"size":1062,"mtime":1641752206898,"results":"147","hashOfConfig":"89"},{"size":1155,"mtime":1678651139201,"results":"148","hashOfConfig":"89"},{"size":553,"mtime":1642885140062,"results":"149","hashOfConfig":"89"},{"size":1274,"mtime":1678651492170,"results":"150","hashOfConfig":"89"},{"size":2684,"mtime":1678327132874,"results":"151","hashOfConfig":"89"},{"size":4081,"mtime":1654221111852,"results":"152","hashOfConfig":"89"},{"size":1180,"mtime":1644464303185,"results":"153","hashOfConfig":"89"},{"size":2033,"mtime":1642546891420,"results":"154","hashOfConfig":"89"},{"size":1677,"mtime":1644370097787,"results":"155","hashOfConfig":"89"},{"size":1768,"mtime":1653858187194,"results":"156","hashOfConfig":"89"},{"size":450,"mtime":1643491711167,"results":"157","hashOfConfig":"89"},{"size":595,"mtime":1643491711171,"results":"158","hashOfConfig":"89"},{"size":431,"mtime":1644370097792,"results":"159","hashOfConfig":"89"},{"size":1121,"mtime":1678756448012,"results":"160","hashOfConfig":"89"},{"size":3838,"mtime":1678328267948,"results":"161","hashOfConfig":"89"},{"size":4000,"mtime":1678651700663,"results":"162","hashOfConfig":"89"},{"size":3303,"mtime":1678327132876,"results":"163","hashOfConfig":"89"},{"size":1657,"mtime":1653858187196,"results":"164","hashOfConfig":"89"},{"size":3093,"mtime":1646596526793,"results":"165","hashOfConfig":"89"},{"size":3749,"mtime":1677811561006,"results":"166","hashOfConfig":"89"},{"size":370,"mtime":1645487499760,"results":"167","hashOfConfig":"89"},{"size":926,"mtime":1645487499758,"results":"168","hashOfConfig":"89"},{"size":2057,"mtime":1645487499757,"results":"169","hashOfConfig":"89"},{"size":1308,"mtime":1655761969392,"results":"170","hashOfConfig":"89"},{"size":608,"mtime":1654221111859,"results":"171","hashOfConfig":"89"},{"size":1252,"mtime":1654221111854,"results":"172","hashOfConfig":"89"},{"size":2977,"mtime":1678629886147,"results":"173","hashOfConfig":"89"},{"size":759,"mtime":1678839649841,"results":"174","hashOfConfig":"89"},{"size":554,"mtime":1678668531940,"results":"175","hashOfConfig":"89"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r8oxen",{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"180"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"180"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"180"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"180"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"180"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"180"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"180"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"180"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"180"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"180"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"180"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"180"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"180"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"316","usedDeprecatedRules":"180"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"180"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"180"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"180"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"180"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"180"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"180"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mattbalnis/Repos/PropertyPro2/src/index.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/reportWebVitals.ts",[],["371","372"],"/Users/mattbalnis/Repos/PropertyPro2/src/Initialize.ts",["373","374"],"import Amplify, { Auth } from \"aws-amplify\";\nimport config from \"./aws-exports\";\n\nexport default function Initialize() {\n  const isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === \"[::1]\" ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n\n  // Assuming you have two redirect URIs, and the first is for localhost and second is for production\n  const [\n    localRedirectSignIn,\n    autoGeneratedRedirectSignIn,\n    productionRedirectSignIn,\n  ] = config.oauth.redirectSignIn.split(\",\");\n\n  const [\n    localRedirectSignOut,\n    autoGeneratedRedirectSignOut,\n    productionRedirectSignOut,\n  ] = config.oauth.redirectSignOut.split(\",\");\n\n  const updatedAwsConfig = {\n    ...config,\n    oauth: {\n      ...config.oauth,\n      redirectSignIn: isLocalhost\n        ? localRedirectSignIn\n        : productionRedirectSignIn,\n      redirectSignOut: isLocalhost\n        ? localRedirectSignOut\n        : productionRedirectSignOut,\n    },\n  };\n\n  Amplify.configure({\n    ...updatedAwsConfig,\n    graphql_headers: async () => {\n      try {\n        const token = (await Auth.currentSession()).getIdToken().getJwtToken();\n        return { Authorization: token };\n      } catch (e) {\n        console.error(e);\n        return {};\n      }\n    },\n  });\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/App.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/AuthorizationContext.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/aws-exports.js",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Components/Header.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/About/AboutPage.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Loading/LoadingPage.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Landing/LandingPage.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Settings/SettingsPage.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/HomePage.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/SessionViewerPage.tsx",["375"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoadingSpinner from \"../../Components/LoadingSpinner\";\nimport SessionViewerDashboard from \"./Components/SessionViewerDashboard\";\nimport SessionData from \"../../Models/Session\";\nimport { useSession } from \"../../Utils/Hooks\";\nimport ErrorPage from \"../Error/ErrorPage\";\n\nexport default function SessionViewerPage() {\n  let { sessionId } = useParams<string>() as { sessionId: string };\n\n  const {\n    isLoading: loadingSessions,\n    isError,\n    data: matchingSession,\n  } = useSession(sessionId);\n\n  const [sessionLoadError, setSessionLoadError] = React.useState(false);\n  const [sessionFromRoute, setSessionFromRoute] = React.useState<SessionData>();\n\n  // set the selected session based on the ID from the route\n  React.useEffect(() => {\n    if (loadingSessions) return;\n    if (!sessionId) {\n      setSessionLoadError(true);\n      return;\n    }\n\n    if (!matchingSession) {\n      setSessionLoadError(true);\n    } else {\n      setSessionFromRoute(matchingSession);\n      setSessionLoadError(false);\n    }\n  }, [sessionId, loadingSessions, matchingSession]);\n\n  if (sessionLoadError)\n    return (\n      <ErrorPage text=\"Could not find a session matching the specified id.\" />\n    );\n\n  if (loadingSessions || !sessionFromRoute)\n    return <LoadingSpinner text=\"loading session...\" />;\n\n  return <SessionViewerDashboard session={sessionFromRoute} />;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Components/HeaderDropdown.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Components/LoadingSpinner.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/SessionViewerDashboard.tsx",["376","377"],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Error/ErrorPage.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/HomeDashboard.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/index.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/ListingContext.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/PointOfInterestContext.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/SidePanel.tsx",["378"],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/NewSessionSection.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/MapContext.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Map.tsx",["379","380","381"],"import React from \"react\";\nimport GoogleMapReact, { fitBounds } from \"google-map-react\";\nimport { Coordinate } from \"../../../API/Google Places/Geocoding\";\nimport { ListingContext } from \"../../../Contexts/ListingContext\";\nimport { PointOfInterestContext } from \"../../../Contexts/PointOfInterestContext\";\nimport MapMarker, { MapMarkerProps, MarkerType } from \"./MapMarker\";\nimport { MapContext } from \"../../../Contexts/MapContext\";\nimport { SessionContext } from \"../../../Contexts/SessionContext\";\n\nexport default function Map() {\n  const { session } = React.useContext(SessionContext);\n  const {\n    selectedListing,\n    filteredListings,\n    hoveredListingIds,\n    setSelectedListing,\n    addHoveredListingId,\n    removeHoveredListingId,\n  } = React.useContext(ListingContext);\n  const {\n    selectedPointOfInterest,\n    hoveredPointOfInterestIds,\n    setSelectedPointOfInterest,\n    addHoveredPointOfInterestId,\n    removeHoveredPointOfInterestId,\n  } = React.useContext(PointOfInterestContext);\n  const { center, zoom, setMap, setCenter, setZoom } =\n    React.useContext(MapContext);\n\n  // default zoom and center, to be used for resetting\n  const defaultZoomRef = React.useRef<number>();\n  const defaultCenterRef = React.useRef<Coordinate>();\n  const mapContainerRef = React.useRef<HTMLDivElement>(null);\n\n  // get zoom level and center for map bounds on first load\n  const loaded = React.useRef<boolean>(false);\n  React.useEffect(() => {\n    if (!mapContainerRef.current) return;\n    if (loaded.current) return;\n\n    const mapContainerRect = mapContainerRef.current.getBoundingClientRect();\n    const { zoom, center } = fitBounds(\n      {\n        sw: session.searchBounds.bottomLeft,\n        ne: session.searchBounds.topRight,\n      },\n      { width: mapContainerRect?.width, height: mapContainerRect?.height }\n    );\n    setCenter(center);\n    setZoom(zoom);\n    defaultCenterRef.current = center;\n    defaultZoomRef.current = zoom;\n    loaded.current = true;\n  }, [session]);\n\n  // update the zoom and center when the selected listing or point of interest changes\n  React.useEffect(() => {\n    if (selectedListing) {\n      setZoom(17);\n      setCenter(selectedListing.location);\n      return;\n    }\n\n    if (selectedPointOfInterest) {\n      setZoom(17);\n      setCenter(selectedPointOfInterest.location);\n      return;\n    }\n\n    // reset the zoom and center if no listing is selected\n    setZoom(defaultZoomRef.current);\n    setCenter(defaultCenterRef.current);\n  }, [selectedListing, selectedPointOfInterest]);\n\n  return (\n    <div ref={mapContainerRef} style={{ height: \"100%\" }}>\n      {center && zoom && (\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY! }}\n          center={center}\n          zoom={zoom}\n          onGoogleApiLoaded={({ map }) => setMap(map)}\n          onChange={({ center, zoom }) => {\n            setCenter(center);\n            setZoom(zoom);\n          }}\n          yesIWantToUseGoogleMapApiInternals={true}\n          options={{\n            streetViewControl: true,\n            mapTypeControl: true,\n            fullscreenControl: false,\n          }}\n        >\n          {filteredListings.map((listing) => (\n            <MapMarker\n              key={listing.id}\n              type={MarkerType.Listing}\n              data={listing}\n              hovered={hoveredListingIds.includes(listing.id)}\n              lat={listing.location.lat}\n              lng={listing.location.lng}\n              onClick={() => setSelectedListing(listing)}\n              onMouseEnter={() => addHoveredListingId(listing.id)}\n              onMouseLeave={() => removeHoveredListingId(listing.id)}\n            />\n          ))}\n          {session.pointsOfInterest?.map((pointOfInterest) => (\n            <MapMarker\n              key={pointOfInterest.id}\n              type={MarkerType.PointOfInterest}\n              data={pointOfInterest}\n              hovered={hoveredPointOfInterestIds.includes(pointOfInterest.id)}\n              lat={pointOfInterest.location.lat}\n              lng={pointOfInterest.location.lng}\n              onClick={() => setSelectedPointOfInterest(pointOfInterest)}\n              onMouseEnter={() =>\n                addHoveredPointOfInterestId(pointOfInterest.id)\n              }\n              onMouseLeave={() =>\n                removeHoveredPointOfInterestId(pointOfInterest.id)\n              }\n            />\n          ))}\n        </GoogleMapReact>\n      )}\n    </div>\n  );\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/ExistingSessionsSection.tsx",["382"],"/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useSession.tsx",["383","384","385"],"import React from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport {\n  CreateSessionMutation,\n  DeleteSessionMutation,\n  GetSessionQuery,\n  ListSessionsQuery,\n  UpdateSessionMutation,\n} from \"../../API\";\nimport callGraphQL from \"../../graphql/callGraphQL\";\nimport {\n  createSession,\n  deleteSession,\n  updateSession,\n} from \"../../graphql/mutations\";\nimport { getSession, listSessions } from \"../../graphql/queries\";\nimport SessionData, {\n  mapGetSession,\n  mapListSessions,\n  mapUpdateSession,\n  sessionDataToApiSessionInput,\n} from \"../../Models/Session\";\n\nexport function useSessions() {\n  return useQuery<SessionData[]>(\"sessions\", async () => {\n    const result = await callGraphQL<ListSessionsQuery>(listSessions);\n    return mapListSessions(result);\n  });\n}\n\nexport function useSession(sessionId: string) {\n  return useQuery<SessionData | undefined>(\n    [\"sessions\", sessionId],\n    async () => {\n      const result = await callGraphQL<GetSessionQuery>(getSession, {\n        id: sessionId,\n      });\n      return mapGetSession(result);\n    }\n  );\n}\n\nexport function useCreateSession() {\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async (newSession: SessionData) => {\n      const createSessionInput = sessionDataToApiSessionInput(newSession);\n      const response = await callGraphQL<CreateSessionMutation>(createSession, {\n        input: createSessionInput,\n      });\n      // TODO: map the response to the created SessionData object\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(\"sessions\");\n      },\n    }\n  );\n}\n\nexport function useUpdateSession() {\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async (updatedSession: SessionData) => {\n      const sessionUpdateInput = sessionDataToApiSessionInput(updatedSession);\n      const response = await callGraphQL<UpdateSessionMutation>(updateSession, {\n        input: sessionUpdateInput,\n      });\n      return mapUpdateSession(response);\n    },\n    {\n      onSuccess: (data, variables) => {\n        queryClient.invalidateQueries(\"sessions\");\n      },\n    }\n  );\n}\n\nexport function useDeleteSession() {\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    async (sessionId: string) => {\n      const response = await callGraphQL<DeleteSessionMutation>(deleteSession, {\n        input: { id: sessionId },\n      });\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(\"sessions\");\n      },\n    }\n  );\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/NewSessionDialog.tsx",["386"],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/MapMarker.tsx",["387","388"],"import React from \"react\";\nimport { PointOfInterest, Listing } from \"../../../Models/Session\";\nimport ListingMarker from \"./Listings/ListingMarker\";\nimport PointOfInterestMarker from \"./PointsOfInterest/PointOfInterestMarker\";\n\nexport default function MapMarker(props: MapMarkerProps) {\n  const { type, data, ...restProps } = props;\n\n  if (type === MarkerType.Listing) {\n    const listing = data as Listing;\n    return <ListingMarker listing={listing} {...restProps} />;\n  }\n\n  if (type === MarkerType.PointOfInterest) {\n    const pointOfInterest = data as PointOfInterest;\n    return (\n      <PointOfInterestMarker pointOfInterest={pointOfInterest} {...restProps} />\n    );\n  }\n\n  return null;\n}\n\nexport interface MapMarkerProps {\n  data: Listing | PointOfInterest;\n  type: MarkerType;\n  hovered?: boolean;\n  lat: number;\n  lng: number;\n  onClick: () => void;\n  onMouseEnter: () => void;\n  onMouseLeave: () => void;\n}\n\nexport enum MarkerType {\n  Listing,\n  PointOfInterest,\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/Home/Components/EditSessionDialog.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointsOfInterestPanel.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/DirectionsPanel.tsx",["389","390"],"import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { getDirections } from \"../../../../API/Google Routes\";\nimport { MapContext } from \"../../../../Contexts/MapContext\";\nimport DirectionsForm from \"./DirectionsForm\";\nimport DirectionsResults from \"./DirectionsResults\";\nimport styles from \"./DirectionsPanel.module.scss\";\nimport LoadingSpinner from \"../../../../Components/LoadingSpinner\";\n\nexport default function DirectionsPanel() {\n  const { showDirections, clearDirections } = React.useContext(MapContext);\n  const [directions, setDirections] =\n    React.useState<google.maps.DirectionsResult>();\n  const [routeIndex, setRouteIndex] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n\n  // remove directions when component unmounts\n  React.useEffect(() => {\n    return () => clearDirections();\n  }, []);\n\n  // show directions whenever they change\n  React.useEffect(() => {\n    if (!directions) {\n      clearDirections();\n    } else {\n      showDirections(directions, { routeIndex });\n    }\n  }, [directions, routeIndex]);\n\n  const handleSearch = async (\n    origin: string,\n    destination: string,\n    travelMode: google.maps.TravelMode\n  ) => {\n    try {\n      setLoading(true);\n      const directions = await getDirections({\n        origin,\n        destination,\n        travelMode,\n        provideRouteAlternatives: true,\n      });\n      setRouteIndex(0);\n      setDirections(directions);\n    } catch (error) {\n      setDirections(undefined);\n      console.error(\"Failed to load directions\", error);\n      toast.error(\"Failed to load directions\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.form}>\n        <DirectionsForm onSearchClick={handleSearch} />\n      </div>\n      <div className={styles.results}>\n        {loading ? (\n          <LoadingSpinner text=\"calculating routes...\" />\n        ) : (\n          <DirectionsResults\n            directions={directions}\n            onRouteClick={setRouteIndex}\n            activeRouteIndex={routeIndex}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingsPanel.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Models/Session.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/graphql/mutations.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/graphql/queries.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/graphql/callGraphQL.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Places/Geocoding.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Components/AddressSearchBar.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestMarker.tsx",["391"],"import React from \"react\";\nimport classNames from \"classnames\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMapMarkerAlt,\n  faEdit,\n  faRoute,\n  faTrash,\n  faStopwatch,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { PointOfInterest } from \"../../../../Models/Session\";\nimport styles from \"./PointOfInterestMarker.module.scss\";\nimport { useOnClickOutside, useUpdateSession } from \"../../../../Utils/Hooks\";\nimport { useNavigate } from \"react-router-dom\";\nimport Popover from \"react-bootstrap/Popover\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { SessionContext } from \"../../../../Contexts/SessionContext\";\nimport { PointOfInterestContext } from \"../../../../Contexts/PointOfInterestContext\";\nimport {\n  ButtonWithTooltip,\n  ButtonGroupWithTooltip,\n} from \"../../../../Components/Tooltip\";\nimport { useNavigateWithFocus } from \"../../../../Utils/Hooks/useLayoutElementFocus\";\n\nexport default function PointOfInterestMarker({\n  lat,\n  lng,\n  hovered,\n  pointOfInterest,\n  onClick,\n  onMouseEnter,\n  onMouseLeave,\n}: PointOfInterestMarkerProps) {\n  const [showContextMenu, setShowContextMenu] = React.useState(false);\n  return (\n    <>\n      <FontAwesomeIcon\n        className={classNames(styles.container, hovered && styles.hovered)}\n        icon={faMapMarkerAlt}\n        color=\"red\"\n        onContextMenu={() => setShowContextMenu(true)}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onClick={(e) => {\n          e.stopPropagation();\n          onClick();\n        }}\n      />\n      {showContextMenu && (\n        <PointOfInterestMarkerContextMenu\n          pointOfInterest={pointOfInterest}\n          onClose={() => setShowContextMenu(false)}\n        />\n      )}\n    </>\n  );\n}\n\nexport interface PointOfInterestMarkerProps {\n  pointOfInterest: PointOfInterest;\n  hovered?: boolean;\n  lat: number;\n  lng: number;\n  onClick: () => void;\n  onMouseEnter: () => void;\n  onMouseLeave: () => void;\n}\n\nfunction PointOfInterestMarkerContextMenu({\n  pointOfInterest,\n  onClose,\n}: {\n  pointOfInterest: PointOfInterest;\n  onClose: () => void;\n}) {\n  const { session } = React.useContext(SessionContext);\n  const { setSelectedPointOfInterest } = React.useContext(\n    PointOfInterestContext\n  );\n\n  const updateSessionMutation = useUpdateSession();\n  const navigate = useNavigateWithFocus();\n  const popoverRef = React.useRef(null);\n  useOnClickOutside(popoverRef, onClose);\n\n  const handleSetDestinationClick = () => {\n    onClose();\n    navigate(\"./Directions\", \"sidebar\", {\n      state: { destination: pointOfInterest.address },\n    });\n  };\n\n  const handleSetOriginClick = () => {\n    onClose();\n    navigate(\"./Directions\", \"sidebar\", {\n      state: { origin: pointOfInterest.address },\n    });\n  };\n\n  const handleTravelTimeClick = () => {\n    onClose();\n    navigate(\"./TravelTime\", \"sidebar\", {\n      state: { origin: pointOfInterest.address },\n    });\n  };\n\n  const handleEditClick = () => {\n    onClose();\n    setSelectedPointOfInterest(pointOfInterest, { edit: true });\n  };\n\n  const handleDeleteClick = async () => {\n    onClose();\n    await updateSessionMutation.mutateAsync({\n      ...session,\n      pointsOfInterest: session.pointsOfInterest!.filter(\n        (p) => p.id !== pointOfInterest.id\n      ),\n    });\n    setSelectedPointOfInterest(undefined);\n  };\n\n  return (\n    <div className={styles.contextMenu} onClick={(e) => e.stopPropagation()}>\n      <Popover id=\"popover-basic\" ref={popoverRef}>\n        <Popover.Title as=\"h3\">{pointOfInterest.name}</Popover.Title>\n        <Popover.Content className=\"d-flex\">\n          <ButtonGroup>\n            <ButtonWithTooltip\n              className={styles.button}\n              variant=\"light\"\n              elementId={`contextMenuEditPOI-${pointOfInterest.id}`}\n              tooltipText=\"Edit point of interest\"\n              onClick={handleEditClick}\n            >\n              <FontAwesomeIcon icon={faEdit} color=\"blue\" />\n            </ButtonWithTooltip>\n            <DropdownButton\n              className={styles.button}\n              as={ButtonGroupWithTooltip}\n              elementId={`contextMenuPOIDirections-${pointOfInterest.id}`}\n              tooltipText=\"Get directions\"\n              variant=\"light\"\n              title={\n                <span className={styles.button}>\n                  <FontAwesomeIcon icon={faRoute} color=\"blue\" />\n                </span>\n              }\n              id=\"bg-nested-dropdown\"\n            >\n              <Dropdown.Item eventKey=\"1\" onClick={handleSetOriginClick}>\n                Set Origin\n              </Dropdown.Item>\n              <Dropdown.Item eventKey=\"2\" onClick={handleSetDestinationClick}>\n                Set Destination\n              </Dropdown.Item>\n            </DropdownButton>\n            <ButtonWithTooltip\n              className={styles.button}\n              variant=\"light\"\n              elementId={`contextMenuPOITravelTime-${pointOfInterest.id}`}\n              tooltipText=\"Get travel time\"\n              onClick={handleTravelTimeClick}\n            >\n              <FontAwesomeIcon icon={faStopwatch} color=\"blue\" />\n            </ButtonWithTooltip>\n            <ButtonWithTooltip\n              className={styles.button}\n              variant=\"light\"\n              elementId={`contextMenuDeletePOI-${pointOfInterest.id}`}\n              tooltipText=\"Delete point of interest\"\n              onClick={handleDeleteClick}\n            >\n              <FontAwesomeIcon icon={faTrash} color=\"red\" />\n            </ButtonWithTooltip>\n          </ButtonGroup>\n        </Popover.Content>\n      </Popover>\n    </div>\n  );\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingMarker.tsx",["392"],"import React from \"react\";\nimport classNames from \"classnames\";\nimport { useNavigate } from \"react-router-dom\";\nimport Popover from \"react-bootstrap/Popover\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHome,\n  faRoute,\n  faEdit,\n  faTrash,\n  faStopwatch,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Listing } from \"../../../../Models/Session\";\nimport { useOnClickOutside, useUpdateSession } from \"../../../../Utils/Hooks\";\nimport ButtonGroup from \"react-bootstrap/esm/ButtonGroup\";\nimport DropdownButton from \"react-bootstrap/esm/DropdownButton\";\nimport Dropdown from \"react-bootstrap/esm/Dropdown\";\nimport { SessionContext } from \"../../../../Contexts/SessionContext\";\nimport { ListingContext } from \"../../../../Contexts/ListingContext\";\nimport styles from \"./ListingMarker.module.scss\";\nimport {\n  ButtonWithTooltip,\n  ButtonGroupWithTooltip,\n} from \"../../../../Components/Tooltip\";\nimport { useNavigateWithFocus } from \"../../../../Utils/Hooks/useLayoutElementFocus\";\n\nexport default function ListingMarker({\n  hovered,\n  listing,\n  onClick,\n  onMouseEnter,\n  onMouseLeave,\n}: ListingMarkerProps) {\n  const [showContextMenu, setShowContextMenu] = React.useState(false);\n\n  return (\n    <>\n      <FontAwesomeIcon\n        className={classNames(styles.container, hovered && styles.hovered)}\n        color=\"green\"\n        icon={faHome}\n        onContextMenu={() => setShowContextMenu((prev) => !prev)}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onClick={(e) => {\n          e.stopPropagation();\n          onClick();\n        }}\n      />\n      {showContextMenu && (\n        <ListingMarkerContextMenu\n          listing={listing}\n          onClose={() => setShowContextMenu(false)}\n        />\n      )}\n    </>\n  );\n}\n\nexport interface ListingMarkerProps {\n  listing: Listing;\n  hovered?: boolean;\n  lat: number;\n  lng: number;\n  onClick: () => void;\n  onMouseEnter: () => void;\n  onMouseLeave: () => void;\n}\n\nfunction ListingMarkerContextMenu({\n  listing,\n  onClose,\n}: {\n  listing: Listing;\n  onClose: () => void;\n}) {\n  const { session } = React.useContext(SessionContext);\n  const { setSelectedListing } = React.useContext(ListingContext);\n\n  const updateSessionMutation = useUpdateSession();\n  const navigate = useNavigateWithFocus();\n  const popoverRef = React.useRef(null);\n  useOnClickOutside(popoverRef, onClose);\n\n  const handleSetDestinationClick = () => {\n    onClose();\n    navigate(\"./Directions\", \"sidebar\", {\n      state: { destination: listing.address },\n    });\n  };\n\n  const handleSetOriginClick = () => {\n    onClose();\n    navigate(\"./Directions\", \"sidebar\", { state: { origin: listing.address } });\n  };\n\n  const handleTravelTimeClick = () => {\n    onClose();\n    navigate(\"./TravelTime\", \"sidebar\", { state: { origin: listing.address } });\n  };\n\n  const handleEditClick = () => {\n    onClose();\n    setSelectedListing(listing, { edit: true });\n  };\n\n  async function handleDeleteClick() {\n    onClose();\n    await updateSessionMutation.mutateAsync({\n      ...session,\n      listings: session.listings!.filter((l) => l.id !== listing.id),\n    });\n    setSelectedListing(undefined);\n  }\n\n  return (\n    <div className={styles.contextMenu} onClick={(e) => e.stopPropagation()}>\n      <Popover id=\"popover-basic\" ref={popoverRef}>\n        <Popover.Title as=\"h3\">{listing.name}</Popover.Title>\n        <Popover.Content className=\"d-flex\">\n          <ButtonGroup>\n            <ButtonWithTooltip\n              className={styles.button}\n              variant=\"light\"\n              elementId={`contextMenuEditListing-${listing.id}`}\n              tooltipText=\"Edit listing\"\n              onClick={handleEditClick}\n            >\n              <FontAwesomeIcon icon={faEdit} color=\"blue\" />\n            </ButtonWithTooltip>\n            <DropdownButton\n              className={styles.button}\n              as={ButtonGroupWithTooltip}\n              elementId={`contextMenuListingDirection-${listing.id}`}\n              tooltipText=\"Get directions\"\n              variant=\"light\"\n              title={\n                <span className={styles.button}>\n                  <FontAwesomeIcon icon={faRoute} color=\"blue\" />\n                </span>\n              }\n              id=\"bg-nested-dropdown\"\n            >\n              <Dropdown.Item eventKey=\"1\" onClick={handleSetOriginClick}>\n                Set Origin\n              </Dropdown.Item>\n              <Dropdown.Item eventKey=\"2\" onClick={handleSetDestinationClick}>\n                Set Destination\n              </Dropdown.Item>\n            </DropdownButton>\n            <ButtonWithTooltip\n              className={styles.button}\n              variant=\"light\"\n              elementId={`contextMenuListingTravelTime-${listing.id}`}\n              tooltipText=\"Get travel time\"\n              onClick={handleTravelTimeClick}\n            >\n              <FontAwesomeIcon icon={faStopwatch} color=\"blue\" />\n            </ButtonWithTooltip>\n            <ButtonWithTooltip\n              className={styles.button}\n              variant=\"light\"\n              elementId={`contextMenuDeleteListing-${listing.id}`}\n              tooltipText=\"Delete listing\"\n              onClick={handleDeleteClick}\n            >\n              <FontAwesomeIcon icon={faTrash} color=\"red\" />\n            </ButtonWithTooltip>\n          </ButtonGroup>\n        </Popover.Content>\n      </Popover>\n    </div>\n  );\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingViewer.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/NewListingDialog.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingsList.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/EditListingDialog.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Utils/address.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Places/index.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Places/AutoComplete.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/DirectionsForm.tsx",["393","394"],"import React from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport {\n  faMapMarkerAlt,\n  faExchangeAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { SearchType } from \"../../../../API/Google Places\";\nimport AddressSearchBar from \"../../../../Components/AddressSearchBar\";\nimport TravelModeButton, { getIcon } from \"./TravelModeButton\";\nimport { IconWithTooltip } from \"../../../../Components/Tooltip\";\nimport styles from \"./DirectionsForm.module.scss\";\n\n// copying for shorthand\ntype TravelMode = google.maps.TravelMode;\nconst TravelMode = { ...google.maps.TravelMode };\n\nexport default function DirectionsForm({ onSearchClick }: IProps) {\n  const [origin, setOrigin] = React.useState<string>();\n  const [destination, setDestination] = React.useState<string>();\n  const [travelMode, setTravelMode] = React.useState<TravelMode>(\n    TravelMode.DRIVING\n  );\n\n  let navigationState = useLocation().state as\n    | {\n        origin?: string;\n        destination?: string;\n      }\n    | undefined;\n\n  // update origin and destination of they're passed via navigation\n  React.useEffect(() => {\n    if (!navigationState) return;\n\n    navigationState.origin && setOrigin(navigationState.origin);\n    navigationState.destination && setDestination(navigationState.destination);\n  }, [navigationState]);\n\n  const handleSearch = () => {\n    if (!origin || !destination) return;\n\n    onSearchClick(origin, destination, travelMode);\n  };\n\n  const handleSwapLocationsClick = () => {\n    const oldOrigin = origin;\n    const oldDestination = destination;\n    setDestination(oldOrigin);\n    setOrigin(oldDestination);\n  };\n\n  return (\n    <Form>\n      <div className=\"d-flex align-items-center\">\n        <div className=\"flex-grow-1\">\n          <Form.Group\n            controlId=\"directionsForm.Origin\"\n            className=\"d-flex w-100 align-items-center\"\n          >\n            <IconWithTooltip\n              className=\"mr-2\"\n              icon={faMapMarkerAlt}\n              color=\"red\"\n              elementId=\"origin\"\n              tooltipText=\"Origin\"\n            />\n            <AddressSearchBar\n              placeholder=\"Origin of trip\"\n              isInvalid={false}\n              searchType={SearchType.Address}\n              selected={origin}\n              onSelect={(address) => setOrigin(address ? address : undefined)}\n            />\n          </Form.Group>\n          <Form.Group\n            controlId=\"directionsForm.Destination\"\n            className=\"d-flex w-100 align-items-center\"\n          >\n            <IconWithTooltip\n              className=\"mr-2\"\n              icon={faMapMarkerAlt}\n              color=\"red\"\n              elementId=\"destination\"\n              tooltipText=\"Destination\"\n            />\n            <AddressSearchBar\n              placeholder=\"Destination of trip\"\n              isInvalid={false}\n              searchType={SearchType.Address}\n              selected={destination}\n              onSelect={(address) =>\n                setDestination(address ? address : undefined)\n              }\n            />\n          </Form.Group>\n        </div>\n        <FontAwesomeIcon\n          className={styles.switchButton}\n          icon={faExchangeAlt}\n          onClick={handleSwapLocationsClick}\n        />\n      </div>\n      <div className=\"d-flex w-100 align-items-center\">\n        <div className=\"d-flex align-items-center flex-grow-1\">\n          {[\n            TravelMode.DRIVING,\n            TravelMode.TRANSIT,\n            TravelMode.WALKING,\n            TravelMode.BICYCLING,\n          ].map((mode) => (\n            <TravelModeButton\n              key={mode}\n              icon={getIcon(mode)}\n              onClick={() => setTravelMode(mode)}\n              active={travelMode === mode}\n            />\n          ))}\n        </div>\n        <Button onClick={handleSearch}>Search</Button>\n      </div>\n    </Form>\n  );\n}\n\ninterface IProps {\n  onSearchClick: (\n    origin: string,\n    destination: string,\n    mode: google.maps.TravelMode\n  ) => void;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestViewer.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointsOfInterestList.tsx",["395"],"import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport { PointOfInterest } from \"../../../../Models/Session\";\nimport { PointOfInterestContext } from \"../../../../Contexts/PointOfInterestContext\";\nimport { SessionContext } from \"../../../../Contexts/SessionContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { ButtonWithTooltip } from \"../../../../Components/Tooltip\";\nimport PointOfInterestDropdown from \"./PointOfInterestDropdown\";\nimport styles from \"./PointsOfInterestList.module.scss\";\n\nexport default function PointsOfInterestList({\n  onCreateNewPointOfInterestClick,\n}: IPointsOfInterestListProps) {\n  const { session } = React.useContext(SessionContext);\n\n  function getContent() {\n    if (!session.pointsOfInterest || session.pointsOfInterest.length < 1)\n      return <Card.Body>No points of interest</Card.Body>;\n\n    return (\n      <ListGroup className={styles.list}>\n        {session.pointsOfInterest.map((pointOfInterest) => (\n          <PointsOfInterestListItem\n            key={pointOfInterest.id}\n            pointOfInterest={pointOfInterest}\n          />\n        ))}\n      </ListGroup>\n    );\n  }\n\n  return (\n    <Card className={styles.card}>\n      <Card.Header className={styles.header}>\n        <span className={styles.title}>Points of Interest</span>\n        <ButtonWithTooltip\n          size=\"sm\"\n          tooltipText=\"Create new point of interest\"\n          elementId=\"createPointOfInterest\"\n          onClick={onCreateNewPointOfInterestClick}\n        >\n          <FontAwesomeIcon icon={faPlus} />\n        </ButtonWithTooltip>\n      </Card.Header>\n      {getContent()}\n    </Card>\n  );\n}\n\ninterface IPointsOfInterestListProps {\n  onCreateNewPointOfInterestClick: () => void;\n}\n\nfunction PointsOfInterestListItem({\n  pointOfInterest,\n}: IPointsOfInterestListItemProps) {\n  const {\n    setSelectedPointOfInterest,\n    addHoveredPointOfInterestId,\n    removeHoveredPointOfInterestId,\n  } = React.useContext(PointOfInterestContext);\n\n  React.useEffect(() => {\n    return () => {\n      removeHoveredPointOfInterestId(pointOfInterest.id);\n    };\n  }, []);\n\n  function handleClick() {\n    setSelectedPointOfInterest(pointOfInterest);\n  }\n\n  function handlePointOfInterestHover() {\n    addHoveredPointOfInterestId(pointOfInterest.id);\n  }\n\n  function handlePointOfInterestUnhover() {\n    removeHoveredPointOfInterestId(pointOfInterest.id);\n  }\n\n  return (\n    <ListGroupItem\n      className={styles.listItem}\n      onClick={handleClick}\n      onMouseEnter={handlePointOfInterestHover}\n      onMouseLeave={handlePointOfInterestUnhover}\n    >\n      <div className=\"d-flex justify-content-between\">\n        {pointOfInterest.name}\n        <div className={styles.moreButton}>\n          <PointOfInterestDropdown pointOfInterest={pointOfInterest} />\n        </div>\n      </div>\n    </ListGroupItem>\n  );\n}\n\ninterface IPointsOfInterestListItemProps {\n  pointOfInterest: PointOfInterest;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/NewPointOfInterestDialog.tsx",["396"],"import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { SearchType } from \"../../../../API/Google Places\";\nimport AddressSearchBar from \"../../../../Components/AddressSearchBar\";\nimport {\n  Coordinate,\n  geocodeByAddress,\n} from \"../../../../API/Google Places/Geocoding\";\nimport { uuid } from \"uuidv4\";\nimport { useUpdateSession } from \"../../../../Utils/Hooks\";\nimport SessionData, { PointOfInterest } from \"../../../../Models/Session\";\nimport { PointOfInterestType } from \"../../../../API\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { SessionContext } from \"../../../../Contexts/SessionContext\";\n\nexport default function NewPointOfInterestDialog({ onClose }: IProps) {\n  const { session } = React.useContext(SessionContext);\n  const updateSessionMutation = useUpdateSession();\n\n  const [formData, setFormData] =\n    React.useState<CreatePointOfInterestFormData>(DEFAULT_FORM_DATA);\n  const [formDataErrors, setFormDataErrors] =\n    React.useState<FormDataErrors>(DEFAULT_DATA_ERRORS);\n\n  async function handleCreateClick(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const errors = validateFormData(formData);\n    setFormDataErrors(errors);\n    if (hasErrors(errors)) return;\n\n    const newPointOfInterest: PointOfInterest = {\n      id: uuid(),\n      name: formData.name!,\n      type: formData.type!,\n      address: formData.address!,\n      location: formData.location!,\n    };\n\n    try {\n      await updateSessionMutation.mutateAsync({\n        ...session,\n        pointsOfInterest: (session.pointsOfInterest ?? []).concat(\n          newPointOfInterest\n        ),\n      });\n      onClose();\n    } catch (e) {\n      console.error(\"Failed to create point of interest\", e);\n      toast.error(\"Failed to create point of interest\");\n    }\n  }\n\n  async function handleAddressSelect(address: string | undefined) {\n    if (!address) {\n      setFormData((prev) => ({\n        ...prev,\n        address: undefined,\n        location: undefined,\n      }));\n      return;\n    }\n\n    try {\n      setFormData((prev) => ({\n        ...prev,\n        address,\n      }));\n      const addressGeocodingInfo = await geocodeByAddress(address);\n      // there is guaranteed to be one result\n      const addressInfo = addressGeocodingInfo[0];\n      setFormData((prev) => ({\n        ...prev,\n        location: addressInfo.location,\n      }));\n    } catch (err) {\n      console.error(\"Failed to load location information\", err);\n      toast.error(\"Failed to load location information\");\n      setFormData((prev) => ({\n        ...prev,\n        address: undefined,\n        location: undefined,\n      }));\n    }\n  }\n\n  return (\n    <Modal show={true} onHide={onClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>New Point of Interest</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"pointOfInterestForm.Name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"point of interest name\"\n              value={formData.name ?? \"\"}\n              onChange={(event: any) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  name: event.target.value,\n                }))\n              }\n              isInvalid={!!formDataErrors.nameError}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.nameError}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"pointOfInterestForm.Address\">\n            <Form.Label>Address</Form.Label>\n            <AddressSearchBar\n              defaultInputValue={formData.address}\n              onSelect={handleAddressSelect}\n              isInvalid={!!formDataErrors.addressError}\n              searchType={SearchType.Address}\n              selected={formData.address}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.nameError}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"pointOfInterestForm.Type\">\n            <Form.Label>Type</Form.Label>\n            <Typeahead\n              selected={\n                formData.type\n                  ? [\n                      formData.type === PointOfInterestType.WORK\n                        ? \"Work\"\n                        : \"Other\",\n                    ]\n                  : undefined\n              }\n              options={[\"Work\", \"Other\"]}\n              onChange={(selected) => {\n                const type = selected.length > 0 ? selected[0] : undefined;\n                setFormData((prev) => ({\n                  ...prev,\n                  type:\n                    type === \"Work\"\n                      ? PointOfInterestType.WORK\n                      : PointOfInterestType.OTHER,\n                }));\n              }}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.typeError}\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleCreateClick}>\n          Create\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\ninterface IProps {\n  onClose: () => void;\n}\n\ninterface CreatePointOfInterestFormData {\n  name?: string;\n  type?: PointOfInterestType;\n  address?: string;\n  location?: Coordinate;\n}\n\nconst DEFAULT_FORM_DATA: CreatePointOfInterestFormData = {\n  name: undefined,\n  type: undefined,\n  address: undefined,\n  location: undefined,\n};\n\ninterface FormDataErrors {\n  nameError?: string;\n  typeError?: string;\n  addressError?: string;\n  locationError?: string;\n}\n\nconst DEFAULT_DATA_ERRORS: FormDataErrors = {\n  nameError: undefined,\n  typeError: undefined,\n  addressError: undefined,\n  locationError: undefined,\n};\n\nfunction validateFormData(\n  formData: CreatePointOfInterestFormData\n): FormDataErrors {\n  let nameError, typeError, addressError, locationError;\n\n  if (!formData.name) {\n    nameError = \"Must provide name for point of interest\";\n  }\n  if (!formData.type) {\n    nameError = \"Must provide type for point of interest\";\n  }\n  if (!formData.address) {\n    addressError = \"Must enter an address\";\n  }\n  if (!formData.location) {\n    locationError = \"Could not find address for location\";\n  }\n\n  return {\n    nameError,\n    typeError,\n    addressError,\n    locationError,\n  };\n}\n\nfunction hasErrors(formDataError: FormDataErrors) {\n  let errorFound = false;\n\n  let key: keyof typeof formDataError;\n  for (key in formDataError) {\n    if (!!formDataError[key]) errorFound = true;\n  }\n\n  return errorFound;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/DirectionsResults.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Routes/index.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/API.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Directions/TravelModeButton.tsx",["397"],"import React from \"react\";\nimport classNames from \"classnames\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faWalking,\n  faCar,\n  faSubway,\n  faBiking,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"./TravelModeButton.module.scss\";\n\n// copying for shorthand\ntype TravelMode = google.maps.TravelMode;\nconst TravelMode = { ...google.maps.TravelMode };\n\nexport default function TravelModeButton({\n  icon,\n  active,\n  onClick,\n}: TravelModeButtonProps) {\n  return (\n    <div\n      className={classNames(styles.travelModeButton, active && styles.active)}\n      onClick={onClick}\n    >\n      <FontAwesomeIcon icon={icon} />\n    </div>\n  );\n}\n\ninterface TravelModeButtonProps {\n  icon: IconProp;\n  active?: boolean;\n  onClick: () => void;\n}\n\nexport function getIcon(travelMode: TravelMode): IconProp {\n  if (travelMode === TravelMode.BICYCLING) return faBiking;\n  if (travelMode === TravelMode.TRANSIT) return faSubway;\n  if (travelMode === TravelMode.WALKING) return faWalking;\n  return faCar;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/EditPointOfInterestDialog.tsx",["398","399"],"import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport {\n  AutoCompleteSuggestion,\n  SearchType,\n} from \"../../../../API/Google Places\";\nimport AddressSearchBar from \"../../../../Components/AddressSearchBar\";\nimport {\n  Coordinate,\n  geocodeByAddress,\n} from \"../../../../API/Google Places/Geocoding\";\nimport { useUpdateSession } from \"../../../../Utils/Hooks\";\nimport SessionData, { PointOfInterest } from \"../../../../Models/Session\";\nimport { PointOfInterestType } from \"../../../../API\";\nimport { PointOfInterestContext } from \"../../../../Contexts/PointOfInterestContext\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nexport default function EditPointOfInterestDialog({\n  onClose,\n  session,\n  pointOfInterest,\n}: IProps) {\n  const { setSelectedPointOfInterest } = React.useContext(\n    PointOfInterestContext\n  );\n\n  const updateSessionMutation = useUpdateSession();\n\n  const [formData, setFormData] = React.useState<EditPointOfInterestFormData>({\n    ...pointOfInterest,\n  });\n  const [formDataErrors, setFormDataErrors] =\n    React.useState<FormDataErrors>(DEFAULT_DATA_ERRORS);\n\n  async function handleSaveClick(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const errors = validateFormData(formData);\n    setFormDataErrors(errors);\n    if (hasErrors(errors)) return;\n\n    const updatedPointOfInterest: PointOfInterest = {\n      id: pointOfInterest.id,\n      name: formData.name!,\n      type: formData.type!,\n      address: formData.address!,\n      location: formData.location!,\n    };\n    const updatedPointsOfInterest = (session.pointsOfInterest ?? []).map(\n      (p) => {\n        if (p.id === pointOfInterest.id) return updatedPointOfInterest;\n        return p;\n      }\n    );\n\n    try {\n      await updateSessionMutation.mutateAsync({\n        ...session,\n        pointsOfInterest: updatedPointsOfInterest,\n      });\n      setSelectedPointOfInterest(updatedPointOfInterest);\n      onClose();\n    } catch (e) {\n      console.error(\"Failed to update point of interest\", e);\n      toast.error(\"Failed to update point of interest\");\n    }\n  }\n\n  async function handleAddressSelect(address: string | undefined) {\n    if (!address) {\n      setFormData((prev) => ({\n        ...prev,\n        address: undefined,\n        location: undefined,\n      }));\n      return;\n    }\n\n    try {\n      setFormData((prev) => ({\n        ...prev,\n        address,\n      }));\n      const addressGeocodingInfo = await geocodeByAddress(address);\n      // there is guaranteed to be one result\n      const addressInfo = addressGeocodingInfo[0];\n      setFormData((prev) => ({\n        ...prev,\n        location: addressInfo.location,\n      }));\n    } catch (err) {\n      // TODO: show toast and maybe clear the search?\n      console.error(\"Failed to load location information\", err);\n      toast.error(\"Failed to load location information\");\n      setFormData((prev) => ({\n        ...prev,\n        address: undefined,\n        location: undefined,\n      }));\n    }\n  }\n\n  return (\n    <Modal show={true} onHide={onClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Edit Point of Interest</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"pointOfInterestForm.Name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"point of interest name\"\n              value={formData.name ?? \"\"}\n              onChange={(event: any) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  name: event.target.value,\n                }))\n              }\n              isInvalid={!!formDataErrors.nameError}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.nameError}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"pointOfInterestForm.Address\">\n            <Form.Label>Address</Form.Label>\n            <AddressSearchBar\n              defaultInputValue={formData.address}\n              onSelect={handleAddressSelect}\n              isInvalid={!!formDataErrors.addressError}\n              searchType={SearchType.Address}\n              selected={formData.address}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.nameError}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"pointOfInterestForm.Type\">\n            <Form.Label>Type</Form.Label>\n            <Typeahead\n              selected={[\n                formData.type === PointOfInterestType.WORK ? \"Work\" : \"Other\",\n              ]}\n              options={[\"Work\", \"Other\"]}\n              onChange={(selected) => {\n                const type = selected.length > 0 ? selected[0] : undefined;\n                setFormData((prev) => ({\n                  ...prev,\n                  type:\n                    type === \"Work\"\n                      ? PointOfInterestType.WORK\n                      : PointOfInterestType.OTHER,\n                }));\n              }}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formDataErrors.typeError}\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleSaveClick}>\n          Save\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\ninterface IProps {\n  onClose: () => void;\n  pointOfInterest: PointOfInterest;\n  session: SessionData;\n}\n\ninterface EditPointOfInterestFormData {\n  name?: string;\n  type?: PointOfInterestType;\n  address?: string;\n  location?: Coordinate;\n}\n\nconst DEFAULT_FORM_DATA: EditPointOfInterestFormData = {\n  name: undefined,\n  type: undefined,\n  address: undefined,\n  location: undefined,\n};\n\ninterface FormDataErrors {\n  nameError?: string;\n  typeError?: string;\n  addressError?: string;\n  locationError?: string;\n}\n\nconst DEFAULT_DATA_ERRORS: FormDataErrors = {\n  nameError: undefined,\n  typeError: undefined,\n  addressError: undefined,\n  locationError: undefined,\n};\n\nfunction validateFormData(\n  formData: EditPointOfInterestFormData\n): FormDataErrors {\n  let nameError, typeError, addressError, locationError;\n\n  if (!formData.name) {\n    nameError = \"Must provide name for point of interest\";\n  }\n  if (!formData.type) {\n    nameError = \"Must provide type for point of interest\";\n  }\n  if (!formData.address) {\n    addressError = \"Must enter an address\";\n  }\n  if (!formData.location) {\n    locationError = \"Could not find address for location\";\n  }\n\n  return {\n    nameError,\n    typeError,\n    addressError,\n    locationError,\n  };\n}\n\nfunction hasErrors(formDataError: FormDataErrors) {\n  let errorFound = false;\n\n  let key: keyof typeof formDataError;\n  for (key in formDataError) {\n    if (!!formDataError[key]) errorFound = true;\n  }\n\n  return errorFound;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/API/Google Routes/Directions.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useOnClickOutside.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useSelectedListing.tsx",["400","401","402"],"/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/SessionContext.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useSelectedPointOfInterest.tsx",["403","404"],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingsListItem.tsx",["405","406"],"import React from \"react\";\nimport classNames from \"classnames\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport { Listing } from \"../../../../Models/Session\";\nimport { ListingContext } from \"../../../../Contexts/ListingContext\";\nimport ListingDropdown from \"./ListingDropdown\";\nimport styles from \"./ListingsListItem.module.scss\";\nimport ListingStatusBadge from \"./ListingStatusBadge\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function ListingsListItem({ listing }: IListingsListItemProps) {\n  const {\n    setSelectedListing,\n    hoveredListingIds,\n    addHoveredListingId,\n    removeHoveredListingId,\n  } = React.useContext(ListingContext);\n\n  const [menuOpen, setMenuOpen] = React.useState(false);\n\n  const hovered = React.useMemo(\n    () => hoveredListingIds.includes(listing.id),\n    [listing.id, hoveredListingIds]\n  );\n\n  React.useEffect(() => {\n    return () => {\n      removeHoveredListingId(listing.id);\n    };\n  }, []);\n\n  function handleClick() {\n    setSelectedListing(listing);\n  }\n\n  function handleListingHover() {\n    addHoveredListingId(listing.id);\n  }\n\n  function handleListingUnhover() {\n    removeHoveredListingId(listing.id);\n  }\n\n  return (\n    <ListGroupItem\n      className={styles.listItem}\n      onClick={handleClick}\n      onMouseEnter={handleListingHover}\n      onMouseLeave={handleListingUnhover}\n      onContextMenu={(e) => {\n        e.preventDefault();\n        setMenuOpen(true);\n      }}\n    >\n      <div>\n        <div className=\"d-flex w-100 mb-1\">\n          <span className={classNames(\"flex-grow-1\", styles.name)}>\n            {listing.name}\n            {hovered && listing.link && (\n              <a\n                className=\"pl-3\"\n                href={listing.link}\n                target=\"_blank\"\n                onClick={(e) => e.stopPropagation()}\n              >\n                <FontAwesomeIcon icon={faExternalLinkAlt} />\n              </a>\n            )}\n          </span>\n          <span>${listing.price}</span>\n        </div>\n        <div className={styles.details}>\n          <div className=\"text-left\">{`${listing.numberOfBedrooms} bd | \n          ${listing.numberOfBathrooms} ba | ${\n            listing.squareFootage ?? \"--\"\n          } sqft`}</div>\n          <ListingStatusBadge status={listing.status} />\n        </div>\n      </div>\n      <div className={styles.moreButton}>\n        <ListingDropdown\n          listing={listing}\n          open={menuOpen}\n          toggleOpen={setMenuOpen}\n        />\n      </div>\n    </ListGroupItem>\n  );\n}\n\ninterface IListingsListItemProps {\n  listing: Listing;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingFilters.tsx",["407","408"],"import React from \"react\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport { ListingContext } from \"../../../../Contexts/ListingContext\";\nimport ListingStatusDropdown from \"./ListingStatusDropdown\";\n\nexport default function ListingFilters() {\n  const { filterSettings, setFilterSettings } =\n    React.useContext(ListingContext);\n\n  const [localFilterSettings, setLocalFilterSettings] =\n    React.useState(filterSettings);\n\n  const handleClearClick = () => {\n    setLocalFilterSettings({\n      beds: undefined,\n      baths: undefined,\n      minPrice: undefined,\n      maxPrice: undefined,\n      statuses: [],\n    });\n    setFilterSettings({\n      beds: undefined,\n      baths: undefined,\n      minPrice: undefined,\n      maxPrice: undefined,\n      statuses: [],\n    });\n  };\n\n  const handleApplyClick = () => {\n    setFilterSettings(localFilterSettings);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    const numericVal = getNumericVal(value);\n\n    setLocalFilterSettings((prev) => ({ ...prev, [name]: numericVal }));\n  };\n\n  const getNumericVal = (newVal: string | undefined): number | undefined => {\n    if (newVal == \"\") return undefined;\n\n    const num = Number(newVal);\n    if (num === Number.NaN) return undefined;\n    return num;\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex mt-2\">\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Beds</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            name=\"beds\"\n            type=\"number\"\n            value={\n              localFilterSettings.beds === undefined\n                ? \"\"\n                : localFilterSettings.beds\n            }\n            onChange={handleChange}\n          />\n        </InputGroup>\n        <InputGroup className=\"ml-1\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>Baths</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            name=\"baths\"\n            type=\"number\"\n            value={\n              localFilterSettings.baths === undefined\n                ? \"\"\n                : localFilterSettings.baths\n            }\n            onChange={handleChange}\n          />\n        </InputGroup>\n      </div>\n      <div className=\"d-flex mt-2\">\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Min $</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            name=\"minPrice\"\n            type=\"number\"\n            value={\n              localFilterSettings.minPrice === undefined\n                ? \"\"\n                : localFilterSettings.minPrice\n            }\n            onChange={handleChange}\n          />\n        </InputGroup>\n        <InputGroup className=\"ml-1\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>Max $</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            name=\"maxPrice\"\n            type=\"number\"\n            value={\n              localFilterSettings.maxPrice === undefined\n                ? \"\"\n                : localFilterSettings.maxPrice\n            }\n            onChange={handleChange}\n          />\n        </InputGroup>\n      </div>\n      <div className=\"mt-2\">\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Status</InputGroup.Text>\n          </InputGroup.Prepend>\n          <ListingStatusDropdown\n            selected={localFilterSettings.statuses}\n            multiple={true}\n            onChange={(selected) =>\n              setLocalFilterSettings((prev) => ({\n                ...prev,\n                statuses: selected,\n              }))\n            }\n          />\n        </InputGroup>\n      </div>\n      <div className=\"d-flex mt-2 justify-content-end\">\n        <Button onClick={handleApplyClick}>Apply</Button>\n        <Button className=\"ml-1\" onClick={handleClearClick}>\n          Clear\n        </Button>\n      </div>\n    </div>\n  );\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Roommates/RoommatesPanel.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/API/AWS Cognito/index.tsx",["409","410"],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Roommates/AddRoommateDialog.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Roommates/RoommatesList.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Components/FittedImage.tsx",["411"],"import React from \"react\";\nimport styles from \"./FittedImage.module.scss\";\nimport classNames from \"classnames\";\n\nexport default function FittedImage(\n  props: React.DetailedHTMLProps<\n    React.ImgHTMLAttributes<HTMLImageElement>,\n    HTMLImageElement\n  >\n) {\n  const className = props.className ?? \"\";\n\n  return (\n    <div className={classNames(className, styles.imageContainer)}>\n      <img {...props} className={styles.image} />\n    </div>\n  );\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingPicturesDialog.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Crawlers/index.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Components/Tooltip.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingDropdown.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/PointsOfInterest/PointOfInterestDropdown.tsx",["412"],"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Dropdown from \"react-bootstrap/esm/Dropdown\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\nimport { useUpdateSession, useOnClickOutside } from \"../../../../Utils/Hooks\";\nimport { SessionContext } from \"../../../../Contexts/SessionContext\";\nimport { PointOfInterest } from \"../../../../Models/Session\";\nimport { PointOfInterestContext } from \"../../../../Contexts/PointOfInterestContext\";\nimport { useNavigateWithFocus } from \"../../../../Utils/Hooks/useLayoutElementFocus\";\n\nexport default function PointOfInterestDropdown({ pointOfInterest }: Props) {\n  const { session } = React.useContext(SessionContext);\n  const { setSelectedPointOfInterest } = React.useContext(\n    PointOfInterestContext\n  );\n\n  const dropdownRef = React.useRef(null);\n\n  const [open, setOpen] = React.useState(false);\n\n  const updateSessionMutation = useUpdateSession();\n  const navigate = useNavigateWithFocus();\n  useOnClickOutside(dropdownRef, () => setOpen(false));\n\n  const handleToggleClick = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    e.stopPropagation();\n    setOpen((prev) => !prev);\n  };\n\n  const handleEditClick = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    handleItemClick(e);\n    setSelectedPointOfInterest(pointOfInterest, { edit: true });\n  };\n\n  const handleDeleteClick = async (\n    e: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    handleItemClick(e);\n\n    await updateSessionMutation.mutateAsync({\n      ...session,\n      pointsOfInterest: session.pointsOfInterest!.filter(\n        (p) => p.id !== pointOfInterest.id\n      ),\n    });\n  };\n\n  const handleSetDirectionsDestinationClick = (\n    e: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    handleItemClick(e);\n    navigate(\"./../Directions\", \"sidebar\", {\n      state: { destination: pointOfInterest.address },\n    });\n  };\n\n  const handleSetDirectionsOriginClick = (\n    e: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    handleItemClick(e);\n    navigate(\"./../Directions\", \"sidebar\", {\n      state: { origin: pointOfInterest.address },\n    });\n  };\n\n  const handleSetTravelTimeOriginClick = (\n    e: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    handleItemClick(e);\n    navigate(\"./../TravelTime\", \"sidebar\", {\n      state: { origin: pointOfInterest.address },\n    });\n  };\n\n  const handleItemClick = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    e.stopPropagation();\n    setOpen((prev) => !prev);\n  };\n\n  return (\n    <Dropdown show={open} ref={dropdownRef}>\n      <Dropdown.Toggle\n        as={CustomToggle}\n        id=\"dropdown-custom-components\"\n        onClick={handleToggleClick}\n      />\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={handleEditClick}>Edit</Dropdown.Item>\n        <Dropdown.Item className=\"text-danger\" onClick={handleDeleteClick}>\n          Delete\n        </Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Header>Directions</Dropdown.Header>\n        <Dropdown.Item onClick={handleSetDirectionsOriginClick}>\n          Set Origin\n        </Dropdown.Item>\n        <Dropdown.Item onClick={handleSetDirectionsDestinationClick}>\n          Set Destination\n        </Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Header>Travel Time</Dropdown.Header>\n        <Dropdown.Item onClick={handleSetTravelTimeOriginClick}>\n          Set Origin\n        </Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\ninterface Props {\n  pointOfInterest: PointOfInterest;\n}\n\nconst CustomToggle = React.forwardRef<\n  HTMLDivElement | null,\n  {\n    children: React.ReactNode;\n    onClick: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  }\n>(({ children, onClick }, ref) => (\n  <div\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    <FontAwesomeIcon color=\"gray\" icon={faEllipsisV} size=\"lg\" />\n    {children}\n  </div>\n));\n","/Users/mattbalnis/Repos/PropertyPro2/src/graphql/subscriptions.ts",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/TravelTime/TravelTimePanel.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/TravelTime/TravelTimeResult.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/TravelTime/TravelTimeForm.tsx",["413"],"import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { SearchType } from \"../../../../API/Google Places\";\nimport AddressSearchBar from \"../../../../Components/AddressSearchBar\";\nimport TravelModeButton, { getIcon } from \"../Directions/TravelModeButton\";\nimport { TravelTimeConfig } from \"../../../../API/Travel Time\";\nimport { useLocation } from \"react-router-dom\";\n\n// copying for shorthand\ntype TravelMode = google.maps.TravelMode;\nconst TravelMode = { ...google.maps.TravelMode };\n\nexport default function TravelTimeForm({ onAddClick }: Props) {\n  const [origin, setOrigin] = React.useState<string>();\n  const [travelTimeInMinutes, setTravelTimeInMinutes] =\n    React.useState<number>();\n  const [travelMode, setTravelMode] = React.useState<TravelMode>(\n    TravelMode.DRIVING\n  );\n  const [departureTime, setDepartureTime] = React.useState(\"08:30\");\n\n  const state = useLocation().state as\n    | {\n        origin?: string;\n      }\n    | undefined;\n\n  // update origin when state is provided via navigation\n  React.useEffect(() => {\n    state && state.origin && setOrigin(state.origin);\n  }, [state]);\n\n  const handleAddClick = () => {\n    if (!origin || !travelTimeInMinutes) return;\n\n    const departureTimeDate = new Date();\n    const [hours, minutes] = departureTime\n      .split(\":\")\n      .map((val) => Number.parseFloat(val));\n    departureTimeDate.setHours(hours, minutes, 0, 0);\n    onAddClick({\n      address: origin,\n      travelMode,\n      travelTimeInMinutes,\n      departureTime: departureTimeDate,\n    });\n    resetOptions();\n  };\n\n  const resetOptions = () => {\n    setOrigin(undefined);\n    setTravelMode(TravelMode.DRIVING);\n    setTravelTimeInMinutes(undefined);\n  };\n\n  return (\n    <Form>\n      <div className=\"d-flex align-items-center\">\n        <div className=\"flex-grow-1\">\n          <Form.Group controlId=\"directionsForm.Origin\">\n            <Form.Label>Origin</Form.Label>\n            <AddressSearchBar\n              placeholder=\"Origin of trip\"\n              isInvalid={false}\n              searchType={SearchType.Address}\n              selected={origin}\n              onSelect={(address) => setOrigin(address ? address : undefined)}\n            />\n          </Form.Group>\n          <div className=\"d-flex w-100\">\n            <Form.Group className=\"flex-grow-1 mr-1\">\n              <Form.Label>Max Travel Time</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"travel time (minutes)\"\n                value={travelTimeInMinutes ?? \"\"}\n                onChange={(e: any) => setTravelTimeInMinutes(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Departure Time</Form.Label>\n              <Form.Control\n                type=\"time\"\n                placeholder=\"departure time\"\n                value={departureTime}\n                onChange={(e) => setDepartureTime(e.target.value)}\n              />\n            </Form.Group>\n          </div>\n        </div>\n      </div>\n      <div className=\"d-flex w-100 align-items-center\">\n        <div className=\"d-flex align-items-center flex-grow-1\">\n          {[\n            TravelMode.DRIVING,\n            TravelMode.TRANSIT,\n            TravelMode.WALKING,\n            TravelMode.BICYCLING,\n          ].map((mode) => (\n            <TravelModeButton\n              key={mode}\n              icon={getIcon(mode)}\n              onClick={() => setTravelMode(mode)}\n              active={travelMode === mode}\n            />\n          ))}\n        </div>\n        <Button onClick={handleAddClick}>Add</Button>\n      </div>\n    </Form>\n  );\n}\n\ninterface Props {\n  onAddClick: (config: TravelTimeConfig) => void;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Utils/time.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Components/Polygon.tsx",["414"],"import React from \"react\";\nimport { MapContext } from \"../Contexts/MapContext\";\n\nconst DEFAULT_OPTIONS: Partial<google.maps.PolygonOptions> = {\n  strokeOpacity: 1,\n  strokeWeight: 2,\n  fillOpacity: 0.25,\n};\n\nexport default function Polygon({ options }: Props) {\n  const { map } = React.useContext(MapContext);\n\n  const polygonRef = React.useRef(\n    new google.maps.Polygon({ ...DEFAULT_OPTIONS, ...options })\n  );\n\n  // update Polygon map everytime global map changes\n  React.useEffect(() => {\n    map && polygonRef.current.setMap(map);\n  }, [map]);\n\n  // update Polygon options everytime options change\n  React.useEffect(() => {\n    polygonRef.current.setOptions(options);\n  }, [options]);\n\n  // remove polygon from display on component unmount\n  React.useEffect(() => {\n    return () => {\n      polygonRef.current.setMap(null);\n    };\n  }, []);\n\n  return null;\n}\n\ninterface Props {\n  options: google.maps.PolygonOptions;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/API/Travel Time/index.ts",["415"],"import axios from \"axios\";\nimport { geocodeByAddress } from \"../Google Places/Geocoding\";\n\nconst baseUrl = \"https://api.traveltimeapp.com/v4/time-map\";\n\nconst client = axios.create({\n  baseURL: baseUrl,\n  headers: {\n    \"X-Application-Id\": process.env.REACT_APP_TRAVEL_TIME_APP_ID,\n    \"X-Api-Key\": process.env.REACT_APP_TRAVEL_TIME_API_KEY,\n  },\n});\n\nexport interface TravelTimeConfig {\n  address: string;\n  travelMode: google.maps.TravelMode;\n  travelTimeInMinutes: number;\n  departureTime: Date;\n}\n\nexport interface TravelTimeAPIPolygon {\n  shapes: Coordinates[];\n  holes: Coordinates[];\n}\n\nexport async function getTravelTimePolygon(\n  config: TravelTimeConfig\n): Promise<TravelTimeAPIPolygon> {\n  const { address, travelMode, travelTimeInMinutes, departureTime } = config;\n  const geocodeResults = await geocodeByAddress(address);\n  if (geocodeResults.length === 0)\n    throw new Error(\"Could not find location of address\");\n  const addressInfo = geocodeResults[0];\n\n  const res = await client.post(\"\", {\n    departure_searches: [\n      {\n        id: \"isochrone-0\",\n        coords: addressInfo.location,\n        travel_time: travelTimeInMinutes * 60,\n        transportation: {\n          type: travelModeFromGoogleMaps(travelMode),\n        },\n        departure_time: departureTime.toISOString(),\n      },\n    ],\n  });\n\n  return res.data.results[0];\n}\n\nfunction travelModeFromGoogleMaps(travelMode: google.maps.TravelMode): string {\n  switch (travelMode) {\n    case google.maps.TravelMode.BICYCLING:\n      return \"cycling\";\n    case google.maps.TravelMode.WALKING:\n      return \"walking\";\n    case google.maps.TravelMode.TRANSIT:\n      return \"public_transport\";\n    default:\n      return \"driving\";\n  }\n}\n\nexport function toGoogleMapsPolygonPath(\n  travelTimePolygon: TravelTimeAPIPolygon\n) {\n  const color = \"#0000ff\";\n\n  const paths = travelTimePolygon.shapes\n    .map(function (polygon: any) {\n      var shell = polygon.shell;\n      var holes = polygon.holes;\n      return [shell].concat(holes);\n    })\n    .map((x: any) => x[0]);\n\n  return paths;\n}\n","/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingStatusDropdown.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Utils/utils.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/Listings/ListingStatusBadge.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Pages/SessionViewer/Components/MapLayerControls.tsx",["416"],"/Users/mattbalnis/Repos/PropertyPro2/src/Contexts/LayoutContext.tsx",[],"/Users/mattbalnis/Repos/PropertyPro2/src/Utils/Hooks/useLayoutElementFocus.tsx",[],{"ruleId":"417","replacedBy":"418"},{"ruleId":"419","replacedBy":"420"},{"ruleId":"421","severity":1,"message":"422","line":18,"column":5,"nodeType":"423","messageId":"424","endLine":18,"endColumn":32},{"ruleId":"421","severity":1,"message":"425","line":24,"column":5,"nodeType":"423","messageId":"424","endLine":24,"endColumn":33},{"ruleId":"421","severity":1,"message":"426","line":14,"column":5,"nodeType":"423","messageId":"424","endLine":14,"endColumn":12},{"ruleId":"421","severity":1,"message":"427","line":3,"column":15,"nodeType":"423","messageId":"424","endLine":3,"endColumn":31},{"ruleId":"428","severity":1,"message":"429","line":104,"column":6,"nodeType":"430","endLine":104,"endColumn":15,"suggestions":"431"},{"ruleId":"421","severity":1,"message":"432","line":20,"column":3,"nodeType":"423","messageId":"424","endLine":20,"endColumn":17},{"ruleId":"421","severity":1,"message":"433","line":6,"column":21,"nodeType":"423","messageId":"424","endLine":6,"endColumn":35},{"ruleId":"428","severity":1,"message":"434","line":54,"column":6,"nodeType":"430","endLine":54,"endColumn":15,"suggestions":"435"},{"ruleId":"428","severity":1,"message":"434","line":73,"column":6,"nodeType":"430","endLine":73,"endColumn":48,"suggestions":"436"},{"ruleId":"421","severity":1,"message":"426","line":26,"column":5,"nodeType":"423","messageId":"424","endLine":26,"endColumn":12},{"ruleId":"421","severity":1,"message":"437","line":1,"column":8,"nodeType":"423","messageId":"424","endLine":1,"endColumn":13},{"ruleId":"421","severity":1,"message":"438","line":49,"column":13,"nodeType":"423","messageId":"424","endLine":49,"endColumn":21},{"ruleId":"421","severity":1,"message":"438","line":86,"column":13,"nodeType":"423","messageId":"424","endLine":86,"endColumn":21},{"ruleId":"421","severity":1,"message":"439","line":6,"column":10,"nodeType":"423","messageId":"424","endLine":6,"endColumn":32},{"ruleId":"440","severity":1,"message":"441","line":9,"column":16,"nodeType":"423","messageId":"442","endLine":9,"endColumn":26},{"ruleId":"440","severity":1,"message":"441","line":14,"column":16,"nodeType":"423","messageId":"442","endLine":14,"endColumn":26},{"ruleId":"428","severity":1,"message":"443","line":20,"column":6,"nodeType":"430","endLine":20,"endColumn":8,"suggestions":"444"},{"ruleId":"428","severity":1,"message":"445","line":29,"column":6,"nodeType":"430","endLine":29,"endColumn":30,"suggestions":"446"},{"ruleId":"421","severity":1,"message":"447","line":14,"column":10,"nodeType":"423","messageId":"424","endLine":14,"endColumn":21},{"ruleId":"421","severity":1,"message":"447","line":3,"column":10,"nodeType":"423","messageId":"424","endLine":3,"endColumn":21},{"ruleId":"421","severity":1,"message":"447","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":21},{"ruleId":"448","severity":1,"message":"449","line":18,"column":7,"nodeType":"423","messageId":"450","endLine":18,"endColumn":17},{"ruleId":"428","severity":1,"message":"451","line":70,"column":6,"nodeType":"430","endLine":70,"endColumn":8,"suggestions":"452"},{"ruleId":"421","severity":1,"message":"453","line":14,"column":8,"nodeType":"423","messageId":"424","endLine":14,"endColumn":19},{"ruleId":"448","severity":1,"message":"449","line":15,"column":7,"nodeType":"423","messageId":"450","endLine":15,"endColumn":17},{"ruleId":"421","severity":1,"message":"439","line":7,"column":3,"nodeType":"423","messageId":"424","endLine":7,"endColumn":25},{"ruleId":"421","severity":1,"message":"454","line":193,"column":7,"nodeType":"423","messageId":"424","endLine":193,"endColumn":53},{"ruleId":"421","severity":1,"message":"453","line":2,"column":8,"nodeType":"423","messageId":"424","endLine":2,"endColumn":19},{"ruleId":"421","severity":1,"message":"447","line":3,"column":20,"nodeType":"423","messageId":"424","endLine":3,"endColumn":31},{"ruleId":"428","severity":1,"message":"455","line":30,"column":5,"nodeType":"430","endLine":30,"endColumn":14,"suggestions":"456"},{"ruleId":"421","severity":1,"message":"447","line":3,"column":20,"nodeType":"423","messageId":"424","endLine":3,"endColumn":31},{"ruleId":"428","severity":1,"message":"455","line":34,"column":5,"nodeType":"430","endLine":34,"endColumn":14,"suggestions":"457"},{"ruleId":"428","severity":1,"message":"458","line":31,"column":6,"nodeType":"430","endLine":31,"endColumn":8,"suggestions":"459"},{"ruleId":"460","severity":1,"message":"461","line":61,"column":15,"nodeType":"462","messageId":"463","endLine":66,"endColumn":16,"fix":"464"},{"ruleId":"465","severity":1,"message":"466","line":44,"column":16,"nodeType":"467","messageId":"468","endLine":44,"endColumn":18},{"ruleId":"469","severity":1,"message":"470","line":47,"column":9,"nodeType":"467","messageId":"471","endLine":47,"endColumn":27},{"ruleId":"472","severity":1,"message":"473","line":21,"column":26,"nodeType":"474","messageId":"475","endLine":21,"endColumn":27,"suggestions":"476"},{"ruleId":"472","severity":1,"message":"473","line":21,"column":36,"nodeType":"474","messageId":"475","endLine":21,"endColumn":37,"suggestions":"477"},{"ruleId":"478","severity":1,"message":"479","line":15,"column":7,"nodeType":"462","endLine":15,"endColumn":50},{"ruleId":"421","severity":1,"message":"447","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":21},{"ruleId":"448","severity":1,"message":"449","line":12,"column":7,"nodeType":"423","messageId":"450","endLine":12,"endColumn":17},{"ruleId":"428","severity":1,"message":"480","line":30,"column":18,"nodeType":"423","endLine":30,"endColumn":25},{"ruleId":"421","severity":1,"message":"481","line":68,"column":9,"nodeType":"423","messageId":"424","endLine":68,"endColumn":14},{"ruleId":"465","severity":1,"message":"482","line":55,"column":25,"nodeType":"467","messageId":"468","endLine":55,"endColumn":27},"no-native-reassign",["483"],"no-negated-in-lhs",["484"],"@typescript-eslint/no-unused-vars","'autoGeneratedRedirectSignIn' is assigned a value but never used.","Identifier","unusedVar","'autoGeneratedRedirectSignOut' is assigned a value but never used.","'isError' is assigned a value but never used.","'graphqlOperation' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'queryClient'. Either include it or remove the dependency array.","ArrayExpression",["485"],"'faMapMarkedAlt' is defined but never used.","'MapMarkerProps' is defined but never used.","React Hook React.useEffect has missing dependencies: 'setCenter' and 'setZoom'. Either include them or remove the dependency array.",["486"],["487"],"'React' is defined but never used.","'response' is assigned a value but never used.","'AutoCompleteSuggestion' is defined but never used.","@typescript-eslint/no-use-before-define","'MarkerType' was used before it was defined.","noUseBeforeDefine","React Hook React.useEffect has a missing dependency: 'clearDirections'. Either include it or remove the dependency array.",["488"],"React Hook React.useEffect has missing dependencies: 'clearDirections' and 'showDirections'. Either include them or remove the dependency array.",["489"],"'useNavigate' is defined but never used.","@typescript-eslint/no-redeclare","'TravelMode' is already defined.","redeclared","React Hook React.useEffect has missing dependencies: 'pointOfInterest.id' and 'removeHoveredPointOfInterestId'. Either include them or remove the dependency array.",["490"],"'SessionData' is defined but never used.","'DEFAULT_FORM_DATA' is assigned a value but never used.","React Hook React.useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["491"],["492"],"React Hook React.useEffect has missing dependencies: 'listing.id' and 'removeHoveredListingId'. Either include them or remove the dependency array.",["493"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"494","text":"495"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","no-useless-escape","Unnecessary escape character: \\\".","TemplateElement","unnecessaryEscape",["496","497"],["498","499"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The ref value 'polygonRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'polygonRef.current' to a variable inside the effect, and use that variable in the cleanup function.","'color' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"512","fix":"514"},{"desc":"515","fix":"516"},[1920,1920]," rel=\"noreferrer\"",{"messageId":"517","fix":"518","desc":"519"},{"messageId":"520","fix":"521","desc":"522"},{"messageId":"517","fix":"523","desc":"519"},{"messageId":"520","fix":"524","desc":"522"},"Update the dependencies array to be: [queryClient, session]",{"range":"525","text":"526"},"Update the dependencies array to be: [session, setCenter, setZoom]",{"range":"527","text":"528"},"Update the dependencies array to be: [selectedListing, selectedPointOfInterest, setCenter, setZoom]",{"range":"529","text":"530"},"Update the dependencies array to be: [clearDirections]",{"range":"531","text":"532"},"Update the dependencies array to be: [clearDirections, directions, routeIndex, showDirections]",{"range":"533","text":"534"},"Update the dependencies array to be: [pointOfInterest.id, removeHoveredPointOfInterestId]",{"range":"535","text":"536"},"Update the dependencies array to be: [navigate, session.id]",{"range":"537","text":"538"},{"range":"539","text":"538"},"Update the dependencies array to be: [listing.id, removeHoveredListingId]",{"range":"540","text":"541"},"removeEscape",{"range":"542","text":"543"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"544","text":"545"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"546","text":"543"},{"range":"547","text":"545"},[3997,4006],"[queryClient, session]",[1975,1984],"[session, setCenter, setZoom]",[2479,2521],"[selectedListing, selectedPointOfInterest, setCenter, setZoom]",[850,852],"[clearDirections]",[1046,1070],"[clearDirections, directions, routeIndex, showDirections]",[2290,2292],"[pointOfInterest.id, removeHoveredPointOfInterestId]",[1087,1096],"[navigate, session.id]",[1190,1199],[1055,1057],"[listing.id, removeHoveredListingId]",[743,744],"",[743,743],"\\",[753,754],[753,753]]